
DIO_INTERFACE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000083e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000900  00000000  00000000  00000894  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000916  00000000  00000000  00001194  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 b5 03 	call	0x76a	; 0x76a <main>
  64:	0c 94 1d 04 	jmp	0x83a	; 0x83a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_setPinDirection>:
/* MCAL */
#include "DIO_interface.h"
#include "DIO_private.h"

void DIO_setPinDirection(u8 PortId, u8 PinId, u8 PinDirection)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_setPinDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_setPinDirection+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && ((PinDirection==DIO_PIN_OUTPUT)||(PinDirection==DIO_PIN_INPUT)))
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	84 30       	cpi	r24, 0x04	; 4
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_setPinDirection+0x1c>
  86:	dc c0       	rjmp	.+440    	; 0x240 <DIO_setPinDirection+0x1d4>
  88:	8a 81       	ldd	r24, Y+2	; 0x02
  8a:	88 30       	cpi	r24, 0x08	; 8
  8c:	08 f0       	brcs	.+2      	; 0x90 <DIO_setPinDirection+0x24>
  8e:	d8 c0       	rjmp	.+432    	; 0x240 <DIO_setPinDirection+0x1d4>
  90:	8b 81       	ldd	r24, Y+3	; 0x03
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	21 f0       	breq	.+8      	; 0x9e <DIO_setPinDirection+0x32>
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	88 23       	and	r24, r24
  9a:	09 f0       	breq	.+2      	; 0x9e <DIO_setPinDirection+0x32>
  9c:	d1 c0       	rjmp	.+418    	; 0x240 <DIO_setPinDirection+0x1d4>
	{
		switch(PortId)
  9e:	89 81       	ldd	r24, Y+1	; 0x01
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3d 83       	std	Y+5, r19	; 0x05
  a6:	2c 83       	std	Y+4, r18	; 0x04
  a8:	8c 81       	ldd	r24, Y+4	; 0x04
  aa:	9d 81       	ldd	r25, Y+5	; 0x05
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	09 f4       	brne	.+2      	; 0xb4 <DIO_setPinDirection+0x48>
  b2:	43 c0       	rjmp	.+134    	; 0x13a <DIO_setPinDirection+0xce>
  b4:	2c 81       	ldd	r18, Y+4	; 0x04
  b6:	3d 81       	ldd	r19, Y+5	; 0x05
  b8:	22 30       	cpi	r18, 0x02	; 2
  ba:	31 05       	cpc	r19, r1
  bc:	2c f4       	brge	.+10     	; 0xc8 <DIO_setPinDirection+0x5c>
  be:	8c 81       	ldd	r24, Y+4	; 0x04
  c0:	9d 81       	ldd	r25, Y+5	; 0x05
  c2:	00 97       	sbiw	r24, 0x00	; 0
  c4:	71 f0       	breq	.+28     	; 0xe2 <DIO_setPinDirection+0x76>
  c6:	bc c0       	rjmp	.+376    	; 0x240 <DIO_setPinDirection+0x1d4>
  c8:	2c 81       	ldd	r18, Y+4	; 0x04
  ca:	3d 81       	ldd	r19, Y+5	; 0x05
  cc:	22 30       	cpi	r18, 0x02	; 2
  ce:	31 05       	cpc	r19, r1
  d0:	09 f4       	brne	.+2      	; 0xd4 <DIO_setPinDirection+0x68>
  d2:	5f c0       	rjmp	.+190    	; 0x192 <DIO_setPinDirection+0x126>
  d4:	8c 81       	ldd	r24, Y+4	; 0x04
  d6:	9d 81       	ldd	r25, Y+5	; 0x05
  d8:	83 30       	cpi	r24, 0x03	; 3
  da:	91 05       	cpc	r25, r1
  dc:	09 f4       	brne	.+2      	; 0xe0 <DIO_setPinDirection+0x74>
  de:	85 c0       	rjmp	.+266    	; 0x1ea <DIO_setPinDirection+0x17e>
  e0:	af c0       	rjmp	.+350    	; 0x240 <DIO_setPinDirection+0x1d4>
	    {
	    	case DIO_PORTA: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
  e2:	8b 81       	ldd	r24, Y+3	; 0x03
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	a1 f4       	brne	.+40     	; 0x110 <DIO_setPinDirection+0xa4>
	    	{
	    		SET_BIT(DDRA,PinId);
  e8:	aa e3       	ldi	r26, 0x3A	; 58
  ea:	b0 e0       	ldi	r27, 0x00	; 0
  ec:	ea e3       	ldi	r30, 0x3A	; 58
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	48 2f       	mov	r20, r24
  f4:	8a 81       	ldd	r24, Y+2	; 0x02
  f6:	28 2f       	mov	r18, r24
  f8:	30 e0       	ldi	r19, 0x00	; 0
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 2e       	mov	r0, r18
 100:	02 c0       	rjmp	.+4      	; 0x106 <DIO_setPinDirection+0x9a>
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	0a 94       	dec	r0
 108:	e2 f7       	brpl	.-8      	; 0x102 <DIO_setPinDirection+0x96>
 10a:	84 2b       	or	r24, r20
 10c:	8c 93       	st	X, r24
 10e:	98 c0       	rjmp	.+304    	; 0x240 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRA,PinId);
 110:	aa e3       	ldi	r26, 0x3A	; 58
 112:	b0 e0       	ldi	r27, 0x00	; 0
 114:	ea e3       	ldi	r30, 0x3A	; 58
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	48 2f       	mov	r20, r24
 11c:	8a 81       	ldd	r24, Y+2	; 0x02
 11e:	28 2f       	mov	r18, r24
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 2e       	mov	r0, r18
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_setPinDirection+0xc2>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_setPinDirection+0xbe>
 132:	80 95       	com	r24
 134:	84 23       	and	r24, r20
 136:	8c 93       	st	X, r24
 138:	83 c0       	rjmp	.+262    	; 0x240 <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTB: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
 13a:	8b 81       	ldd	r24, Y+3	; 0x03
 13c:	81 30       	cpi	r24, 0x01	; 1
 13e:	a1 f4       	brne	.+40     	; 0x168 <DIO_setPinDirection+0xfc>
	    	{
	    		SET_BIT(DDRB,PinId);
 140:	a7 e3       	ldi	r26, 0x37	; 55
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	e7 e3       	ldi	r30, 0x37	; 55
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	48 2f       	mov	r20, r24
 14c:	8a 81       	ldd	r24, Y+2	; 0x02
 14e:	28 2f       	mov	r18, r24
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 2e       	mov	r0, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <DIO_setPinDirection+0xf2>
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <DIO_setPinDirection+0xee>
 162:	84 2b       	or	r24, r20
 164:	8c 93       	st	X, r24
 166:	6c c0       	rjmp	.+216    	; 0x240 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRB,PinId);
 168:	a7 e3       	ldi	r26, 0x37	; 55
 16a:	b0 e0       	ldi	r27, 0x00	; 0
 16c:	e7 e3       	ldi	r30, 0x37	; 55
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	48 2f       	mov	r20, r24
 174:	8a 81       	ldd	r24, Y+2	; 0x02
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 2e       	mov	r0, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_setPinDirection+0x11a>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	0a 94       	dec	r0
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_setPinDirection+0x116>
 18a:	80 95       	com	r24
 18c:	84 23       	and	r24, r20
 18e:	8c 93       	st	X, r24
 190:	57 c0       	rjmp	.+174    	; 0x240 <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTC: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
 192:	8b 81       	ldd	r24, Y+3	; 0x03
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	a1 f4       	brne	.+40     	; 0x1c0 <DIO_setPinDirection+0x154>
	    	{
	    		SET_BIT(DDRC,PinId);
 198:	a4 e3       	ldi	r26, 0x34	; 52
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	e4 e3       	ldi	r30, 0x34	; 52
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	48 2f       	mov	r20, r24
 1a4:	8a 81       	ldd	r24, Y+2	; 0x02
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 2e       	mov	r0, r18
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_setPinDirection+0x14a>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	0a 94       	dec	r0
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_setPinDirection+0x146>
 1ba:	84 2b       	or	r24, r20
 1bc:	8c 93       	st	X, r24
 1be:	40 c0       	rjmp	.+128    	; 0x240 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRC,PinId);
 1c0:	a4 e3       	ldi	r26, 0x34	; 52
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	e4 e3       	ldi	r30, 0x34	; 52
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	48 2f       	mov	r20, r24
 1cc:	8a 81       	ldd	r24, Y+2	; 0x02
 1ce:	28 2f       	mov	r18, r24
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 2e       	mov	r0, r18
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_setPinDirection+0x172>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	0a 94       	dec	r0
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_setPinDirection+0x16e>
 1e2:	80 95       	com	r24
 1e4:	84 23       	and	r24, r20
 1e6:	8c 93       	st	X, r24
 1e8:	2b c0       	rjmp	.+86     	; 0x240 <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTD: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
 1ea:	8b 81       	ldd	r24, Y+3	; 0x03
 1ec:	81 30       	cpi	r24, 0x01	; 1
 1ee:	a1 f4       	brne	.+40     	; 0x218 <DIO_setPinDirection+0x1ac>
	    	{
	    		SET_BIT(DDRD,PinId);
 1f0:	a1 e3       	ldi	r26, 0x31	; 49
 1f2:	b0 e0       	ldi	r27, 0x00	; 0
 1f4:	e1 e3       	ldi	r30, 0x31	; 49
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	48 2f       	mov	r20, r24
 1fc:	8a 81       	ldd	r24, Y+2	; 0x02
 1fe:	28 2f       	mov	r18, r24
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 2e       	mov	r0, r18
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_setPinDirection+0x1a2>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_setPinDirection+0x19e>
 212:	84 2b       	or	r24, r20
 214:	8c 93       	st	X, r24
 216:	14 c0       	rjmp	.+40     	; 0x240 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRD,PinId);
 218:	a1 e3       	ldi	r26, 0x31	; 49
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e1 e3       	ldi	r30, 0x31	; 49
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_setPinDirection+0x1ca>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_setPinDirection+0x1c6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	cf 91       	pop	r28
 24c:	df 91       	pop	r29
 24e:	08 95       	ret

00000250 <DIO_setPinValue>:


void DIO_setPinValue(u8 PortId, u8 PinId, u8 PinValue)
{
 250:	df 93       	push	r29
 252:	cf 93       	push	r28
 254:	00 d0       	rcall	.+0      	; 0x256 <DIO_setPinValue+0x6>
 256:	00 d0       	rcall	.+0      	; 0x258 <DIO_setPinValue+0x8>
 258:	0f 92       	push	r0
 25a:	cd b7       	in	r28, 0x3d	; 61
 25c:	de b7       	in	r29, 0x3e	; 62
 25e:	89 83       	std	Y+1, r24	; 0x01
 260:	6a 83       	std	Y+2, r22	; 0x02
 262:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && ((PinValue==DIO_PIN_HIGH)||(PinValue==DIO_PIN_LOW)))
 264:	89 81       	ldd	r24, Y+1	; 0x01
 266:	84 30       	cpi	r24, 0x04	; 4
 268:	08 f0       	brcs	.+2      	; 0x26c <DIO_setPinValue+0x1c>
 26a:	dc c0       	rjmp	.+440    	; 0x424 <DIO_setPinValue+0x1d4>
 26c:	8a 81       	ldd	r24, Y+2	; 0x02
 26e:	88 30       	cpi	r24, 0x08	; 8
 270:	08 f0       	brcs	.+2      	; 0x274 <DIO_setPinValue+0x24>
 272:	d8 c0       	rjmp	.+432    	; 0x424 <DIO_setPinValue+0x1d4>
 274:	8b 81       	ldd	r24, Y+3	; 0x03
 276:	81 30       	cpi	r24, 0x01	; 1
 278:	21 f0       	breq	.+8      	; 0x282 <DIO_setPinValue+0x32>
 27a:	8b 81       	ldd	r24, Y+3	; 0x03
 27c:	88 23       	and	r24, r24
 27e:	09 f0       	breq	.+2      	; 0x282 <DIO_setPinValue+0x32>
 280:	d1 c0       	rjmp	.+418    	; 0x424 <DIO_setPinValue+0x1d4>
	{
		switch(PortId)
 282:	89 81       	ldd	r24, Y+1	; 0x01
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	3d 83       	std	Y+5, r19	; 0x05
 28a:	2c 83       	std	Y+4, r18	; 0x04
 28c:	8c 81       	ldd	r24, Y+4	; 0x04
 28e:	9d 81       	ldd	r25, Y+5	; 0x05
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	91 05       	cpc	r25, r1
 294:	09 f4       	brne	.+2      	; 0x298 <DIO_setPinValue+0x48>
 296:	43 c0       	rjmp	.+134    	; 0x31e <DIO_setPinValue+0xce>
 298:	2c 81       	ldd	r18, Y+4	; 0x04
 29a:	3d 81       	ldd	r19, Y+5	; 0x05
 29c:	22 30       	cpi	r18, 0x02	; 2
 29e:	31 05       	cpc	r19, r1
 2a0:	2c f4       	brge	.+10     	; 0x2ac <DIO_setPinValue+0x5c>
 2a2:	8c 81       	ldd	r24, Y+4	; 0x04
 2a4:	9d 81       	ldd	r25, Y+5	; 0x05
 2a6:	00 97       	sbiw	r24, 0x00	; 0
 2a8:	71 f0       	breq	.+28     	; 0x2c6 <DIO_setPinValue+0x76>
 2aa:	bc c0       	rjmp	.+376    	; 0x424 <DIO_setPinValue+0x1d4>
 2ac:	2c 81       	ldd	r18, Y+4	; 0x04
 2ae:	3d 81       	ldd	r19, Y+5	; 0x05
 2b0:	22 30       	cpi	r18, 0x02	; 2
 2b2:	31 05       	cpc	r19, r1
 2b4:	09 f4       	brne	.+2      	; 0x2b8 <DIO_setPinValue+0x68>
 2b6:	5f c0       	rjmp	.+190    	; 0x376 <DIO_setPinValue+0x126>
 2b8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ba:	9d 81       	ldd	r25, Y+5	; 0x05
 2bc:	83 30       	cpi	r24, 0x03	; 3
 2be:	91 05       	cpc	r25, r1
 2c0:	09 f4       	brne	.+2      	; 0x2c4 <DIO_setPinValue+0x74>
 2c2:	85 c0       	rjmp	.+266    	; 0x3ce <DIO_setPinValue+0x17e>
 2c4:	af c0       	rjmp	.+350    	; 0x424 <DIO_setPinValue+0x1d4>
	    {
	    	case DIO_PORTA:
	    	if(DIO_PIN_HIGH == PinValue)
 2c6:	8b 81       	ldd	r24, Y+3	; 0x03
 2c8:	81 30       	cpi	r24, 0x01	; 1
 2ca:	a1 f4       	brne	.+40     	; 0x2f4 <DIO_setPinValue+0xa4>
	    	{
	    		SET_BIT(PORTA,PinId);
 2cc:	ab e3       	ldi	r26, 0x3B	; 59
 2ce:	b0 e0       	ldi	r27, 0x00	; 0
 2d0:	eb e3       	ldi	r30, 0x3B	; 59
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	80 81       	ld	r24, Z
 2d6:	48 2f       	mov	r20, r24
 2d8:	8a 81       	ldd	r24, Y+2	; 0x02
 2da:	28 2f       	mov	r18, r24
 2dc:	30 e0       	ldi	r19, 0x00	; 0
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	02 2e       	mov	r0, r18
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <DIO_setPinValue+0x9a>
 2e6:	88 0f       	add	r24, r24
 2e8:	99 1f       	adc	r25, r25
 2ea:	0a 94       	dec	r0
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <DIO_setPinValue+0x96>
 2ee:	84 2b       	or	r24, r20
 2f0:	8c 93       	st	X, r24
 2f2:	98 c0       	rjmp	.+304    	; 0x424 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTA,PinId);
 2f4:	ab e3       	ldi	r26, 0x3B	; 59
 2f6:	b0 e0       	ldi	r27, 0x00	; 0
 2f8:	eb e3       	ldi	r30, 0x3B	; 59
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	80 81       	ld	r24, Z
 2fe:	48 2f       	mov	r20, r24
 300:	8a 81       	ldd	r24, Y+2	; 0x02
 302:	28 2f       	mov	r18, r24
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	02 2e       	mov	r0, r18
 30c:	02 c0       	rjmp	.+4      	; 0x312 <DIO_setPinValue+0xc2>
 30e:	88 0f       	add	r24, r24
 310:	99 1f       	adc	r25, r25
 312:	0a 94       	dec	r0
 314:	e2 f7       	brpl	.-8      	; 0x30e <DIO_setPinValue+0xbe>
 316:	80 95       	com	r24
 318:	84 23       	and	r24, r20
 31a:	8c 93       	st	X, r24
 31c:	83 c0       	rjmp	.+262    	; 0x424 <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTB:
	    	if(DIO_PIN_HIGH == PinValue)
 31e:	8b 81       	ldd	r24, Y+3	; 0x03
 320:	81 30       	cpi	r24, 0x01	; 1
 322:	a1 f4       	brne	.+40     	; 0x34c <DIO_setPinValue+0xfc>
	    	{
	    		SET_BIT(PORTB,PinId);
 324:	a8 e3       	ldi	r26, 0x38	; 56
 326:	b0 e0       	ldi	r27, 0x00	; 0
 328:	e8 e3       	ldi	r30, 0x38	; 56
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	48 2f       	mov	r20, r24
 330:	8a 81       	ldd	r24, Y+2	; 0x02
 332:	28 2f       	mov	r18, r24
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	02 2e       	mov	r0, r18
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_setPinValue+0xf2>
 33e:	88 0f       	add	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	0a 94       	dec	r0
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_setPinValue+0xee>
 346:	84 2b       	or	r24, r20
 348:	8c 93       	st	X, r24
 34a:	6c c0       	rjmp	.+216    	; 0x424 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTB,PinId);
 34c:	a8 e3       	ldi	r26, 0x38	; 56
 34e:	b0 e0       	ldi	r27, 0x00	; 0
 350:	e8 e3       	ldi	r30, 0x38	; 56
 352:	f0 e0       	ldi	r31, 0x00	; 0
 354:	80 81       	ld	r24, Z
 356:	48 2f       	mov	r20, r24
 358:	8a 81       	ldd	r24, Y+2	; 0x02
 35a:	28 2f       	mov	r18, r24
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	02 2e       	mov	r0, r18
 364:	02 c0       	rjmp	.+4      	; 0x36a <DIO_setPinValue+0x11a>
 366:	88 0f       	add	r24, r24
 368:	99 1f       	adc	r25, r25
 36a:	0a 94       	dec	r0
 36c:	e2 f7       	brpl	.-8      	; 0x366 <DIO_setPinValue+0x116>
 36e:	80 95       	com	r24
 370:	84 23       	and	r24, r20
 372:	8c 93       	st	X, r24
 374:	57 c0       	rjmp	.+174    	; 0x424 <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTC:
	    	if(DIO_PIN_HIGH == PinValue)
 376:	8b 81       	ldd	r24, Y+3	; 0x03
 378:	81 30       	cpi	r24, 0x01	; 1
 37a:	a1 f4       	brne	.+40     	; 0x3a4 <DIO_setPinValue+0x154>
	    	{
	    		SET_BIT(PORTC,PinId);
 37c:	a5 e3       	ldi	r26, 0x35	; 53
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e5 e3       	ldi	r30, 0x35	; 53
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	80 81       	ld	r24, Z
 386:	48 2f       	mov	r20, r24
 388:	8a 81       	ldd	r24, Y+2	; 0x02
 38a:	28 2f       	mov	r18, r24
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	02 2e       	mov	r0, r18
 394:	02 c0       	rjmp	.+4      	; 0x39a <DIO_setPinValue+0x14a>
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	0a 94       	dec	r0
 39c:	e2 f7       	brpl	.-8      	; 0x396 <DIO_setPinValue+0x146>
 39e:	84 2b       	or	r24, r20
 3a0:	8c 93       	st	X, r24
 3a2:	40 c0       	rjmp	.+128    	; 0x424 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTC,PinId);
 3a4:	a5 e3       	ldi	r26, 0x35	; 53
 3a6:	b0 e0       	ldi	r27, 0x00	; 0
 3a8:	e5 e3       	ldi	r30, 0x35	; 53
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	80 81       	ld	r24, Z
 3ae:	48 2f       	mov	r20, r24
 3b0:	8a 81       	ldd	r24, Y+2	; 0x02
 3b2:	28 2f       	mov	r18, r24
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 2e       	mov	r0, r18
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_setPinValue+0x172>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	0a 94       	dec	r0
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_setPinValue+0x16e>
 3c6:	80 95       	com	r24
 3c8:	84 23       	and	r24, r20
 3ca:	8c 93       	st	X, r24
 3cc:	2b c0       	rjmp	.+86     	; 0x424 <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTD:
	    	if(DIO_PIN_HIGH == PinValue)
 3ce:	8b 81       	ldd	r24, Y+3	; 0x03
 3d0:	81 30       	cpi	r24, 0x01	; 1
 3d2:	a1 f4       	brne	.+40     	; 0x3fc <DIO_setPinValue+0x1ac>
	    	{
	    		SET_BIT(PORTD,PinId);
 3d4:	a2 e3       	ldi	r26, 0x32	; 50
 3d6:	b0 e0       	ldi	r27, 0x00	; 0
 3d8:	e2 e3       	ldi	r30, 0x32	; 50
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	80 81       	ld	r24, Z
 3de:	48 2f       	mov	r20, r24
 3e0:	8a 81       	ldd	r24, Y+2	; 0x02
 3e2:	28 2f       	mov	r18, r24
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 2e       	mov	r0, r18
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_setPinValue+0x1a2>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	0a 94       	dec	r0
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_setPinValue+0x19e>
 3f6:	84 2b       	or	r24, r20
 3f8:	8c 93       	st	X, r24
 3fa:	14 c0       	rjmp	.+40     	; 0x424 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTD,PinId);
 3fc:	a2 e3       	ldi	r26, 0x32	; 50
 3fe:	b0 e0       	ldi	r27, 0x00	; 0
 400:	e2 e3       	ldi	r30, 0x32	; 50
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	80 81       	ld	r24, Z
 406:	48 2f       	mov	r20, r24
 408:	8a 81       	ldd	r24, Y+2	; 0x02
 40a:	28 2f       	mov	r18, r24
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	02 2e       	mov	r0, r18
 414:	02 c0       	rjmp	.+4      	; 0x41a <DIO_setPinValue+0x1ca>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	0a 94       	dec	r0
 41c:	e2 f7       	brpl	.-8      	; 0x416 <DIO_setPinValue+0x1c6>
 41e:	80 95       	com	r24
 420:	84 23       	and	r24, r20
 422:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 424:	0f 90       	pop	r0
 426:	0f 90       	pop	r0
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	cf 91       	pop	r28
 430:	df 91       	pop	r29
 432:	08 95       	ret

00000434 <DIO_togglePinValue>:


void DIO_togglePinValue(u8 PortId, u8 PinId)
{
 434:	df 93       	push	r29
 436:	cf 93       	push	r28
 438:	00 d0       	rcall	.+0      	; 0x43a <DIO_togglePinValue+0x6>
 43a:	00 d0       	rcall	.+0      	; 0x43c <DIO_togglePinValue+0x8>
 43c:	cd b7       	in	r28, 0x3d	; 61
 43e:	de b7       	in	r29, 0x3e	; 62
 440:	89 83       	std	Y+1, r24	; 0x01
 442:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && (PinId<=7))
 444:	89 81       	ldd	r24, Y+1	; 0x01
 446:	84 30       	cpi	r24, 0x04	; 4
 448:	08 f0       	brcs	.+2      	; 0x44c <DIO_togglePinValue+0x18>
 44a:	72 c0       	rjmp	.+228    	; 0x530 <DIO_togglePinValue+0xfc>
 44c:	8a 81       	ldd	r24, Y+2	; 0x02
 44e:	88 30       	cpi	r24, 0x08	; 8
 450:	08 f0       	brcs	.+2      	; 0x454 <DIO_togglePinValue+0x20>
 452:	6e c0       	rjmp	.+220    	; 0x530 <DIO_togglePinValue+0xfc>
	{
		switch(PortId)
 454:	89 81       	ldd	r24, Y+1	; 0x01
 456:	28 2f       	mov	r18, r24
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	3c 83       	std	Y+4, r19	; 0x04
 45c:	2b 83       	std	Y+3, r18	; 0x03
 45e:	8b 81       	ldd	r24, Y+3	; 0x03
 460:	9c 81       	ldd	r25, Y+4	; 0x04
 462:	81 30       	cpi	r24, 0x01	; 1
 464:	91 05       	cpc	r25, r1
 466:	49 f1       	breq	.+82     	; 0x4ba <DIO_togglePinValue+0x86>
 468:	2b 81       	ldd	r18, Y+3	; 0x03
 46a:	3c 81       	ldd	r19, Y+4	; 0x04
 46c:	22 30       	cpi	r18, 0x02	; 2
 46e:	31 05       	cpc	r19, r1
 470:	2c f4       	brge	.+10     	; 0x47c <DIO_togglePinValue+0x48>
 472:	8b 81       	ldd	r24, Y+3	; 0x03
 474:	9c 81       	ldd	r25, Y+4	; 0x04
 476:	00 97       	sbiw	r24, 0x00	; 0
 478:	61 f0       	breq	.+24     	; 0x492 <DIO_togglePinValue+0x5e>
 47a:	5a c0       	rjmp	.+180    	; 0x530 <DIO_togglePinValue+0xfc>
 47c:	2b 81       	ldd	r18, Y+3	; 0x03
 47e:	3c 81       	ldd	r19, Y+4	; 0x04
 480:	22 30       	cpi	r18, 0x02	; 2
 482:	31 05       	cpc	r19, r1
 484:	71 f1       	breq	.+92     	; 0x4e2 <DIO_togglePinValue+0xae>
 486:	8b 81       	ldd	r24, Y+3	; 0x03
 488:	9c 81       	ldd	r25, Y+4	; 0x04
 48a:	83 30       	cpi	r24, 0x03	; 3
 48c:	91 05       	cpc	r25, r1
 48e:	e9 f1       	breq	.+122    	; 0x50a <DIO_togglePinValue+0xd6>
 490:	4f c0       	rjmp	.+158    	; 0x530 <DIO_togglePinValue+0xfc>
		{
			case DIO_PORTA:
			TOG_BIT(PORTA,PinId);
 492:	ab e3       	ldi	r26, 0x3B	; 59
 494:	b0 e0       	ldi	r27, 0x00	; 0
 496:	eb e3       	ldi	r30, 0x3B	; 59
 498:	f0 e0       	ldi	r31, 0x00	; 0
 49a:	80 81       	ld	r24, Z
 49c:	48 2f       	mov	r20, r24
 49e:	8a 81       	ldd	r24, Y+2	; 0x02
 4a0:	28 2f       	mov	r18, r24
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	02 2e       	mov	r0, r18
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <DIO_togglePinValue+0x7c>
 4ac:	88 0f       	add	r24, r24
 4ae:	99 1f       	adc	r25, r25
 4b0:	0a 94       	dec	r0
 4b2:	e2 f7       	brpl	.-8      	; 0x4ac <DIO_togglePinValue+0x78>
 4b4:	84 27       	eor	r24, r20
 4b6:	8c 93       	st	X, r24
 4b8:	3b c0       	rjmp	.+118    	; 0x530 <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTB:
			TOG_BIT(PORTB,PinId);
 4ba:	a8 e3       	ldi	r26, 0x38	; 56
 4bc:	b0 e0       	ldi	r27, 0x00	; 0
 4be:	e8 e3       	ldi	r30, 0x38	; 56
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	80 81       	ld	r24, Z
 4c4:	48 2f       	mov	r20, r24
 4c6:	8a 81       	ldd	r24, Y+2	; 0x02
 4c8:	28 2f       	mov	r18, r24
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	02 2e       	mov	r0, r18
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <DIO_togglePinValue+0xa4>
 4d4:	88 0f       	add	r24, r24
 4d6:	99 1f       	adc	r25, r25
 4d8:	0a 94       	dec	r0
 4da:	e2 f7       	brpl	.-8      	; 0x4d4 <DIO_togglePinValue+0xa0>
 4dc:	84 27       	eor	r24, r20
 4de:	8c 93       	st	X, r24
 4e0:	27 c0       	rjmp	.+78     	; 0x530 <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTC:
			TOG_BIT(PORTC,PinId);
 4e2:	a5 e3       	ldi	r26, 0x35	; 53
 4e4:	b0 e0       	ldi	r27, 0x00	; 0
 4e6:	e5 e3       	ldi	r30, 0x35	; 53
 4e8:	f0 e0       	ldi	r31, 0x00	; 0
 4ea:	80 81       	ld	r24, Z
 4ec:	48 2f       	mov	r20, r24
 4ee:	8a 81       	ldd	r24, Y+2	; 0x02
 4f0:	28 2f       	mov	r18, r24
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	02 2e       	mov	r0, r18
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <DIO_togglePinValue+0xcc>
 4fc:	88 0f       	add	r24, r24
 4fe:	99 1f       	adc	r25, r25
 500:	0a 94       	dec	r0
 502:	e2 f7       	brpl	.-8      	; 0x4fc <DIO_togglePinValue+0xc8>
 504:	84 27       	eor	r24, r20
 506:	8c 93       	st	X, r24
 508:	13 c0       	rjmp	.+38     	; 0x530 <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTD:
			TOG_BIT(PORTD,PinId);
 50a:	a2 e3       	ldi	r26, 0x32	; 50
 50c:	b0 e0       	ldi	r27, 0x00	; 0
 50e:	e2 e3       	ldi	r30, 0x32	; 50
 510:	f0 e0       	ldi	r31, 0x00	; 0
 512:	80 81       	ld	r24, Z
 514:	48 2f       	mov	r20, r24
 516:	8a 81       	ldd	r24, Y+2	; 0x02
 518:	28 2f       	mov	r18, r24
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	02 2e       	mov	r0, r18
 522:	02 c0       	rjmp	.+4      	; 0x528 <DIO_togglePinValue+0xf4>
 524:	88 0f       	add	r24, r24
 526:	99 1f       	adc	r25, r25
 528:	0a 94       	dec	r0
 52a:	e2 f7       	brpl	.-8      	; 0x524 <DIO_togglePinValue+0xf0>
 52c:	84 27       	eor	r24, r20
 52e:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 530:	0f 90       	pop	r0
 532:	0f 90       	pop	r0
 534:	0f 90       	pop	r0
 536:	0f 90       	pop	r0
 538:	cf 91       	pop	r28
 53a:	df 91       	pop	r29
 53c:	08 95       	ret

0000053e <DIO_getPinValue>:


void DIO_getPinValue(u8 PortId, u8 PinId, u8* PinValue)
{
 53e:	df 93       	push	r29
 540:	cf 93       	push	r28
 542:	00 d0       	rcall	.+0      	; 0x544 <DIO_getPinValue+0x6>
 544:	00 d0       	rcall	.+0      	; 0x546 <DIO_getPinValue+0x8>
 546:	00 d0       	rcall	.+0      	; 0x548 <DIO_getPinValue+0xa>
 548:	cd b7       	in	r28, 0x3d	; 61
 54a:	de b7       	in	r29, 0x3e	; 62
 54c:	89 83       	std	Y+1, r24	; 0x01
 54e:	6a 83       	std	Y+2, r22	; 0x02
 550:	5c 83       	std	Y+4, r21	; 0x04
 552:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && (PinValue!= NULL))
 554:	89 81       	ldd	r24, Y+1	; 0x01
 556:	84 30       	cpi	r24, 0x04	; 4
 558:	08 f0       	brcs	.+2      	; 0x55c <DIO_getPinValue+0x1e>
 55a:	79 c0       	rjmp	.+242    	; 0x64e <DIO_getPinValue+0x110>
 55c:	8a 81       	ldd	r24, Y+2	; 0x02
 55e:	88 30       	cpi	r24, 0x08	; 8
 560:	08 f0       	brcs	.+2      	; 0x564 <DIO_getPinValue+0x26>
 562:	75 c0       	rjmp	.+234    	; 0x64e <DIO_getPinValue+0x110>
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	9c 81       	ldd	r25, Y+4	; 0x04
 568:	00 97       	sbiw	r24, 0x00	; 0
 56a:	09 f4       	brne	.+2      	; 0x56e <DIO_getPinValue+0x30>
 56c:	70 c0       	rjmp	.+224    	; 0x64e <DIO_getPinValue+0x110>
	{
		switch(PortId)
 56e:	89 81       	ldd	r24, Y+1	; 0x01
 570:	28 2f       	mov	r18, r24
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	3e 83       	std	Y+6, r19	; 0x06
 576:	2d 83       	std	Y+5, r18	; 0x05
 578:	4d 81       	ldd	r20, Y+5	; 0x05
 57a:	5e 81       	ldd	r21, Y+6	; 0x06
 57c:	41 30       	cpi	r20, 0x01	; 1
 57e:	51 05       	cpc	r21, r1
 580:	59 f1       	breq	.+86     	; 0x5d8 <DIO_getPinValue+0x9a>
 582:	8d 81       	ldd	r24, Y+5	; 0x05
 584:	9e 81       	ldd	r25, Y+6	; 0x06
 586:	82 30       	cpi	r24, 0x02	; 2
 588:	91 05       	cpc	r25, r1
 58a:	34 f4       	brge	.+12     	; 0x598 <DIO_getPinValue+0x5a>
 58c:	2d 81       	ldd	r18, Y+5	; 0x05
 58e:	3e 81       	ldd	r19, Y+6	; 0x06
 590:	21 15       	cp	r18, r1
 592:	31 05       	cpc	r19, r1
 594:	69 f0       	breq	.+26     	; 0x5b0 <DIO_getPinValue+0x72>
 596:	5b c0       	rjmp	.+182    	; 0x64e <DIO_getPinValue+0x110>
 598:	4d 81       	ldd	r20, Y+5	; 0x05
 59a:	5e 81       	ldd	r21, Y+6	; 0x06
 59c:	42 30       	cpi	r20, 0x02	; 2
 59e:	51 05       	cpc	r21, r1
 5a0:	79 f1       	breq	.+94     	; 0x600 <DIO_getPinValue+0xc2>
 5a2:	8d 81       	ldd	r24, Y+5	; 0x05
 5a4:	9e 81       	ldd	r25, Y+6	; 0x06
 5a6:	83 30       	cpi	r24, 0x03	; 3
 5a8:	91 05       	cpc	r25, r1
 5aa:	09 f4       	brne	.+2      	; 0x5ae <DIO_getPinValue+0x70>
 5ac:	3d c0       	rjmp	.+122    	; 0x628 <DIO_getPinValue+0xea>
 5ae:	4f c0       	rjmp	.+158    	; 0x64e <DIO_getPinValue+0x110>
		{
			case DIO_PORTA:
			*PinValue = GET_BIT(PINA,PinId);
 5b0:	e9 e3       	ldi	r30, 0x39	; 57
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	80 81       	ld	r24, Z
 5b6:	28 2f       	mov	r18, r24
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	8a 81       	ldd	r24, Y+2	; 0x02
 5bc:	88 2f       	mov	r24, r24
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	a9 01       	movw	r20, r18
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <DIO_getPinValue+0x8a>
 5c4:	55 95       	asr	r21
 5c6:	47 95       	ror	r20
 5c8:	8a 95       	dec	r24
 5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <DIO_getPinValue+0x86>
 5cc:	ca 01       	movw	r24, r20
 5ce:	81 70       	andi	r24, 0x01	; 1
 5d0:	eb 81       	ldd	r30, Y+3	; 0x03
 5d2:	fc 81       	ldd	r31, Y+4	; 0x04
 5d4:	80 83       	st	Z, r24
 5d6:	3b c0       	rjmp	.+118    	; 0x64e <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTB:
			*PinValue = GET_BIT(PINB,PinId);
 5d8:	e6 e3       	ldi	r30, 0x36	; 54
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	80 81       	ld	r24, Z
 5de:	28 2f       	mov	r18, r24
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	8a 81       	ldd	r24, Y+2	; 0x02
 5e4:	88 2f       	mov	r24, r24
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	a9 01       	movw	r20, r18
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <DIO_getPinValue+0xb2>
 5ec:	55 95       	asr	r21
 5ee:	47 95       	ror	r20
 5f0:	8a 95       	dec	r24
 5f2:	e2 f7       	brpl	.-8      	; 0x5ec <DIO_getPinValue+0xae>
 5f4:	ca 01       	movw	r24, r20
 5f6:	81 70       	andi	r24, 0x01	; 1
 5f8:	eb 81       	ldd	r30, Y+3	; 0x03
 5fa:	fc 81       	ldd	r31, Y+4	; 0x04
 5fc:	80 83       	st	Z, r24
 5fe:	27 c0       	rjmp	.+78     	; 0x64e <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTC:
			*PinValue = GET_BIT(PINC,PinId);
 600:	e3 e3       	ldi	r30, 0x33	; 51
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	80 81       	ld	r24, Z
 606:	28 2f       	mov	r18, r24
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	8a 81       	ldd	r24, Y+2	; 0x02
 60c:	88 2f       	mov	r24, r24
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	a9 01       	movw	r20, r18
 612:	02 c0       	rjmp	.+4      	; 0x618 <DIO_getPinValue+0xda>
 614:	55 95       	asr	r21
 616:	47 95       	ror	r20
 618:	8a 95       	dec	r24
 61a:	e2 f7       	brpl	.-8      	; 0x614 <DIO_getPinValue+0xd6>
 61c:	ca 01       	movw	r24, r20
 61e:	81 70       	andi	r24, 0x01	; 1
 620:	eb 81       	ldd	r30, Y+3	; 0x03
 622:	fc 81       	ldd	r31, Y+4	; 0x04
 624:	80 83       	st	Z, r24
 626:	13 c0       	rjmp	.+38     	; 0x64e <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTD:
			*PinValue = GET_BIT(PIND,PinId);
 628:	e0 e3       	ldi	r30, 0x30	; 48
 62a:	f0 e0       	ldi	r31, 0x00	; 0
 62c:	80 81       	ld	r24, Z
 62e:	28 2f       	mov	r18, r24
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	8a 81       	ldd	r24, Y+2	; 0x02
 634:	88 2f       	mov	r24, r24
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	a9 01       	movw	r20, r18
 63a:	02 c0       	rjmp	.+4      	; 0x640 <DIO_getPinValue+0x102>
 63c:	55 95       	asr	r21
 63e:	47 95       	ror	r20
 640:	8a 95       	dec	r24
 642:	e2 f7       	brpl	.-8      	; 0x63c <DIO_getPinValue+0xfe>
 644:	ca 01       	movw	r24, r20
 646:	81 70       	andi	r24, 0x01	; 1
 648:	eb 81       	ldd	r30, Y+3	; 0x03
 64a:	fc 81       	ldd	r31, Y+4	; 0x04
 64c:	80 83       	st	Z, r24
	}
	else
	{
		// DO Nothing
	}
}
 64e:	26 96       	adiw	r28, 0x06	; 6
 650:	0f b6       	in	r0, 0x3f	; 63
 652:	f8 94       	cli
 654:	de bf       	out	0x3e, r29	; 62
 656:	0f be       	out	0x3f, r0	; 63
 658:	cd bf       	out	0x3d, r28	; 61
 65a:	cf 91       	pop	r28
 65c:	df 91       	pop	r29
 65e:	08 95       	ret

00000660 <DIO_activePinInPullUpResistance>:


void DIO_activePinInPullUpResistance(u8 PortId, u8 PinId)
{
 660:	df 93       	push	r29
 662:	cf 93       	push	r28
 664:	00 d0       	rcall	.+0      	; 0x666 <DIO_activePinInPullUpResistance+0x6>
 666:	00 d0       	rcall	.+0      	; 0x668 <DIO_activePinInPullUpResistance+0x8>
 668:	cd b7       	in	r28, 0x3d	; 61
 66a:	de b7       	in	r29, 0x3e	; 62
 66c:	89 83       	std	Y+1, r24	; 0x01
 66e:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && (PinId<=7))
 670:	89 81       	ldd	r24, Y+1	; 0x01
 672:	84 30       	cpi	r24, 0x04	; 4
 674:	08 f0       	brcs	.+2      	; 0x678 <DIO_activePinInPullUpResistance+0x18>
 676:	72 c0       	rjmp	.+228    	; 0x75c <DIO_activePinInPullUpResistance+0xfc>
 678:	8a 81       	ldd	r24, Y+2	; 0x02
 67a:	88 30       	cpi	r24, 0x08	; 8
 67c:	08 f0       	brcs	.+2      	; 0x680 <DIO_activePinInPullUpResistance+0x20>
 67e:	6e c0       	rjmp	.+220    	; 0x75c <DIO_activePinInPullUpResistance+0xfc>
	{
		switch(PortId)
 680:	89 81       	ldd	r24, Y+1	; 0x01
 682:	28 2f       	mov	r18, r24
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	3c 83       	std	Y+4, r19	; 0x04
 688:	2b 83       	std	Y+3, r18	; 0x03
 68a:	8b 81       	ldd	r24, Y+3	; 0x03
 68c:	9c 81       	ldd	r25, Y+4	; 0x04
 68e:	81 30       	cpi	r24, 0x01	; 1
 690:	91 05       	cpc	r25, r1
 692:	49 f1       	breq	.+82     	; 0x6e6 <DIO_activePinInPullUpResistance+0x86>
 694:	2b 81       	ldd	r18, Y+3	; 0x03
 696:	3c 81       	ldd	r19, Y+4	; 0x04
 698:	22 30       	cpi	r18, 0x02	; 2
 69a:	31 05       	cpc	r19, r1
 69c:	2c f4       	brge	.+10     	; 0x6a8 <DIO_activePinInPullUpResistance+0x48>
 69e:	8b 81       	ldd	r24, Y+3	; 0x03
 6a0:	9c 81       	ldd	r25, Y+4	; 0x04
 6a2:	00 97       	sbiw	r24, 0x00	; 0
 6a4:	61 f0       	breq	.+24     	; 0x6be <DIO_activePinInPullUpResistance+0x5e>
 6a6:	5a c0       	rjmp	.+180    	; 0x75c <DIO_activePinInPullUpResistance+0xfc>
 6a8:	2b 81       	ldd	r18, Y+3	; 0x03
 6aa:	3c 81       	ldd	r19, Y+4	; 0x04
 6ac:	22 30       	cpi	r18, 0x02	; 2
 6ae:	31 05       	cpc	r19, r1
 6b0:	71 f1       	breq	.+92     	; 0x70e <DIO_activePinInPullUpResistance+0xae>
 6b2:	8b 81       	ldd	r24, Y+3	; 0x03
 6b4:	9c 81       	ldd	r25, Y+4	; 0x04
 6b6:	83 30       	cpi	r24, 0x03	; 3
 6b8:	91 05       	cpc	r25, r1
 6ba:	e9 f1       	breq	.+122    	; 0x736 <DIO_activePinInPullUpResistance+0xd6>
 6bc:	4f c0       	rjmp	.+158    	; 0x75c <DIO_activePinInPullUpResistance+0xfc>
		{
			case DIO_PORTA:
			SET_BIT(PORTA,PinId);
 6be:	ab e3       	ldi	r26, 0x3B	; 59
 6c0:	b0 e0       	ldi	r27, 0x00	; 0
 6c2:	eb e3       	ldi	r30, 0x3B	; 59
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	80 81       	ld	r24, Z
 6c8:	48 2f       	mov	r20, r24
 6ca:	8a 81       	ldd	r24, Y+2	; 0x02
 6cc:	28 2f       	mov	r18, r24
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	81 e0       	ldi	r24, 0x01	; 1
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	02 2e       	mov	r0, r18
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <DIO_activePinInPullUpResistance+0x7c>
 6d8:	88 0f       	add	r24, r24
 6da:	99 1f       	adc	r25, r25
 6dc:	0a 94       	dec	r0
 6de:	e2 f7       	brpl	.-8      	; 0x6d8 <DIO_activePinInPullUpResistance+0x78>
 6e0:	84 2b       	or	r24, r20
 6e2:	8c 93       	st	X, r24
 6e4:	3b c0       	rjmp	.+118    	; 0x75c <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTB:
			SET_BIT(PORTB,PinId);
 6e6:	a8 e3       	ldi	r26, 0x38	; 56
 6e8:	b0 e0       	ldi	r27, 0x00	; 0
 6ea:	e8 e3       	ldi	r30, 0x38	; 56
 6ec:	f0 e0       	ldi	r31, 0x00	; 0
 6ee:	80 81       	ld	r24, Z
 6f0:	48 2f       	mov	r20, r24
 6f2:	8a 81       	ldd	r24, Y+2	; 0x02
 6f4:	28 2f       	mov	r18, r24
 6f6:	30 e0       	ldi	r19, 0x00	; 0
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	02 2e       	mov	r0, r18
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <DIO_activePinInPullUpResistance+0xa4>
 700:	88 0f       	add	r24, r24
 702:	99 1f       	adc	r25, r25
 704:	0a 94       	dec	r0
 706:	e2 f7       	brpl	.-8      	; 0x700 <DIO_activePinInPullUpResistance+0xa0>
 708:	84 2b       	or	r24, r20
 70a:	8c 93       	st	X, r24
 70c:	27 c0       	rjmp	.+78     	; 0x75c <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTC:
			SET_BIT(PORTC,PinId);
 70e:	a5 e3       	ldi	r26, 0x35	; 53
 710:	b0 e0       	ldi	r27, 0x00	; 0
 712:	e5 e3       	ldi	r30, 0x35	; 53
 714:	f0 e0       	ldi	r31, 0x00	; 0
 716:	80 81       	ld	r24, Z
 718:	48 2f       	mov	r20, r24
 71a:	8a 81       	ldd	r24, Y+2	; 0x02
 71c:	28 2f       	mov	r18, r24
 71e:	30 e0       	ldi	r19, 0x00	; 0
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	02 2e       	mov	r0, r18
 726:	02 c0       	rjmp	.+4      	; 0x72c <DIO_activePinInPullUpResistance+0xcc>
 728:	88 0f       	add	r24, r24
 72a:	99 1f       	adc	r25, r25
 72c:	0a 94       	dec	r0
 72e:	e2 f7       	brpl	.-8      	; 0x728 <DIO_activePinInPullUpResistance+0xc8>
 730:	84 2b       	or	r24, r20
 732:	8c 93       	st	X, r24
 734:	13 c0       	rjmp	.+38     	; 0x75c <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTD:
			SET_BIT(PORTD,PinId);
 736:	a2 e3       	ldi	r26, 0x32	; 50
 738:	b0 e0       	ldi	r27, 0x00	; 0
 73a:	e2 e3       	ldi	r30, 0x32	; 50
 73c:	f0 e0       	ldi	r31, 0x00	; 0
 73e:	80 81       	ld	r24, Z
 740:	48 2f       	mov	r20, r24
 742:	8a 81       	ldd	r24, Y+2	; 0x02
 744:	28 2f       	mov	r18, r24
 746:	30 e0       	ldi	r19, 0x00	; 0
 748:	81 e0       	ldi	r24, 0x01	; 1
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	02 2e       	mov	r0, r18
 74e:	02 c0       	rjmp	.+4      	; 0x754 <DIO_activePinInPullUpResistance+0xf4>
 750:	88 0f       	add	r24, r24
 752:	99 1f       	adc	r25, r25
 754:	0a 94       	dec	r0
 756:	e2 f7       	brpl	.-8      	; 0x750 <DIO_activePinInPullUpResistance+0xf0>
 758:	84 2b       	or	r24, r20
 75a:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 75c:	0f 90       	pop	r0
 75e:	0f 90       	pop	r0
 760:	0f 90       	pop	r0
 762:	0f 90       	pop	r0
 764:	cf 91       	pop	r28
 766:	df 91       	pop	r29
 768:	08 95       	ret

0000076a <main>:
#include "BIT_MATH.h"
#include "STD_TYPES.h"
#include "DIO_interface.h"


int main (){
 76a:	df 93       	push	r29
 76c:	cf 93       	push	r28
 76e:	00 d0       	rcall	.+0      	; 0x770 <main+0x6>
 770:	0f 92       	push	r0
 772:	cd b7       	in	r28, 0x3d	; 61
 774:	de b7       	in	r29, 0x3e	; 62

	DIO_setPinDirection(DIO_PORTB,DIO_PIN0,DIO_PIN_INPUT);
 776:	81 e0       	ldi	r24, 0x01	; 1
 778:	60 e0       	ldi	r22, 0x00	; 0
 77a:	40 e0       	ldi	r20, 0x00	; 0
 77c:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTD,DIO_PIN2,DIO_PIN_INPUT);
 780:	83 e0       	ldi	r24, 0x03	; 3
 782:	62 e0       	ldi	r22, 0x02	; 2
 784:	40 e0       	ldi	r20, 0x00	; 0
 786:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTD,DIO_PIN6,DIO_PIN_INPUT);
 78a:	83 e0       	ldi	r24, 0x03	; 3
 78c:	66 e0       	ldi	r22, 0x06	; 6
 78e:	40 e0       	ldi	r20, 0x00	; 0
 790:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTC,DIO_PIN2,DIO_PIN_OUTPUT);
 794:	82 e0       	ldi	r24, 0x02	; 2
 796:	62 e0       	ldi	r22, 0x02	; 2
 798:	41 e0       	ldi	r20, 0x01	; 1
 79a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTC,DIO_PIN7,DIO_PIN_OUTPUT);
 79e:	82 e0       	ldi	r24, 0x02	; 2
 7a0:	67 e0       	ldi	r22, 0x07	; 7
 7a2:	41 e0       	ldi	r20, 0x01	; 1
 7a4:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTD,DIO_PIN3,DIO_PIN_OUTPUT);
 7a8:	83 e0       	ldi	r24, 0x03	; 3
 7aa:	63 e0       	ldi	r22, 0x03	; 3
 7ac:	41 e0       	ldi	r20, 0x01	; 1
 7ae:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTA,DIO_PIN3,DIO_PIN_OUTPUT);
 7b2:	80 e0       	ldi	r24, 0x00	; 0
 7b4:	63 e0       	ldi	r22, 0x03	; 3
 7b6:	41 e0       	ldi	r20, 0x01	; 1
 7b8:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	u8 sw0,sw1,sw2 ;

	while(1)
	{

		DIO_getPinValue(DIO_PORTB,DIO_PIN0,&sw0);
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	60 e0       	ldi	r22, 0x00	; 0
 7c0:	9e 01       	movw	r18, r28
 7c2:	2f 5f       	subi	r18, 0xFF	; 255
 7c4:	3f 4f       	sbci	r19, 0xFF	; 255
 7c6:	a9 01       	movw	r20, r18
 7c8:	0e 94 9f 02 	call	0x53e	; 0x53e <DIO_getPinValue>
		if(sw0 == 1)
 7cc:	89 81       	ldd	r24, Y+1	; 0x01
 7ce:	81 30       	cpi	r24, 0x01	; 1
 7d0:	21 f4       	brne	.+8      	; 0x7da <main+0x70>
		{

			DIO_togglePinValue(DIO_PORTC,DIO_PIN2);
 7d2:	82 e0       	ldi	r24, 0x02	; 2
 7d4:	62 e0       	ldi	r22, 0x02	; 2
 7d6:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_togglePinValue>

		}



		DIO_getPinValue(DIO_PORTD,DIO_PIN2,&sw2);
 7da:	9e 01       	movw	r18, r28
 7dc:	2d 5f       	subi	r18, 0xFD	; 253
 7de:	3f 4f       	sbci	r19, 0xFF	; 255
 7e0:	83 e0       	ldi	r24, 0x03	; 3
 7e2:	62 e0       	ldi	r22, 0x02	; 2
 7e4:	a9 01       	movw	r20, r18
 7e6:	0e 94 9f 02 	call	0x53e	; 0x53e <DIO_getPinValue>
				if(sw2 == 1)
 7ea:	8b 81       	ldd	r24, Y+3	; 0x03
 7ec:	81 30       	cpi	r24, 0x01	; 1
 7ee:	21 f4       	brne	.+8      	; 0x7f8 <main+0x8e>
				{

					DIO_togglePinValue(DIO_PORTD,DIO_PIN3);
 7f0:	83 e0       	ldi	r24, 0x03	; 3
 7f2:	63 e0       	ldi	r22, 0x03	; 3
 7f4:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_togglePinValue>
	}

				DIO_getPinValue(DIO_PORTD,DIO_PIN6,&sw1);
 7f8:	9e 01       	movw	r18, r28
 7fa:	2e 5f       	subi	r18, 0xFE	; 254
 7fc:	3f 4f       	sbci	r19, 0xFF	; 255
 7fe:	83 e0       	ldi	r24, 0x03	; 3
 800:	66 e0       	ldi	r22, 0x06	; 6
 802:	a9 01       	movw	r20, r18
 804:	0e 94 9f 02 	call	0x53e	; 0x53e <DIO_getPinValue>
						if(sw1 == 1)
 808:	8a 81       	ldd	r24, Y+2	; 0x02
 80a:	81 30       	cpi	r24, 0x01	; 1
 80c:	59 f4       	brne	.+22     	; 0x824 <main+0xba>
						{

							DIO_setPinValue(DIO_PORTA,DIO_PIN3,DIO_PIN_HIGH);
 80e:	80 e0       	ldi	r24, 0x00	; 0
 810:	63 e0       	ldi	r22, 0x03	; 3
 812:	41 e0       	ldi	r20, 0x01	; 1
 814:	0e 94 28 01 	call	0x250	; 0x250 <DIO_setPinValue>
							DIO_setPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_HIGH);
 818:	82 e0       	ldi	r24, 0x02	; 2
 81a:	67 e0       	ldi	r22, 0x07	; 7
 81c:	41 e0       	ldi	r20, 0x01	; 1
 81e:	0e 94 28 01 	call	0x250	; 0x250 <DIO_setPinValue>
 822:	cc cf       	rjmp	.-104    	; 0x7bc <main+0x52>
						}
							else {

								DIO_setPinValue(DIO_PORTA,DIO_PIN3,DIO_PIN_LOW);
 824:	80 e0       	ldi	r24, 0x00	; 0
 826:	63 e0       	ldi	r22, 0x03	; 3
 828:	40 e0       	ldi	r20, 0x00	; 0
 82a:	0e 94 28 01 	call	0x250	; 0x250 <DIO_setPinValue>
								DIO_setPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_LOW);
 82e:	82 e0       	ldi	r24, 0x02	; 2
 830:	67 e0       	ldi	r22, 0x07	; 7
 832:	40 e0       	ldi	r20, 0x00	; 0
 834:	0e 94 28 01 	call	0x250	; 0x250 <DIO_setPinValue>
 838:	c1 cf       	rjmp	.-126    	; 0x7bc <main+0x52>

0000083a <_exit>:
 83a:	f8 94       	cli

0000083c <__stop_program>:
 83c:	ff cf       	rjmp	.-2      	; 0x83c <__stop_program>
