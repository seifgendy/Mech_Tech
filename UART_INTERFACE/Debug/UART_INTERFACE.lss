
UART_INTERFACE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004c08  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00004c08  00004c7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001b48  00000000  00000000  00004d84  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b2f  00000000  00000000  000068cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  000073fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001ed  00000000  00000000  0000759b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002fc5  00000000  00000000  00007788  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014a9  00000000  00000000  0000a74d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014a6  00000000  00000000  0000bbf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0000d09c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000350  00000000  00000000  0000d25c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002280  00000000  00000000  0000d5ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000f82c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e0       	ldi	r30, 0x08	; 8
      68:	fc e4       	ldi	r31, 0x4C	; 76
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 6a 25 	call	0x4ad4	; 0x4ad4 <main>
      7a:	0c 94 02 26 	jmp	0x4c04	; 0x4c04 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 1e 12 	call	0x243c	; 0x243c <__subsf3>
      ae:	0e 94 b2 14 	call	0x2964	; 0x2964 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 b2 14 	call	0x2964	; 0x2964 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <__divdi3>:
      da:	a2 e7       	ldi	r26, 0x72	; 114
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 cb 25 	jmp	0x4b96	; 0x4b96 <__prologue_saves__>
      e6:	98 2e       	mov	r9, r24
      e8:	89 2e       	mov	r8, r25
      ea:	71 2e       	mov	r7, r17
      ec:	88 e0       	ldi	r24, 0x08	; 8
      ee:	fe 01       	movw	r30, r28
      f0:	31 96       	adiw	r30, 0x01	; 1
      f2:	df 01       	movw	r26, r30
      f4:	68 2e       	mov	r6, r24
      f6:	1d 92       	st	X+, r1
      f8:	6a 94       	dec	r6
      fa:	e9 f7       	brne	.-6      	; 0xf6 <__divdi3+0x1c>
      fc:	29 83       	std	Y+1, r18	; 0x01
      fe:	3a 83       	std	Y+2, r19	; 0x02
     100:	4b 83       	std	Y+3, r20	; 0x03
     102:	5c 83       	std	Y+4, r21	; 0x04
     104:	6d 83       	std	Y+5, r22	; 0x05
     106:	7e 83       	std	Y+6, r23	; 0x06
     108:	9f 82       	std	Y+7, r9	; 0x07
     10a:	98 87       	std	Y+8, r25	; 0x08
     10c:	fe 01       	movw	r30, r28
     10e:	39 96       	adiw	r30, 0x09	; 9
     110:	df 01       	movw	r26, r30
     112:	1d 92       	st	X+, r1
     114:	8a 95       	dec	r24
     116:	e9 f7       	brne	.-6      	; 0x112 <__divdi3+0x38>
     118:	a9 86       	std	Y+9, r10	; 0x09
     11a:	ba 86       	std	Y+10, r11	; 0x0a
     11c:	cb 86       	std	Y+11, r12	; 0x0b
     11e:	dc 86       	std	Y+12, r13	; 0x0c
     120:	ed 86       	std	Y+13, r14	; 0x0d
     122:	fe 86       	std	Y+14, r15	; 0x0e
     124:	0f 87       	std	Y+15, r16	; 0x0f
     126:	18 8b       	std	Y+16, r17	; 0x10
     128:	8d 81       	ldd	r24, Y+5	; 0x05
     12a:	9e 81       	ldd	r25, Y+6	; 0x06
     12c:	af 81       	ldd	r26, Y+7	; 0x07
     12e:	b8 85       	ldd	r27, Y+8	; 0x08
     130:	b7 fd       	sbrc	r27, 7
     132:	07 c0       	rjmp	.+14     	; 0x142 <__divdi3+0x68>
     134:	e1 96       	adiw	r28, 0x31	; 49
     136:	1c ae       	std	Y+60, r1	; 0x3c
     138:	1d ae       	std	Y+61, r1	; 0x3d
     13a:	1e ae       	std	Y+62, r1	; 0x3e
     13c:	1f ae       	std	Y+63, r1	; 0x3f
     13e:	e1 97       	sbiw	r28, 0x31	; 49
     140:	64 c0       	rjmp	.+200    	; 0x20a <__divdi3+0x130>
     142:	21 95       	neg	r18
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	12 16       	cp	r1, r18
     148:	08 f0       	brcs	.+2      	; 0x14c <__divdi3+0x72>
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	31 95       	neg	r19
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	13 16       	cp	r1, r19
     152:	08 f0       	brcs	.+2      	; 0x156 <__divdi3+0x7c>
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	b3 2f       	mov	r27, r19
     158:	b8 1b       	sub	r27, r24
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	3b 17       	cp	r19, r27
     15e:	08 f0       	brcs	.+2      	; 0x162 <__divdi3+0x88>
     160:	80 e0       	ldi	r24, 0x00	; 0
     162:	98 2b       	or	r25, r24
     164:	41 95       	neg	r20
     166:	31 e0       	ldi	r19, 0x01	; 1
     168:	14 16       	cp	r1, r20
     16a:	08 f0       	brcs	.+2      	; 0x16e <__divdi3+0x94>
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	a4 2f       	mov	r26, r20
     170:	a9 1b       	sub	r26, r25
     172:	81 e0       	ldi	r24, 0x01	; 1
     174:	4a 17       	cp	r20, r26
     176:	08 f0       	brcs	.+2      	; 0x17a <__divdi3+0xa0>
     178:	80 e0       	ldi	r24, 0x00	; 0
     17a:	38 2b       	or	r19, r24
     17c:	51 95       	neg	r21
     17e:	91 e0       	ldi	r25, 0x01	; 1
     180:	15 16       	cp	r1, r21
     182:	08 f0       	brcs	.+2      	; 0x186 <__divdi3+0xac>
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	f5 2f       	mov	r31, r21
     188:	f3 1b       	sub	r31, r19
     18a:	81 e0       	ldi	r24, 0x01	; 1
     18c:	5f 17       	cp	r21, r31
     18e:	08 f0       	brcs	.+2      	; 0x192 <__divdi3+0xb8>
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	98 2b       	or	r25, r24
     194:	61 95       	neg	r22
     196:	31 e0       	ldi	r19, 0x01	; 1
     198:	16 16       	cp	r1, r22
     19a:	08 f0       	brcs	.+2      	; 0x19e <__divdi3+0xc4>
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	e6 2f       	mov	r30, r22
     1a0:	e9 1b       	sub	r30, r25
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	6e 17       	cp	r22, r30
     1a6:	08 f0       	brcs	.+2      	; 0x1aa <__divdi3+0xd0>
     1a8:	80 e0       	ldi	r24, 0x00	; 0
     1aa:	38 2b       	or	r19, r24
     1ac:	71 95       	neg	r23
     1ae:	41 e0       	ldi	r20, 0x01	; 1
     1b0:	17 16       	cp	r1, r23
     1b2:	08 f0       	brcs	.+2      	; 0x1b6 <__divdi3+0xdc>
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	57 2f       	mov	r21, r23
     1b8:	53 1b       	sub	r21, r19
     1ba:	81 e0       	ldi	r24, 0x01	; 1
     1bc:	75 17       	cp	r23, r21
     1be:	08 f0       	brcs	.+2      	; 0x1c2 <__divdi3+0xe8>
     1c0:	80 e0       	ldi	r24, 0x00	; 0
     1c2:	48 2b       	or	r20, r24
     1c4:	89 2d       	mov	r24, r9
     1c6:	81 95       	neg	r24
     1c8:	91 e0       	ldi	r25, 0x01	; 1
     1ca:	18 16       	cp	r1, r24
     1cc:	08 f0       	brcs	.+2      	; 0x1d0 <__divdi3+0xf6>
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	68 2e       	mov	r6, r24
     1d2:	64 1a       	sub	r6, r20
     1d4:	46 2d       	mov	r20, r6
     1d6:	31 e0       	ldi	r19, 0x01	; 1
     1d8:	86 15       	cp	r24, r6
     1da:	08 f0       	brcs	.+2      	; 0x1de <__divdi3+0x104>
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	93 2b       	or	r25, r19
     1e0:	88 2d       	mov	r24, r8
     1e2:	81 95       	neg	r24
     1e4:	89 1b       	sub	r24, r25
     1e6:	29 83       	std	Y+1, r18	; 0x01
     1e8:	ba 83       	std	Y+2, r27	; 0x02
     1ea:	ab 83       	std	Y+3, r26	; 0x03
     1ec:	fc 83       	std	Y+4, r31	; 0x04
     1ee:	ed 83       	std	Y+5, r30	; 0x05
     1f0:	5e 83       	std	Y+6, r21	; 0x06
     1f2:	4f 83       	std	Y+7, r20	; 0x07
     1f4:	88 87       	std	Y+8, r24	; 0x08
     1f6:	2f ef       	ldi	r18, 0xFF	; 255
     1f8:	3f ef       	ldi	r19, 0xFF	; 255
     1fa:	4f ef       	ldi	r20, 0xFF	; 255
     1fc:	5f ef       	ldi	r21, 0xFF	; 255
     1fe:	e1 96       	adiw	r28, 0x31	; 49
     200:	2c af       	std	Y+60, r18	; 0x3c
     202:	3d af       	std	Y+61, r19	; 0x3d
     204:	4e af       	std	Y+62, r20	; 0x3e
     206:	5f af       	std	Y+63, r21	; 0x3f
     208:	e1 97       	sbiw	r28, 0x31	; 49
     20a:	8d 85       	ldd	r24, Y+13	; 0x0d
     20c:	9e 85       	ldd	r25, Y+14	; 0x0e
     20e:	af 85       	ldd	r26, Y+15	; 0x0f
     210:	b8 89       	ldd	r27, Y+16	; 0x10
     212:	b7 ff       	sbrs	r27, 7
     214:	6a c0       	rjmp	.+212    	; 0x2ea <__divdi3+0x210>
     216:	e1 96       	adiw	r28, 0x31	; 49
     218:	4c ad       	ldd	r20, Y+60	; 0x3c
     21a:	5d ad       	ldd	r21, Y+61	; 0x3d
     21c:	6e ad       	ldd	r22, Y+62	; 0x3e
     21e:	7f ad       	ldd	r23, Y+63	; 0x3f
     220:	e1 97       	sbiw	r28, 0x31	; 49
     222:	40 95       	com	r20
     224:	50 95       	com	r21
     226:	60 95       	com	r22
     228:	70 95       	com	r23
     22a:	e1 96       	adiw	r28, 0x31	; 49
     22c:	4c af       	std	Y+60, r20	; 0x3c
     22e:	5d af       	std	Y+61, r21	; 0x3d
     230:	6e af       	std	Y+62, r22	; 0x3e
     232:	7f af       	std	Y+63, r23	; 0x3f
     234:	e1 97       	sbiw	r28, 0x31	; 49
     236:	a1 94       	neg	r10
     238:	81 e0       	ldi	r24, 0x01	; 1
     23a:	1a 14       	cp	r1, r10
     23c:	08 f0       	brcs	.+2      	; 0x240 <__divdi3+0x166>
     23e:	80 e0       	ldi	r24, 0x00	; 0
     240:	b1 94       	neg	r11
     242:	91 e0       	ldi	r25, 0x01	; 1
     244:	1b 14       	cp	r1, r11
     246:	08 f0       	brcs	.+2      	; 0x24a <__divdi3+0x170>
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	6b 2d       	mov	r22, r11
     24c:	68 1b       	sub	r22, r24
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	b6 16       	cp	r11, r22
     252:	08 f0       	brcs	.+2      	; 0x256 <__divdi3+0x17c>
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	98 2b       	or	r25, r24
     258:	c1 94       	neg	r12
     25a:	21 e0       	ldi	r18, 0x01	; 1
     25c:	1c 14       	cp	r1, r12
     25e:	08 f0       	brcs	.+2      	; 0x262 <__divdi3+0x188>
     260:	20 e0       	ldi	r18, 0x00	; 0
     262:	5c 2d       	mov	r21, r12
     264:	59 1b       	sub	r21, r25
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	c5 16       	cp	r12, r21
     26a:	08 f0       	brcs	.+2      	; 0x26e <__divdi3+0x194>
     26c:	80 e0       	ldi	r24, 0x00	; 0
     26e:	28 2b       	or	r18, r24
     270:	d1 94       	neg	r13
     272:	91 e0       	ldi	r25, 0x01	; 1
     274:	1d 14       	cp	r1, r13
     276:	08 f0       	brcs	.+2      	; 0x27a <__divdi3+0x1a0>
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	4d 2d       	mov	r20, r13
     27c:	42 1b       	sub	r20, r18
     27e:	81 e0       	ldi	r24, 0x01	; 1
     280:	d4 16       	cp	r13, r20
     282:	08 f0       	brcs	.+2      	; 0x286 <__divdi3+0x1ac>
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	98 2b       	or	r25, r24
     288:	e1 94       	neg	r14
     28a:	21 e0       	ldi	r18, 0x01	; 1
     28c:	1e 14       	cp	r1, r14
     28e:	08 f0       	brcs	.+2      	; 0x292 <__divdi3+0x1b8>
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	3e 2d       	mov	r19, r14
     294:	39 1b       	sub	r19, r25
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	e3 16       	cp	r14, r19
     29a:	08 f0       	brcs	.+2      	; 0x29e <__divdi3+0x1c4>
     29c:	80 e0       	ldi	r24, 0x00	; 0
     29e:	28 2b       	or	r18, r24
     2a0:	f1 94       	neg	r15
     2a2:	91 e0       	ldi	r25, 0x01	; 1
     2a4:	1f 14       	cp	r1, r15
     2a6:	08 f0       	brcs	.+2      	; 0x2aa <__divdi3+0x1d0>
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	7f 2d       	mov	r23, r15
     2ac:	72 1b       	sub	r23, r18
     2ae:	27 2f       	mov	r18, r23
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	f7 16       	cp	r15, r23
     2b4:	08 f0       	brcs	.+2      	; 0x2b8 <__divdi3+0x1de>
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	98 2b       	or	r25, r24
     2ba:	01 95       	neg	r16
     2bc:	11 e0       	ldi	r17, 0x01	; 1
     2be:	10 16       	cp	r1, r16
     2c0:	08 f0       	brcs	.+2      	; 0x2c4 <__divdi3+0x1ea>
     2c2:	10 e0       	ldi	r17, 0x00	; 0
     2c4:	80 2f       	mov	r24, r16
     2c6:	89 1b       	sub	r24, r25
     2c8:	98 2f       	mov	r25, r24
     2ca:	81 e0       	ldi	r24, 0x01	; 1
     2cc:	09 17       	cp	r16, r25
     2ce:	08 f0       	brcs	.+2      	; 0x2d2 <__divdi3+0x1f8>
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	18 2b       	or	r17, r24
     2d4:	87 2d       	mov	r24, r7
     2d6:	81 95       	neg	r24
     2d8:	81 1b       	sub	r24, r17
     2da:	a9 86       	std	Y+9, r10	; 0x09
     2dc:	6a 87       	std	Y+10, r22	; 0x0a
     2de:	5b 87       	std	Y+11, r21	; 0x0b
     2e0:	4c 87       	std	Y+12, r20	; 0x0c
     2e2:	3d 87       	std	Y+13, r19	; 0x0d
     2e4:	2e 87       	std	Y+14, r18	; 0x0e
     2e6:	9f 87       	std	Y+15, r25	; 0x0f
     2e8:	88 8b       	std	Y+16, r24	; 0x10
     2ea:	99 81       	ldd	r25, Y+1	; 0x01
     2ec:	2a 81       	ldd	r18, Y+2	; 0x02
     2ee:	3b 81       	ldd	r19, Y+3	; 0x03
     2f0:	4c 81       	ldd	r20, Y+4	; 0x04
     2f2:	5d 81       	ldd	r21, Y+5	; 0x05
     2f4:	6e 81       	ldd	r22, Y+6	; 0x06
     2f6:	7f 81       	ldd	r23, Y+7	; 0x07
     2f8:	a8 85       	ldd	r26, Y+8	; 0x08
     2fa:	b9 85       	ldd	r27, Y+9	; 0x09
     2fc:	1a 85       	ldd	r17, Y+10	; 0x0a
     2fe:	0b 85       	ldd	r16, Y+11	; 0x0b
     300:	fc 84       	ldd	r15, Y+12	; 0x0c
     302:	ed 84       	ldd	r14, Y+13	; 0x0d
     304:	de 84       	ldd	r13, Y+14	; 0x0e
     306:	cf 84       	ldd	r12, Y+15	; 0x0f
     308:	b8 88       	ldd	r11, Y+16	; 0x10
     30a:	88 e0       	ldi	r24, 0x08	; 8
     30c:	e1 e1       	ldi	r30, 0x11	; 17
     30e:	8e 2e       	mov	r8, r30
     310:	91 2c       	mov	r9, r1
     312:	8c 0e       	add	r8, r28
     314:	9d 1e       	adc	r9, r29
     316:	f4 01       	movw	r30, r8
     318:	68 2e       	mov	r6, r24
     31a:	11 92       	st	Z+, r1
     31c:	6a 94       	dec	r6
     31e:	e9 f7       	brne	.-6      	; 0x31a <__divdi3+0x240>
     320:	99 8b       	std	Y+17, r25	; 0x11
     322:	2a 8b       	std	Y+18, r18	; 0x12
     324:	3b 8b       	std	Y+19, r19	; 0x13
     326:	4c 8b       	std	Y+20, r20	; 0x14
     328:	5d 8b       	std	Y+21, r21	; 0x15
     32a:	6e 8b       	std	Y+22, r22	; 0x16
     32c:	7f 8b       	std	Y+23, r23	; 0x17
     32e:	a8 8f       	std	Y+24, r26	; 0x18
     330:	9e 01       	movw	r18, r28
     332:	27 5e       	subi	r18, 0xE7	; 231
     334:	3f 4f       	sbci	r19, 0xFF	; 255
     336:	f9 01       	movw	r30, r18
     338:	11 92       	st	Z+, r1
     33a:	8a 95       	dec	r24
     33c:	e9 f7       	brne	.-6      	; 0x338 <__divdi3+0x25e>
     33e:	b9 8f       	std	Y+25, r27	; 0x19
     340:	1a 8f       	std	Y+26, r17	; 0x1a
     342:	0b 8f       	std	Y+27, r16	; 0x1b
     344:	fc 8e       	std	Y+28, r15	; 0x1c
     346:	ed 8e       	std	Y+29, r14	; 0x1d
     348:	de 8e       	std	Y+30, r13	; 0x1e
     34a:	cf 8e       	std	Y+31, r12	; 0x1f
     34c:	b8 a2       	std	Y+32, r11	; 0x20
     34e:	29 8c       	ldd	r2, Y+25	; 0x19
     350:	3a 8c       	ldd	r3, Y+26	; 0x1a
     352:	4b 8c       	ldd	r4, Y+27	; 0x1b
     354:	5c 8c       	ldd	r5, Y+28	; 0x1c
     356:	ed 8c       	ldd	r14, Y+29	; 0x1d
     358:	fe 8c       	ldd	r15, Y+30	; 0x1e
     35a:	0f 8d       	ldd	r16, Y+31	; 0x1f
     35c:	18 a1       	ldd	r17, Y+32	; 0x20
     35e:	69 88       	ldd	r6, Y+17	; 0x11
     360:	7a 88       	ldd	r7, Y+18	; 0x12
     362:	8b 88       	ldd	r8, Y+19	; 0x13
     364:	9c 88       	ldd	r9, Y+20	; 0x14
     366:	21 96       	adiw	r28, 0x01	; 1
     368:	6c ae       	std	Y+60, r6	; 0x3c
     36a:	7d ae       	std	Y+61, r7	; 0x3d
     36c:	8e ae       	std	Y+62, r8	; 0x3e
     36e:	9f ae       	std	Y+63, r9	; 0x3f
     370:	21 97       	sbiw	r28, 0x01	; 1
     372:	6d 88       	ldd	r6, Y+21	; 0x15
     374:	7e 88       	ldd	r7, Y+22	; 0x16
     376:	8f 88       	ldd	r8, Y+23	; 0x17
     378:	98 8c       	ldd	r9, Y+24	; 0x18
     37a:	e1 14       	cp	r14, r1
     37c:	f1 04       	cpc	r15, r1
     37e:	01 05       	cpc	r16, r1
     380:	11 05       	cpc	r17, r1
     382:	09 f0       	breq	.+2      	; 0x386 <__divdi3+0x2ac>
     384:	d9 c3       	rjmp	.+1970   	; 0xb38 <__stack+0x2d9>
     386:	62 14       	cp	r6, r2
     388:	73 04       	cpc	r7, r3
     38a:	84 04       	cpc	r8, r4
     38c:	95 04       	cpc	r9, r5
     38e:	08 f0       	brcs	.+2      	; 0x392 <__divdi3+0x2b8>
     390:	57 c1       	rjmp	.+686    	; 0x640 <__divdi3+0x566>
     392:	00 e0       	ldi	r16, 0x00	; 0
     394:	20 16       	cp	r2, r16
     396:	00 e0       	ldi	r16, 0x00	; 0
     398:	30 06       	cpc	r3, r16
     39a:	01 e0       	ldi	r16, 0x01	; 1
     39c:	40 06       	cpc	r4, r16
     39e:	00 e0       	ldi	r16, 0x00	; 0
     3a0:	50 06       	cpc	r5, r16
     3a2:	88 f4       	brcc	.+34     	; 0x3c6 <__divdi3+0x2ec>
     3a4:	1f ef       	ldi	r17, 0xFF	; 255
     3a6:	21 16       	cp	r2, r17
     3a8:	31 04       	cpc	r3, r1
     3aa:	41 04       	cpc	r4, r1
     3ac:	51 04       	cpc	r5, r1
     3ae:	39 f0       	breq	.+14     	; 0x3be <__divdi3+0x2e4>
     3b0:	30 f0       	brcs	.+12     	; 0x3be <__divdi3+0x2e4>
     3b2:	48 e0       	ldi	r20, 0x08	; 8
     3b4:	e4 2e       	mov	r14, r20
     3b6:	f1 2c       	mov	r15, r1
     3b8:	01 2d       	mov	r16, r1
     3ba:	11 2d       	mov	r17, r1
     3bc:	18 c0       	rjmp	.+48     	; 0x3ee <__divdi3+0x314>
     3be:	ee 24       	eor	r14, r14
     3c0:	ff 24       	eor	r15, r15
     3c2:	87 01       	movw	r16, r14
     3c4:	14 c0       	rjmp	.+40     	; 0x3ee <__divdi3+0x314>
     3c6:	20 e0       	ldi	r18, 0x00	; 0
     3c8:	22 16       	cp	r2, r18
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	32 06       	cpc	r3, r18
     3ce:	20 e0       	ldi	r18, 0x00	; 0
     3d0:	42 06       	cpc	r4, r18
     3d2:	21 e0       	ldi	r18, 0x01	; 1
     3d4:	52 06       	cpc	r5, r18
     3d6:	30 f0       	brcs	.+12     	; 0x3e4 <__divdi3+0x30a>
     3d8:	38 e1       	ldi	r19, 0x18	; 24
     3da:	e3 2e       	mov	r14, r19
     3dc:	f1 2c       	mov	r15, r1
     3de:	01 2d       	mov	r16, r1
     3e0:	11 2d       	mov	r17, r1
     3e2:	05 c0       	rjmp	.+10     	; 0x3ee <__divdi3+0x314>
     3e4:	20 e1       	ldi	r18, 0x10	; 16
     3e6:	e2 2e       	mov	r14, r18
     3e8:	f1 2c       	mov	r15, r1
     3ea:	01 2d       	mov	r16, r1
     3ec:	11 2d       	mov	r17, r1
     3ee:	d2 01       	movw	r26, r4
     3f0:	c1 01       	movw	r24, r2
     3f2:	0e 2c       	mov	r0, r14
     3f4:	04 c0       	rjmp	.+8      	; 0x3fe <__divdi3+0x324>
     3f6:	b6 95       	lsr	r27
     3f8:	a7 95       	ror	r26
     3fa:	97 95       	ror	r25
     3fc:	87 95       	ror	r24
     3fe:	0a 94       	dec	r0
     400:	d2 f7       	brpl	.-12     	; 0x3f6 <__divdi3+0x31c>
     402:	88 59       	subi	r24, 0x98	; 152
     404:	9f 4f       	sbci	r25, 0xFF	; 255
     406:	dc 01       	movw	r26, r24
     408:	2c 91       	ld	r18, X
     40a:	80 e2       	ldi	r24, 0x20	; 32
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	a0 e0       	ldi	r26, 0x00	; 0
     410:	b0 e0       	ldi	r27, 0x00	; 0
     412:	8e 19       	sub	r24, r14
     414:	9f 09       	sbc	r25, r15
     416:	a0 0b       	sbc	r26, r16
     418:	b1 0b       	sbc	r27, r17
     41a:	7c 01       	movw	r14, r24
     41c:	8d 01       	movw	r16, r26
     41e:	e2 1a       	sub	r14, r18
     420:	f1 08       	sbc	r15, r1
     422:	01 09       	sbc	r16, r1
     424:	11 09       	sbc	r17, r1
     426:	e1 14       	cp	r14, r1
     428:	f1 04       	cpc	r15, r1
     42a:	01 05       	cpc	r16, r1
     42c:	11 05       	cpc	r17, r1
     42e:	d1 f1       	breq	.+116    	; 0x4a4 <__divdi3+0x3ca>
     430:	0e 2c       	mov	r0, r14
     432:	04 c0       	rjmp	.+8      	; 0x43c <__divdi3+0x362>
     434:	22 0c       	add	r2, r2
     436:	33 1c       	adc	r3, r3
     438:	44 1c       	adc	r4, r4
     43a:	55 1c       	adc	r5, r5
     43c:	0a 94       	dec	r0
     43e:	d2 f7       	brpl	.-12     	; 0x434 <__divdi3+0x35a>
     440:	a4 01       	movw	r20, r8
     442:	93 01       	movw	r18, r6
     444:	0e 2c       	mov	r0, r14
     446:	04 c0       	rjmp	.+8      	; 0x450 <__divdi3+0x376>
     448:	22 0f       	add	r18, r18
     44a:	33 1f       	adc	r19, r19
     44c:	44 1f       	adc	r20, r20
     44e:	55 1f       	adc	r21, r21
     450:	0a 94       	dec	r0
     452:	d2 f7       	brpl	.-12     	; 0x448 <__divdi3+0x36e>
     454:	80 e2       	ldi	r24, 0x20	; 32
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	8e 19       	sub	r24, r14
     45a:	9f 09       	sbc	r25, r15
     45c:	21 96       	adiw	r28, 0x01	; 1
     45e:	6c ac       	ldd	r6, Y+60	; 0x3c
     460:	7d ac       	ldd	r7, Y+61	; 0x3d
     462:	8e ac       	ldd	r8, Y+62	; 0x3e
     464:	9f ac       	ldd	r9, Y+63	; 0x3f
     466:	21 97       	sbiw	r28, 0x01	; 1
     468:	04 c0       	rjmp	.+8      	; 0x472 <__divdi3+0x398>
     46a:	96 94       	lsr	r9
     46c:	87 94       	ror	r8
     46e:	77 94       	ror	r7
     470:	67 94       	ror	r6
     472:	8a 95       	dec	r24
     474:	d2 f7       	brpl	.-12     	; 0x46a <__divdi3+0x390>
     476:	62 2a       	or	r6, r18
     478:	73 2a       	or	r7, r19
     47a:	84 2a       	or	r8, r20
     47c:	95 2a       	or	r9, r21
     47e:	21 96       	adiw	r28, 0x01	; 1
     480:	ac ac       	ldd	r10, Y+60	; 0x3c
     482:	bd ac       	ldd	r11, Y+61	; 0x3d
     484:	ce ac       	ldd	r12, Y+62	; 0x3e
     486:	df ac       	ldd	r13, Y+63	; 0x3f
     488:	21 97       	sbiw	r28, 0x01	; 1
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__divdi3+0x3ba>
     48c:	aa 0c       	add	r10, r10
     48e:	bb 1c       	adc	r11, r11
     490:	cc 1c       	adc	r12, r12
     492:	dd 1c       	adc	r13, r13
     494:	ea 94       	dec	r14
     496:	d2 f7       	brpl	.-12     	; 0x48c <__divdi3+0x3b2>
     498:	21 96       	adiw	r28, 0x01	; 1
     49a:	ac ae       	std	Y+60, r10	; 0x3c
     49c:	bd ae       	std	Y+61, r11	; 0x3d
     49e:	ce ae       	std	Y+62, r12	; 0x3e
     4a0:	df ae       	std	Y+63, r13	; 0x3f
     4a2:	21 97       	sbiw	r28, 0x01	; 1
     4a4:	62 01       	movw	r12, r4
     4a6:	ee 24       	eor	r14, r14
     4a8:	ff 24       	eor	r15, r15
     4aa:	29 96       	adiw	r28, 0x09	; 9
     4ac:	cc ae       	std	Y+60, r12	; 0x3c
     4ae:	dd ae       	std	Y+61, r13	; 0x3d
     4b0:	ee ae       	std	Y+62, r14	; 0x3e
     4b2:	ff ae       	std	Y+63, r15	; 0x3f
     4b4:	29 97       	sbiw	r28, 0x09	; 9
     4b6:	92 01       	movw	r18, r4
     4b8:	81 01       	movw	r16, r2
     4ba:	20 70       	andi	r18, 0x00	; 0
     4bc:	30 70       	andi	r19, 0x00	; 0
     4be:	2d 96       	adiw	r28, 0x0d	; 13
     4c0:	0c af       	std	Y+60, r16	; 0x3c
     4c2:	1d af       	std	Y+61, r17	; 0x3d
     4c4:	2e af       	std	Y+62, r18	; 0x3e
     4c6:	3f af       	std	Y+63, r19	; 0x3f
     4c8:	2d 97       	sbiw	r28, 0x0d	; 13
     4ca:	c4 01       	movw	r24, r8
     4cc:	b3 01       	movw	r22, r6
     4ce:	a7 01       	movw	r20, r14
     4d0:	96 01       	movw	r18, r12
     4d2:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     4d6:	7b 01       	movw	r14, r22
     4d8:	8c 01       	movw	r16, r24
     4da:	c4 01       	movw	r24, r8
     4dc:	b3 01       	movw	r22, r6
     4de:	29 96       	adiw	r28, 0x09	; 9
     4e0:	2c ad       	ldd	r18, Y+60	; 0x3c
     4e2:	3d ad       	ldd	r19, Y+61	; 0x3d
     4e4:	4e ad       	ldd	r20, Y+62	; 0x3e
     4e6:	5f ad       	ldd	r21, Y+63	; 0x3f
     4e8:	29 97       	sbiw	r28, 0x09	; 9
     4ea:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     4ee:	c9 01       	movw	r24, r18
     4f0:	da 01       	movw	r26, r20
     4f2:	3c 01       	movw	r6, r24
     4f4:	4d 01       	movw	r8, r26
     4f6:	c4 01       	movw	r24, r8
     4f8:	b3 01       	movw	r22, r6
     4fa:	2d 96       	adiw	r28, 0x0d	; 13
     4fc:	2c ad       	ldd	r18, Y+60	; 0x3c
     4fe:	3d ad       	ldd	r19, Y+61	; 0x3d
     500:	4e ad       	ldd	r20, Y+62	; 0x3e
     502:	5f ad       	ldd	r21, Y+63	; 0x3f
     504:	2d 97       	sbiw	r28, 0x0d	; 13
     506:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     50a:	9b 01       	movw	r18, r22
     50c:	ac 01       	movw	r20, r24
     50e:	87 01       	movw	r16, r14
     510:	ff 24       	eor	r15, r15
     512:	ee 24       	eor	r14, r14
     514:	21 96       	adiw	r28, 0x01	; 1
     516:	ac ac       	ldd	r10, Y+60	; 0x3c
     518:	bd ac       	ldd	r11, Y+61	; 0x3d
     51a:	ce ac       	ldd	r12, Y+62	; 0x3e
     51c:	df ac       	ldd	r13, Y+63	; 0x3f
     51e:	21 97       	sbiw	r28, 0x01	; 1
     520:	c6 01       	movw	r24, r12
     522:	aa 27       	eor	r26, r26
     524:	bb 27       	eor	r27, r27
     526:	57 01       	movw	r10, r14
     528:	68 01       	movw	r12, r16
     52a:	a8 2a       	or	r10, r24
     52c:	b9 2a       	or	r11, r25
     52e:	ca 2a       	or	r12, r26
     530:	db 2a       	or	r13, r27
     532:	a2 16       	cp	r10, r18
     534:	b3 06       	cpc	r11, r19
     536:	c4 06       	cpc	r12, r20
     538:	d5 06       	cpc	r13, r21
     53a:	e0 f4       	brcc	.+56     	; 0x574 <__divdi3+0x49a>
     53c:	08 94       	sec
     53e:	61 08       	sbc	r6, r1
     540:	71 08       	sbc	r7, r1
     542:	81 08       	sbc	r8, r1
     544:	91 08       	sbc	r9, r1
     546:	a2 0c       	add	r10, r2
     548:	b3 1c       	adc	r11, r3
     54a:	c4 1c       	adc	r12, r4
     54c:	d5 1c       	adc	r13, r5
     54e:	a2 14       	cp	r10, r2
     550:	b3 04       	cpc	r11, r3
     552:	c4 04       	cpc	r12, r4
     554:	d5 04       	cpc	r13, r5
     556:	70 f0       	brcs	.+28     	; 0x574 <__divdi3+0x49a>
     558:	a2 16       	cp	r10, r18
     55a:	b3 06       	cpc	r11, r19
     55c:	c4 06       	cpc	r12, r20
     55e:	d5 06       	cpc	r13, r21
     560:	48 f4       	brcc	.+18     	; 0x574 <__divdi3+0x49a>
     562:	08 94       	sec
     564:	61 08       	sbc	r6, r1
     566:	71 08       	sbc	r7, r1
     568:	81 08       	sbc	r8, r1
     56a:	91 08       	sbc	r9, r1
     56c:	a2 0c       	add	r10, r2
     56e:	b3 1c       	adc	r11, r3
     570:	c4 1c       	adc	r12, r4
     572:	d5 1c       	adc	r13, r5
     574:	a2 1a       	sub	r10, r18
     576:	b3 0a       	sbc	r11, r19
     578:	c4 0a       	sbc	r12, r20
     57a:	d5 0a       	sbc	r13, r21
     57c:	c6 01       	movw	r24, r12
     57e:	b5 01       	movw	r22, r10
     580:	29 96       	adiw	r28, 0x09	; 9
     582:	2c ad       	ldd	r18, Y+60	; 0x3c
     584:	3d ad       	ldd	r19, Y+61	; 0x3d
     586:	4e ad       	ldd	r20, Y+62	; 0x3e
     588:	5f ad       	ldd	r21, Y+63	; 0x3f
     58a:	29 97       	sbiw	r28, 0x09	; 9
     58c:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     590:	7b 01       	movw	r14, r22
     592:	8c 01       	movw	r16, r24
     594:	c6 01       	movw	r24, r12
     596:	b5 01       	movw	r22, r10
     598:	29 96       	adiw	r28, 0x09	; 9
     59a:	2c ad       	ldd	r18, Y+60	; 0x3c
     59c:	3d ad       	ldd	r19, Y+61	; 0x3d
     59e:	4e ad       	ldd	r20, Y+62	; 0x3e
     5a0:	5f ad       	ldd	r21, Y+63	; 0x3f
     5a2:	29 97       	sbiw	r28, 0x09	; 9
     5a4:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     5a8:	c9 01       	movw	r24, r18
     5aa:	da 01       	movw	r26, r20
     5ac:	5c 01       	movw	r10, r24
     5ae:	6d 01       	movw	r12, r26
     5b0:	c6 01       	movw	r24, r12
     5b2:	b5 01       	movw	r22, r10
     5b4:	2d 96       	adiw	r28, 0x0d	; 13
     5b6:	2c ad       	ldd	r18, Y+60	; 0x3c
     5b8:	3d ad       	ldd	r19, Y+61	; 0x3d
     5ba:	4e ad       	ldd	r20, Y+62	; 0x3e
     5bc:	5f ad       	ldd	r21, Y+63	; 0x3f
     5be:	2d 97       	sbiw	r28, 0x0d	; 13
     5c0:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     5c4:	9b 01       	movw	r18, r22
     5c6:	ac 01       	movw	r20, r24
     5c8:	87 01       	movw	r16, r14
     5ca:	ff 24       	eor	r15, r15
     5cc:	ee 24       	eor	r14, r14
     5ce:	21 96       	adiw	r28, 0x01	; 1
     5d0:	8c ad       	ldd	r24, Y+60	; 0x3c
     5d2:	9d ad       	ldd	r25, Y+61	; 0x3d
     5d4:	ae ad       	ldd	r26, Y+62	; 0x3e
     5d6:	bf ad       	ldd	r27, Y+63	; 0x3f
     5d8:	21 97       	sbiw	r28, 0x01	; 1
     5da:	a0 70       	andi	r26, 0x00	; 0
     5dc:	b0 70       	andi	r27, 0x00	; 0
     5de:	e8 2a       	or	r14, r24
     5e0:	f9 2a       	or	r15, r25
     5e2:	0a 2b       	or	r16, r26
     5e4:	1b 2b       	or	r17, r27
     5e6:	e2 16       	cp	r14, r18
     5e8:	f3 06       	cpc	r15, r19
     5ea:	04 07       	cpc	r16, r20
     5ec:	15 07       	cpc	r17, r21
     5ee:	c0 f4       	brcc	.+48     	; 0x620 <__divdi3+0x546>
     5f0:	08 94       	sec
     5f2:	a1 08       	sbc	r10, r1
     5f4:	b1 08       	sbc	r11, r1
     5f6:	c1 08       	sbc	r12, r1
     5f8:	d1 08       	sbc	r13, r1
     5fa:	e2 0c       	add	r14, r2
     5fc:	f3 1c       	adc	r15, r3
     5fe:	04 1d       	adc	r16, r4
     600:	15 1d       	adc	r17, r5
     602:	e2 14       	cp	r14, r2
     604:	f3 04       	cpc	r15, r3
     606:	04 05       	cpc	r16, r4
     608:	15 05       	cpc	r17, r5
     60a:	50 f0       	brcs	.+20     	; 0x620 <__divdi3+0x546>
     60c:	e2 16       	cp	r14, r18
     60e:	f3 06       	cpc	r15, r19
     610:	04 07       	cpc	r16, r20
     612:	15 07       	cpc	r17, r21
     614:	28 f4       	brcc	.+10     	; 0x620 <__divdi3+0x546>
     616:	08 94       	sec
     618:	a1 08       	sbc	r10, r1
     61a:	b1 08       	sbc	r11, r1
     61c:	c1 08       	sbc	r12, r1
     61e:	d1 08       	sbc	r13, r1
     620:	d3 01       	movw	r26, r6
     622:	99 27       	eor	r25, r25
     624:	88 27       	eor	r24, r24
     626:	86 01       	movw	r16, r12
     628:	75 01       	movw	r14, r10
     62a:	e8 2a       	or	r14, r24
     62c:	f9 2a       	or	r15, r25
     62e:	0a 2b       	or	r16, r26
     630:	1b 2b       	or	r17, r27
     632:	25 96       	adiw	r28, 0x05	; 5
     634:	ec ae       	std	Y+60, r14	; 0x3c
     636:	fd ae       	std	Y+61, r15	; 0x3d
     638:	0e af       	std	Y+62, r16	; 0x3e
     63a:	1f af       	std	Y+63, r17	; 0x3f
     63c:	25 97       	sbiw	r28, 0x05	; 5
     63e:	eb c4       	rjmp	.+2518   	; 0x1016 <__stack+0x7b7>
     640:	21 14       	cp	r2, r1
     642:	31 04       	cpc	r3, r1
     644:	41 04       	cpc	r4, r1
     646:	51 04       	cpc	r5, r1
     648:	71 f4       	brne	.+28     	; 0x666 <__divdi3+0x58c>
     64a:	61 e0       	ldi	r22, 0x01	; 1
     64c:	70 e0       	ldi	r23, 0x00	; 0
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	40 e0       	ldi	r20, 0x00	; 0
     658:	50 e0       	ldi	r21, 0x00	; 0
     65a:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     65e:	c9 01       	movw	r24, r18
     660:	da 01       	movw	r26, r20
     662:	1c 01       	movw	r2, r24
     664:	2d 01       	movw	r4, r26
     666:	00 e0       	ldi	r16, 0x00	; 0
     668:	20 16       	cp	r2, r16
     66a:	00 e0       	ldi	r16, 0x00	; 0
     66c:	30 06       	cpc	r3, r16
     66e:	01 e0       	ldi	r16, 0x01	; 1
     670:	40 06       	cpc	r4, r16
     672:	00 e0       	ldi	r16, 0x00	; 0
     674:	50 06       	cpc	r5, r16
     676:	88 f4       	brcc	.+34     	; 0x69a <__divdi3+0x5c0>
     678:	1f ef       	ldi	r17, 0xFF	; 255
     67a:	21 16       	cp	r2, r17
     67c:	31 04       	cpc	r3, r1
     67e:	41 04       	cpc	r4, r1
     680:	51 04       	cpc	r5, r1
     682:	31 f0       	breq	.+12     	; 0x690 <__divdi3+0x5b6>
     684:	28 f0       	brcs	.+10     	; 0x690 <__divdi3+0x5b6>
     686:	48 e0       	ldi	r20, 0x08	; 8
     688:	50 e0       	ldi	r21, 0x00	; 0
     68a:	60 e0       	ldi	r22, 0x00	; 0
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	17 c0       	rjmp	.+46     	; 0x6be <__divdi3+0x5e4>
     690:	40 e0       	ldi	r20, 0x00	; 0
     692:	50 e0       	ldi	r21, 0x00	; 0
     694:	60 e0       	ldi	r22, 0x00	; 0
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	12 c0       	rjmp	.+36     	; 0x6be <__divdi3+0x5e4>
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	22 16       	cp	r2, r18
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	32 06       	cpc	r3, r18
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	42 06       	cpc	r4, r18
     6a6:	21 e0       	ldi	r18, 0x01	; 1
     6a8:	52 06       	cpc	r5, r18
     6aa:	28 f0       	brcs	.+10     	; 0x6b6 <__divdi3+0x5dc>
     6ac:	48 e1       	ldi	r20, 0x18	; 24
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	04 c0       	rjmp	.+8      	; 0x6be <__divdi3+0x5e4>
     6b6:	40 e1       	ldi	r20, 0x10	; 16
     6b8:	50 e0       	ldi	r21, 0x00	; 0
     6ba:	60 e0       	ldi	r22, 0x00	; 0
     6bc:	70 e0       	ldi	r23, 0x00	; 0
     6be:	d2 01       	movw	r26, r4
     6c0:	c1 01       	movw	r24, r2
     6c2:	04 2e       	mov	r0, r20
     6c4:	04 c0       	rjmp	.+8      	; 0x6ce <__divdi3+0x5f4>
     6c6:	b6 95       	lsr	r27
     6c8:	a7 95       	ror	r26
     6ca:	97 95       	ror	r25
     6cc:	87 95       	ror	r24
     6ce:	0a 94       	dec	r0
     6d0:	d2 f7       	brpl	.-12     	; 0x6c6 <__divdi3+0x5ec>
     6d2:	88 59       	subi	r24, 0x98	; 152
     6d4:	9f 4f       	sbci	r25, 0xFF	; 255
     6d6:	dc 01       	movw	r26, r24
     6d8:	2c 91       	ld	r18, X
     6da:	e0 e2       	ldi	r30, 0x20	; 32
     6dc:	ee 2e       	mov	r14, r30
     6de:	f1 2c       	mov	r15, r1
     6e0:	01 2d       	mov	r16, r1
     6e2:	11 2d       	mov	r17, r1
     6e4:	d8 01       	movw	r26, r16
     6e6:	c7 01       	movw	r24, r14
     6e8:	84 1b       	sub	r24, r20
     6ea:	95 0b       	sbc	r25, r21
     6ec:	a6 0b       	sbc	r26, r22
     6ee:	b7 0b       	sbc	r27, r23
     6f0:	82 1b       	sub	r24, r18
     6f2:	91 09       	sbc	r25, r1
     6f4:	a1 09       	sbc	r26, r1
     6f6:	b1 09       	sbc	r27, r1
     6f8:	00 97       	sbiw	r24, 0x00	; 0
     6fa:	a1 05       	cpc	r26, r1
     6fc:	b1 05       	cpc	r27, r1
     6fe:	61 f4       	brne	.+24     	; 0x718 <__divdi3+0x63e>
     700:	64 01       	movw	r12, r8
     702:	53 01       	movw	r10, r6
     704:	a2 18       	sub	r10, r2
     706:	b3 08       	sbc	r11, r3
     708:	c4 08       	sbc	r12, r4
     70a:	d5 08       	sbc	r13, r5
     70c:	31 e0       	ldi	r19, 0x01	; 1
     70e:	63 2e       	mov	r6, r19
     710:	71 2c       	mov	r7, r1
     712:	81 2c       	mov	r8, r1
     714:	91 2c       	mov	r9, r1
     716:	24 c1       	rjmp	.+584    	; 0x960 <__stack+0x101>
     718:	e3 96       	adiw	r28, 0x33	; 51
     71a:	8f af       	std	Y+63, r24	; 0x3f
     71c:	e3 97       	sbiw	r28, 0x33	; 51
     71e:	08 2e       	mov	r0, r24
     720:	04 c0       	rjmp	.+8      	; 0x72a <__divdi3+0x650>
     722:	22 0c       	add	r2, r2
     724:	33 1c       	adc	r3, r3
     726:	44 1c       	adc	r4, r4
     728:	55 1c       	adc	r5, r5
     72a:	0a 94       	dec	r0
     72c:	d2 f7       	brpl	.-12     	; 0x722 <__divdi3+0x648>
     72e:	ee 2d       	mov	r30, r14
     730:	e8 1b       	sub	r30, r24
     732:	64 01       	movw	r12, r8
     734:	53 01       	movw	r10, r6
     736:	0e 2e       	mov	r0, r30
     738:	04 c0       	rjmp	.+8      	; 0x742 <__divdi3+0x668>
     73a:	d6 94       	lsr	r13
     73c:	c7 94       	ror	r12
     73e:	b7 94       	ror	r11
     740:	a7 94       	ror	r10
     742:	0a 94       	dec	r0
     744:	d2 f7       	brpl	.-12     	; 0x73a <__divdi3+0x660>
     746:	a4 01       	movw	r20, r8
     748:	93 01       	movw	r18, r6
     74a:	e3 96       	adiw	r28, 0x33	; 51
     74c:	0f ac       	ldd	r0, Y+63	; 0x3f
     74e:	e3 97       	sbiw	r28, 0x33	; 51
     750:	04 c0       	rjmp	.+8      	; 0x75a <__divdi3+0x680>
     752:	22 0f       	add	r18, r18
     754:	33 1f       	adc	r19, r19
     756:	44 1f       	adc	r20, r20
     758:	55 1f       	adc	r21, r21
     75a:	0a 94       	dec	r0
     75c:	d2 f7       	brpl	.-12     	; 0x752 <__divdi3+0x678>
     75e:	21 96       	adiw	r28, 0x01	; 1
     760:	6c ac       	ldd	r6, Y+60	; 0x3c
     762:	7d ac       	ldd	r7, Y+61	; 0x3d
     764:	8e ac       	ldd	r8, Y+62	; 0x3e
     766:	9f ac       	ldd	r9, Y+63	; 0x3f
     768:	21 97       	sbiw	r28, 0x01	; 1
     76a:	0e 2e       	mov	r0, r30
     76c:	04 c0       	rjmp	.+8      	; 0x776 <__divdi3+0x69c>
     76e:	96 94       	lsr	r9
     770:	87 94       	ror	r8
     772:	77 94       	ror	r7
     774:	67 94       	ror	r6
     776:	0a 94       	dec	r0
     778:	d2 f7       	brpl	.-12     	; 0x76e <__divdi3+0x694>
     77a:	84 01       	movw	r16, r8
     77c:	73 01       	movw	r14, r6
     77e:	e2 2a       	or	r14, r18
     780:	f3 2a       	or	r15, r19
     782:	04 2b       	or	r16, r20
     784:	15 2b       	or	r17, r21
     786:	e9 ae       	std	Y+57, r14	; 0x39
     788:	fa ae       	std	Y+58, r15	; 0x3a
     78a:	0b af       	std	Y+59, r16	; 0x3b
     78c:	1c af       	std	Y+60, r17	; 0x3c
     78e:	32 01       	movw	r6, r4
     790:	88 24       	eor	r8, r8
     792:	99 24       	eor	r9, r9
     794:	92 01       	movw	r18, r4
     796:	81 01       	movw	r16, r2
     798:	20 70       	andi	r18, 0x00	; 0
     79a:	30 70       	andi	r19, 0x00	; 0
     79c:	61 96       	adiw	r28, 0x11	; 17
     79e:	0c af       	std	Y+60, r16	; 0x3c
     7a0:	1d af       	std	Y+61, r17	; 0x3d
     7a2:	2e af       	std	Y+62, r18	; 0x3e
     7a4:	3f af       	std	Y+63, r19	; 0x3f
     7a6:	61 97       	sbiw	r28, 0x11	; 17
     7a8:	c6 01       	movw	r24, r12
     7aa:	b5 01       	movw	r22, r10
     7ac:	a4 01       	movw	r20, r8
     7ae:	93 01       	movw	r18, r6
     7b0:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     7b4:	7b 01       	movw	r14, r22
     7b6:	8c 01       	movw	r16, r24
     7b8:	c6 01       	movw	r24, r12
     7ba:	b5 01       	movw	r22, r10
     7bc:	a4 01       	movw	r20, r8
     7be:	93 01       	movw	r18, r6
     7c0:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     7c4:	c9 01       	movw	r24, r18
     7c6:	da 01       	movw	r26, r20
     7c8:	65 96       	adiw	r28, 0x15	; 21
     7ca:	8c af       	std	Y+60, r24	; 0x3c
     7cc:	9d af       	std	Y+61, r25	; 0x3d
     7ce:	ae af       	std	Y+62, r26	; 0x3e
     7d0:	bf af       	std	Y+63, r27	; 0x3f
     7d2:	65 97       	sbiw	r28, 0x15	; 21
     7d4:	bc 01       	movw	r22, r24
     7d6:	cd 01       	movw	r24, r26
     7d8:	61 96       	adiw	r28, 0x11	; 17
     7da:	2c ad       	ldd	r18, Y+60	; 0x3c
     7dc:	3d ad       	ldd	r19, Y+61	; 0x3d
     7de:	4e ad       	ldd	r20, Y+62	; 0x3e
     7e0:	5f ad       	ldd	r21, Y+63	; 0x3f
     7e2:	61 97       	sbiw	r28, 0x11	; 17
     7e4:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     7e8:	9b 01       	movw	r18, r22
     7ea:	ac 01       	movw	r20, r24
     7ec:	87 01       	movw	r16, r14
     7ee:	ff 24       	eor	r15, r15
     7f0:	ee 24       	eor	r14, r14
     7f2:	a9 ac       	ldd	r10, Y+57	; 0x39
     7f4:	ba ac       	ldd	r11, Y+58	; 0x3a
     7f6:	cb ac       	ldd	r12, Y+59	; 0x3b
     7f8:	dc ac       	ldd	r13, Y+60	; 0x3c
     7fa:	c6 01       	movw	r24, r12
     7fc:	aa 27       	eor	r26, r26
     7fe:	bb 27       	eor	r27, r27
     800:	5c 01       	movw	r10, r24
     802:	6d 01       	movw	r12, r26
     804:	ae 28       	or	r10, r14
     806:	bf 28       	or	r11, r15
     808:	c0 2a       	or	r12, r16
     80a:	d1 2a       	or	r13, r17
     80c:	a2 16       	cp	r10, r18
     80e:	b3 06       	cpc	r11, r19
     810:	c4 06       	cpc	r12, r20
     812:	d5 06       	cpc	r13, r21
     814:	60 f5       	brcc	.+88     	; 0x86e <__stack+0xf>
     816:	65 96       	adiw	r28, 0x15	; 21
     818:	6c ad       	ldd	r22, Y+60	; 0x3c
     81a:	7d ad       	ldd	r23, Y+61	; 0x3d
     81c:	8e ad       	ldd	r24, Y+62	; 0x3e
     81e:	9f ad       	ldd	r25, Y+63	; 0x3f
     820:	65 97       	sbiw	r28, 0x15	; 21
     822:	61 50       	subi	r22, 0x01	; 1
     824:	70 40       	sbci	r23, 0x00	; 0
     826:	80 40       	sbci	r24, 0x00	; 0
     828:	90 40       	sbci	r25, 0x00	; 0
     82a:	65 96       	adiw	r28, 0x15	; 21
     82c:	6c af       	std	Y+60, r22	; 0x3c
     82e:	7d af       	std	Y+61, r23	; 0x3d
     830:	8e af       	std	Y+62, r24	; 0x3e
     832:	9f af       	std	Y+63, r25	; 0x3f
     834:	65 97       	sbiw	r28, 0x15	; 21
     836:	a2 0c       	add	r10, r2
     838:	b3 1c       	adc	r11, r3
     83a:	c4 1c       	adc	r12, r4
     83c:	d5 1c       	adc	r13, r5
     83e:	a2 14       	cp	r10, r2
     840:	b3 04       	cpc	r11, r3
     842:	c4 04       	cpc	r12, r4
     844:	d5 04       	cpc	r13, r5
     846:	98 f0       	brcs	.+38     	; 0x86e <__stack+0xf>
     848:	a2 16       	cp	r10, r18
     84a:	b3 06       	cpc	r11, r19
     84c:	c4 06       	cpc	r12, r20
     84e:	d5 06       	cpc	r13, r21
     850:	70 f4       	brcc	.+28     	; 0x86e <__stack+0xf>
     852:	61 50       	subi	r22, 0x01	; 1
     854:	70 40       	sbci	r23, 0x00	; 0
     856:	80 40       	sbci	r24, 0x00	; 0
     858:	90 40       	sbci	r25, 0x00	; 0
     85a:	65 96       	adiw	r28, 0x15	; 21
     85c:	6c af       	std	Y+60, r22	; 0x3c
     85e:	7d af       	std	Y+61, r23	; 0x3d
     860:	8e af       	std	Y+62, r24	; 0x3e
     862:	9f af       	std	Y+63, r25	; 0x3f
     864:	65 97       	sbiw	r28, 0x15	; 21
     866:	a2 0c       	add	r10, r2
     868:	b3 1c       	adc	r11, r3
     86a:	c4 1c       	adc	r12, r4
     86c:	d5 1c       	adc	r13, r5
     86e:	a2 1a       	sub	r10, r18
     870:	b3 0a       	sbc	r11, r19
     872:	c4 0a       	sbc	r12, r20
     874:	d5 0a       	sbc	r13, r21
     876:	c6 01       	movw	r24, r12
     878:	b5 01       	movw	r22, r10
     87a:	a4 01       	movw	r20, r8
     87c:	93 01       	movw	r18, r6
     87e:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     882:	7b 01       	movw	r14, r22
     884:	8c 01       	movw	r16, r24
     886:	c6 01       	movw	r24, r12
     888:	b5 01       	movw	r22, r10
     88a:	a4 01       	movw	r20, r8
     88c:	93 01       	movw	r18, r6
     88e:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     892:	c9 01       	movw	r24, r18
     894:	da 01       	movw	r26, r20
     896:	3c 01       	movw	r6, r24
     898:	4d 01       	movw	r8, r26
     89a:	c4 01       	movw	r24, r8
     89c:	b3 01       	movw	r22, r6
     89e:	61 96       	adiw	r28, 0x11	; 17
     8a0:	2c ad       	ldd	r18, Y+60	; 0x3c
     8a2:	3d ad       	ldd	r19, Y+61	; 0x3d
     8a4:	4e ad       	ldd	r20, Y+62	; 0x3e
     8a6:	5f ad       	ldd	r21, Y+63	; 0x3f
     8a8:	61 97       	sbiw	r28, 0x11	; 17
     8aa:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     8ae:	9b 01       	movw	r18, r22
     8b0:	ac 01       	movw	r20, r24
     8b2:	87 01       	movw	r16, r14
     8b4:	ff 24       	eor	r15, r15
     8b6:	ee 24       	eor	r14, r14
     8b8:	89 ad       	ldd	r24, Y+57	; 0x39
     8ba:	9a ad       	ldd	r25, Y+58	; 0x3a
     8bc:	ab ad       	ldd	r26, Y+59	; 0x3b
     8be:	bc ad       	ldd	r27, Y+60	; 0x3c
     8c0:	a0 70       	andi	r26, 0x00	; 0
     8c2:	b0 70       	andi	r27, 0x00	; 0
     8c4:	57 01       	movw	r10, r14
     8c6:	68 01       	movw	r12, r16
     8c8:	a8 2a       	or	r10, r24
     8ca:	b9 2a       	or	r11, r25
     8cc:	ca 2a       	or	r12, r26
     8ce:	db 2a       	or	r13, r27
     8d0:	a2 16       	cp	r10, r18
     8d2:	b3 06       	cpc	r11, r19
     8d4:	c4 06       	cpc	r12, r20
     8d6:	d5 06       	cpc	r13, r21
     8d8:	e0 f4       	brcc	.+56     	; 0x912 <__stack+0xb3>
     8da:	08 94       	sec
     8dc:	61 08       	sbc	r6, r1
     8de:	71 08       	sbc	r7, r1
     8e0:	81 08       	sbc	r8, r1
     8e2:	91 08       	sbc	r9, r1
     8e4:	a2 0c       	add	r10, r2
     8e6:	b3 1c       	adc	r11, r3
     8e8:	c4 1c       	adc	r12, r4
     8ea:	d5 1c       	adc	r13, r5
     8ec:	a2 14       	cp	r10, r2
     8ee:	b3 04       	cpc	r11, r3
     8f0:	c4 04       	cpc	r12, r4
     8f2:	d5 04       	cpc	r13, r5
     8f4:	70 f0       	brcs	.+28     	; 0x912 <__stack+0xb3>
     8f6:	a2 16       	cp	r10, r18
     8f8:	b3 06       	cpc	r11, r19
     8fa:	c4 06       	cpc	r12, r20
     8fc:	d5 06       	cpc	r13, r21
     8fe:	48 f4       	brcc	.+18     	; 0x912 <__stack+0xb3>
     900:	08 94       	sec
     902:	61 08       	sbc	r6, r1
     904:	71 08       	sbc	r7, r1
     906:	81 08       	sbc	r8, r1
     908:	91 08       	sbc	r9, r1
     90a:	a2 0c       	add	r10, r2
     90c:	b3 1c       	adc	r11, r3
     90e:	c4 1c       	adc	r12, r4
     910:	d5 1c       	adc	r13, r5
     912:	21 96       	adiw	r28, 0x01	; 1
     914:	8c ad       	ldd	r24, Y+60	; 0x3c
     916:	9d ad       	ldd	r25, Y+61	; 0x3d
     918:	ae ad       	ldd	r26, Y+62	; 0x3e
     91a:	bf ad       	ldd	r27, Y+63	; 0x3f
     91c:	21 97       	sbiw	r28, 0x01	; 1
     91e:	e3 96       	adiw	r28, 0x33	; 51
     920:	0f ac       	ldd	r0, Y+63	; 0x3f
     922:	e3 97       	sbiw	r28, 0x33	; 51
     924:	04 c0       	rjmp	.+8      	; 0x92e <__stack+0xcf>
     926:	88 0f       	add	r24, r24
     928:	99 1f       	adc	r25, r25
     92a:	aa 1f       	adc	r26, r26
     92c:	bb 1f       	adc	r27, r27
     92e:	0a 94       	dec	r0
     930:	d2 f7       	brpl	.-12     	; 0x926 <__stack+0xc7>
     932:	21 96       	adiw	r28, 0x01	; 1
     934:	8c af       	std	Y+60, r24	; 0x3c
     936:	9d af       	std	Y+61, r25	; 0x3d
     938:	ae af       	std	Y+62, r26	; 0x3e
     93a:	bf af       	std	Y+63, r27	; 0x3f
     93c:	21 97       	sbiw	r28, 0x01	; 1
     93e:	a2 1a       	sub	r10, r18
     940:	b3 0a       	sbc	r11, r19
     942:	c4 0a       	sbc	r12, r20
     944:	d5 0a       	sbc	r13, r21
     946:	65 96       	adiw	r28, 0x15	; 21
     948:	ec ac       	ldd	r14, Y+60	; 0x3c
     94a:	fd ac       	ldd	r15, Y+61	; 0x3d
     94c:	0e ad       	ldd	r16, Y+62	; 0x3e
     94e:	1f ad       	ldd	r17, Y+63	; 0x3f
     950:	65 97       	sbiw	r28, 0x15	; 21
     952:	d7 01       	movw	r26, r14
     954:	99 27       	eor	r25, r25
     956:	88 27       	eor	r24, r24
     958:	68 2a       	or	r6, r24
     95a:	79 2a       	or	r7, r25
     95c:	8a 2a       	or	r8, r26
     95e:	9b 2a       	or	r9, r27
     960:	82 01       	movw	r16, r4
     962:	22 27       	eor	r18, r18
     964:	33 27       	eor	r19, r19
     966:	69 96       	adiw	r28, 0x19	; 25
     968:	0c af       	std	Y+60, r16	; 0x3c
     96a:	1d af       	std	Y+61, r17	; 0x3d
     96c:	2e af       	std	Y+62, r18	; 0x3e
     96e:	3f af       	std	Y+63, r19	; 0x3f
     970:	69 97       	sbiw	r28, 0x19	; 25
     972:	a2 01       	movw	r20, r4
     974:	91 01       	movw	r18, r2
     976:	40 70       	andi	r20, 0x00	; 0
     978:	50 70       	andi	r21, 0x00	; 0
     97a:	6d 96       	adiw	r28, 0x1d	; 29
     97c:	2c af       	std	Y+60, r18	; 0x3c
     97e:	3d af       	std	Y+61, r19	; 0x3d
     980:	4e af       	std	Y+62, r20	; 0x3e
     982:	5f af       	std	Y+63, r21	; 0x3f
     984:	6d 97       	sbiw	r28, 0x1d	; 29
     986:	c6 01       	movw	r24, r12
     988:	b5 01       	movw	r22, r10
     98a:	69 96       	adiw	r28, 0x19	; 25
     98c:	2c ad       	ldd	r18, Y+60	; 0x3c
     98e:	3d ad       	ldd	r19, Y+61	; 0x3d
     990:	4e ad       	ldd	r20, Y+62	; 0x3e
     992:	5f ad       	ldd	r21, Y+63	; 0x3f
     994:	69 97       	sbiw	r28, 0x19	; 25
     996:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     99a:	7b 01       	movw	r14, r22
     99c:	8c 01       	movw	r16, r24
     99e:	c6 01       	movw	r24, r12
     9a0:	b5 01       	movw	r22, r10
     9a2:	69 96       	adiw	r28, 0x19	; 25
     9a4:	2c ad       	ldd	r18, Y+60	; 0x3c
     9a6:	3d ad       	ldd	r19, Y+61	; 0x3d
     9a8:	4e ad       	ldd	r20, Y+62	; 0x3e
     9aa:	5f ad       	ldd	r21, Y+63	; 0x3f
     9ac:	69 97       	sbiw	r28, 0x19	; 25
     9ae:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     9b2:	c9 01       	movw	r24, r18
     9b4:	da 01       	movw	r26, r20
     9b6:	a1 96       	adiw	r28, 0x21	; 33
     9b8:	8c af       	std	Y+60, r24	; 0x3c
     9ba:	9d af       	std	Y+61, r25	; 0x3d
     9bc:	ae af       	std	Y+62, r26	; 0x3e
     9be:	bf af       	std	Y+63, r27	; 0x3f
     9c0:	a1 97       	sbiw	r28, 0x21	; 33
     9c2:	bc 01       	movw	r22, r24
     9c4:	cd 01       	movw	r24, r26
     9c6:	6d 96       	adiw	r28, 0x1d	; 29
     9c8:	2c ad       	ldd	r18, Y+60	; 0x3c
     9ca:	3d ad       	ldd	r19, Y+61	; 0x3d
     9cc:	4e ad       	ldd	r20, Y+62	; 0x3e
     9ce:	5f ad       	ldd	r21, Y+63	; 0x3f
     9d0:	6d 97       	sbiw	r28, 0x1d	; 29
     9d2:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     9d6:	9b 01       	movw	r18, r22
     9d8:	ac 01       	movw	r20, r24
     9da:	87 01       	movw	r16, r14
     9dc:	ff 24       	eor	r15, r15
     9de:	ee 24       	eor	r14, r14
     9e0:	21 96       	adiw	r28, 0x01	; 1
     9e2:	ac ac       	ldd	r10, Y+60	; 0x3c
     9e4:	bd ac       	ldd	r11, Y+61	; 0x3d
     9e6:	ce ac       	ldd	r12, Y+62	; 0x3e
     9e8:	df ac       	ldd	r13, Y+63	; 0x3f
     9ea:	21 97       	sbiw	r28, 0x01	; 1
     9ec:	c6 01       	movw	r24, r12
     9ee:	aa 27       	eor	r26, r26
     9f0:	bb 27       	eor	r27, r27
     9f2:	57 01       	movw	r10, r14
     9f4:	68 01       	movw	r12, r16
     9f6:	a8 2a       	or	r10, r24
     9f8:	b9 2a       	or	r11, r25
     9fa:	ca 2a       	or	r12, r26
     9fc:	db 2a       	or	r13, r27
     9fe:	a2 16       	cp	r10, r18
     a00:	b3 06       	cpc	r11, r19
     a02:	c4 06       	cpc	r12, r20
     a04:	d5 06       	cpc	r13, r21
     a06:	60 f5       	brcc	.+88     	; 0xa60 <__stack+0x201>
     a08:	a1 96       	adiw	r28, 0x21	; 33
     a0a:	6c ad       	ldd	r22, Y+60	; 0x3c
     a0c:	7d ad       	ldd	r23, Y+61	; 0x3d
     a0e:	8e ad       	ldd	r24, Y+62	; 0x3e
     a10:	9f ad       	ldd	r25, Y+63	; 0x3f
     a12:	a1 97       	sbiw	r28, 0x21	; 33
     a14:	61 50       	subi	r22, 0x01	; 1
     a16:	70 40       	sbci	r23, 0x00	; 0
     a18:	80 40       	sbci	r24, 0x00	; 0
     a1a:	90 40       	sbci	r25, 0x00	; 0
     a1c:	a1 96       	adiw	r28, 0x21	; 33
     a1e:	6c af       	std	Y+60, r22	; 0x3c
     a20:	7d af       	std	Y+61, r23	; 0x3d
     a22:	8e af       	std	Y+62, r24	; 0x3e
     a24:	9f af       	std	Y+63, r25	; 0x3f
     a26:	a1 97       	sbiw	r28, 0x21	; 33
     a28:	a2 0c       	add	r10, r2
     a2a:	b3 1c       	adc	r11, r3
     a2c:	c4 1c       	adc	r12, r4
     a2e:	d5 1c       	adc	r13, r5
     a30:	a2 14       	cp	r10, r2
     a32:	b3 04       	cpc	r11, r3
     a34:	c4 04       	cpc	r12, r4
     a36:	d5 04       	cpc	r13, r5
     a38:	98 f0       	brcs	.+38     	; 0xa60 <__stack+0x201>
     a3a:	a2 16       	cp	r10, r18
     a3c:	b3 06       	cpc	r11, r19
     a3e:	c4 06       	cpc	r12, r20
     a40:	d5 06       	cpc	r13, r21
     a42:	70 f4       	brcc	.+28     	; 0xa60 <__stack+0x201>
     a44:	61 50       	subi	r22, 0x01	; 1
     a46:	70 40       	sbci	r23, 0x00	; 0
     a48:	80 40       	sbci	r24, 0x00	; 0
     a4a:	90 40       	sbci	r25, 0x00	; 0
     a4c:	a1 96       	adiw	r28, 0x21	; 33
     a4e:	6c af       	std	Y+60, r22	; 0x3c
     a50:	7d af       	std	Y+61, r23	; 0x3d
     a52:	8e af       	std	Y+62, r24	; 0x3e
     a54:	9f af       	std	Y+63, r25	; 0x3f
     a56:	a1 97       	sbiw	r28, 0x21	; 33
     a58:	a2 0c       	add	r10, r2
     a5a:	b3 1c       	adc	r11, r3
     a5c:	c4 1c       	adc	r12, r4
     a5e:	d5 1c       	adc	r13, r5
     a60:	a2 1a       	sub	r10, r18
     a62:	b3 0a       	sbc	r11, r19
     a64:	c4 0a       	sbc	r12, r20
     a66:	d5 0a       	sbc	r13, r21
     a68:	c6 01       	movw	r24, r12
     a6a:	b5 01       	movw	r22, r10
     a6c:	69 96       	adiw	r28, 0x19	; 25
     a6e:	2c ad       	ldd	r18, Y+60	; 0x3c
     a70:	3d ad       	ldd	r19, Y+61	; 0x3d
     a72:	4e ad       	ldd	r20, Y+62	; 0x3e
     a74:	5f ad       	ldd	r21, Y+63	; 0x3f
     a76:	69 97       	sbiw	r28, 0x19	; 25
     a78:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     a7c:	7b 01       	movw	r14, r22
     a7e:	8c 01       	movw	r16, r24
     a80:	c6 01       	movw	r24, r12
     a82:	b5 01       	movw	r22, r10
     a84:	69 96       	adiw	r28, 0x19	; 25
     a86:	2c ad       	ldd	r18, Y+60	; 0x3c
     a88:	3d ad       	ldd	r19, Y+61	; 0x3d
     a8a:	4e ad       	ldd	r20, Y+62	; 0x3e
     a8c:	5f ad       	ldd	r21, Y+63	; 0x3f
     a8e:	69 97       	sbiw	r28, 0x19	; 25
     a90:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     a94:	c9 01       	movw	r24, r18
     a96:	da 01       	movw	r26, r20
     a98:	5c 01       	movw	r10, r24
     a9a:	6d 01       	movw	r12, r26
     a9c:	c6 01       	movw	r24, r12
     a9e:	b5 01       	movw	r22, r10
     aa0:	6d 96       	adiw	r28, 0x1d	; 29
     aa2:	2c ad       	ldd	r18, Y+60	; 0x3c
     aa4:	3d ad       	ldd	r19, Y+61	; 0x3d
     aa6:	4e ad       	ldd	r20, Y+62	; 0x3e
     aa8:	5f ad       	ldd	r21, Y+63	; 0x3f
     aaa:	6d 97       	sbiw	r28, 0x1d	; 29
     aac:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     ab0:	9b 01       	movw	r18, r22
     ab2:	ac 01       	movw	r20, r24
     ab4:	87 01       	movw	r16, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	ee 24       	eor	r14, r14
     aba:	21 96       	adiw	r28, 0x01	; 1
     abc:	8c ad       	ldd	r24, Y+60	; 0x3c
     abe:	9d ad       	ldd	r25, Y+61	; 0x3d
     ac0:	ae ad       	ldd	r26, Y+62	; 0x3e
     ac2:	bf ad       	ldd	r27, Y+63	; 0x3f
     ac4:	21 97       	sbiw	r28, 0x01	; 1
     ac6:	a0 70       	andi	r26, 0x00	; 0
     ac8:	b0 70       	andi	r27, 0x00	; 0
     aca:	e8 2a       	or	r14, r24
     acc:	f9 2a       	or	r15, r25
     ace:	0a 2b       	or	r16, r26
     ad0:	1b 2b       	or	r17, r27
     ad2:	e2 16       	cp	r14, r18
     ad4:	f3 06       	cpc	r15, r19
     ad6:	04 07       	cpc	r16, r20
     ad8:	15 07       	cpc	r17, r21
     ada:	c0 f4       	brcc	.+48     	; 0xb0c <__stack+0x2ad>
     adc:	08 94       	sec
     ade:	a1 08       	sbc	r10, r1
     ae0:	b1 08       	sbc	r11, r1
     ae2:	c1 08       	sbc	r12, r1
     ae4:	d1 08       	sbc	r13, r1
     ae6:	e2 0c       	add	r14, r2
     ae8:	f3 1c       	adc	r15, r3
     aea:	04 1d       	adc	r16, r4
     aec:	15 1d       	adc	r17, r5
     aee:	e2 14       	cp	r14, r2
     af0:	f3 04       	cpc	r15, r3
     af2:	04 05       	cpc	r16, r4
     af4:	15 05       	cpc	r17, r5
     af6:	50 f0       	brcs	.+20     	; 0xb0c <__stack+0x2ad>
     af8:	e2 16       	cp	r14, r18
     afa:	f3 06       	cpc	r15, r19
     afc:	04 07       	cpc	r16, r20
     afe:	15 07       	cpc	r17, r21
     b00:	28 f4       	brcc	.+10     	; 0xb0c <__stack+0x2ad>
     b02:	08 94       	sec
     b04:	a1 08       	sbc	r10, r1
     b06:	b1 08       	sbc	r11, r1
     b08:	c1 08       	sbc	r12, r1
     b0a:	d1 08       	sbc	r13, r1
     b0c:	a1 96       	adiw	r28, 0x21	; 33
     b0e:	ec ac       	ldd	r14, Y+60	; 0x3c
     b10:	fd ac       	ldd	r15, Y+61	; 0x3d
     b12:	0e ad       	ldd	r16, Y+62	; 0x3e
     b14:	1f ad       	ldd	r17, Y+63	; 0x3f
     b16:	a1 97       	sbiw	r28, 0x21	; 33
     b18:	d7 01       	movw	r26, r14
     b1a:	99 27       	eor	r25, r25
     b1c:	88 27       	eor	r24, r24
     b1e:	96 01       	movw	r18, r12
     b20:	85 01       	movw	r16, r10
     b22:	08 2b       	or	r16, r24
     b24:	19 2b       	or	r17, r25
     b26:	2a 2b       	or	r18, r26
     b28:	3b 2b       	or	r19, r27
     b2a:	25 96       	adiw	r28, 0x05	; 5
     b2c:	0c af       	std	Y+60, r16	; 0x3c
     b2e:	1d af       	std	Y+61, r17	; 0x3d
     b30:	2e af       	std	Y+62, r18	; 0x3e
     b32:	3f af       	std	Y+63, r19	; 0x3f
     b34:	25 97       	sbiw	r28, 0x05	; 5
     b36:	72 c2       	rjmp	.+1252   	; 0x101c <__stack+0x7bd>
     b38:	6e 14       	cp	r6, r14
     b3a:	7f 04       	cpc	r7, r15
     b3c:	80 06       	cpc	r8, r16
     b3e:	91 06       	cpc	r9, r17
     b40:	08 f4       	brcc	.+2      	; 0xb44 <__stack+0x2e5>
     b42:	5f c2       	rjmp	.+1214   	; 0x1002 <__stack+0x7a3>
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	e2 16       	cp	r14, r18
     b48:	20 e0       	ldi	r18, 0x00	; 0
     b4a:	f2 06       	cpc	r15, r18
     b4c:	21 e0       	ldi	r18, 0x01	; 1
     b4e:	02 07       	cpc	r16, r18
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	12 07       	cpc	r17, r18
     b54:	88 f4       	brcc	.+34     	; 0xb78 <__stack+0x319>
     b56:	3f ef       	ldi	r19, 0xFF	; 255
     b58:	e3 16       	cp	r14, r19
     b5a:	f1 04       	cpc	r15, r1
     b5c:	01 05       	cpc	r16, r1
     b5e:	11 05       	cpc	r17, r1
     b60:	31 f0       	breq	.+12     	; 0xb6e <__stack+0x30f>
     b62:	28 f0       	brcs	.+10     	; 0xb6e <__stack+0x30f>
     b64:	48 e0       	ldi	r20, 0x08	; 8
     b66:	50 e0       	ldi	r21, 0x00	; 0
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	70 e0       	ldi	r23, 0x00	; 0
     b6c:	17 c0       	rjmp	.+46     	; 0xb9c <__stack+0x33d>
     b6e:	40 e0       	ldi	r20, 0x00	; 0
     b70:	50 e0       	ldi	r21, 0x00	; 0
     b72:	60 e0       	ldi	r22, 0x00	; 0
     b74:	70 e0       	ldi	r23, 0x00	; 0
     b76:	12 c0       	rjmp	.+36     	; 0xb9c <__stack+0x33d>
     b78:	40 e0       	ldi	r20, 0x00	; 0
     b7a:	e4 16       	cp	r14, r20
     b7c:	40 e0       	ldi	r20, 0x00	; 0
     b7e:	f4 06       	cpc	r15, r20
     b80:	40 e0       	ldi	r20, 0x00	; 0
     b82:	04 07       	cpc	r16, r20
     b84:	41 e0       	ldi	r20, 0x01	; 1
     b86:	14 07       	cpc	r17, r20
     b88:	28 f0       	brcs	.+10     	; 0xb94 <__stack+0x335>
     b8a:	48 e1       	ldi	r20, 0x18	; 24
     b8c:	50 e0       	ldi	r21, 0x00	; 0
     b8e:	60 e0       	ldi	r22, 0x00	; 0
     b90:	70 e0       	ldi	r23, 0x00	; 0
     b92:	04 c0       	rjmp	.+8      	; 0xb9c <__stack+0x33d>
     b94:	40 e1       	ldi	r20, 0x10	; 16
     b96:	50 e0       	ldi	r21, 0x00	; 0
     b98:	60 e0       	ldi	r22, 0x00	; 0
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	d8 01       	movw	r26, r16
     b9e:	c7 01       	movw	r24, r14
     ba0:	04 2e       	mov	r0, r20
     ba2:	04 c0       	rjmp	.+8      	; 0xbac <__stack+0x34d>
     ba4:	b6 95       	lsr	r27
     ba6:	a7 95       	ror	r26
     ba8:	97 95       	ror	r25
     baa:	87 95       	ror	r24
     bac:	0a 94       	dec	r0
     bae:	d2 f7       	brpl	.-12     	; 0xba4 <__stack+0x345>
     bb0:	88 59       	subi	r24, 0x98	; 152
     bb2:	9f 4f       	sbci	r25, 0xFF	; 255
     bb4:	dc 01       	movw	r26, r24
     bb6:	2c 91       	ld	r18, X
     bb8:	30 e2       	ldi	r19, 0x20	; 32
     bba:	a3 2e       	mov	r10, r19
     bbc:	b1 2c       	mov	r11, r1
     bbe:	c1 2c       	mov	r12, r1
     bc0:	d1 2c       	mov	r13, r1
     bc2:	d6 01       	movw	r26, r12
     bc4:	c5 01       	movw	r24, r10
     bc6:	84 1b       	sub	r24, r20
     bc8:	95 0b       	sbc	r25, r21
     bca:	a6 0b       	sbc	r26, r22
     bcc:	b7 0b       	sbc	r27, r23
     bce:	82 1b       	sub	r24, r18
     bd0:	91 09       	sbc	r25, r1
     bd2:	a1 09       	sbc	r26, r1
     bd4:	b1 09       	sbc	r27, r1
     bd6:	00 97       	sbiw	r24, 0x00	; 0
     bd8:	a1 05       	cpc	r26, r1
     bda:	b1 05       	cpc	r27, r1
     bdc:	99 f4       	brne	.+38     	; 0xc04 <__stack+0x3a5>
     bde:	e6 14       	cp	r14, r6
     be0:	f7 04       	cpc	r15, r7
     be2:	08 05       	cpc	r16, r8
     be4:	19 05       	cpc	r17, r9
     be6:	08 f4       	brcc	.+2      	; 0xbea <__stack+0x38b>
     be8:	fe c1       	rjmp	.+1020   	; 0xfe6 <__stack+0x787>
     bea:	21 96       	adiw	r28, 0x01	; 1
     bec:	6c ac       	ldd	r6, Y+60	; 0x3c
     bee:	7d ac       	ldd	r7, Y+61	; 0x3d
     bf0:	8e ac       	ldd	r8, Y+62	; 0x3e
     bf2:	9f ac       	ldd	r9, Y+63	; 0x3f
     bf4:	21 97       	sbiw	r28, 0x01	; 1
     bf6:	62 14       	cp	r6, r2
     bf8:	73 04       	cpc	r7, r3
     bfa:	84 04       	cpc	r8, r4
     bfc:	95 04       	cpc	r9, r5
     bfe:	08 f0       	brcs	.+2      	; 0xc02 <__stack+0x3a3>
     c00:	f2 c1       	rjmp	.+996    	; 0xfe6 <__stack+0x787>
     c02:	ff c1       	rjmp	.+1022   	; 0x1002 <__stack+0x7a3>
     c04:	e2 96       	adiw	r28, 0x32	; 50
     c06:	8f af       	std	Y+63, r24	; 0x3f
     c08:	e2 97       	sbiw	r28, 0x32	; 50
     c0a:	08 2e       	mov	r0, r24
     c0c:	04 c0       	rjmp	.+8      	; 0xc16 <__stack+0x3b7>
     c0e:	ee 0c       	add	r14, r14
     c10:	ff 1c       	adc	r15, r15
     c12:	00 1f       	adc	r16, r16
     c14:	11 1f       	adc	r17, r17
     c16:	0a 94       	dec	r0
     c18:	d2 f7       	brpl	.-12     	; 0xc0e <__stack+0x3af>
     c1a:	6a 2d       	mov	r22, r10
     c1c:	68 1b       	sub	r22, r24
     c1e:	d2 01       	movw	r26, r4
     c20:	c1 01       	movw	r24, r2
     c22:	06 2e       	mov	r0, r22
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__stack+0x3cf>
     c26:	b6 95       	lsr	r27
     c28:	a7 95       	ror	r26
     c2a:	97 95       	ror	r25
     c2c:	87 95       	ror	r24
     c2e:	0a 94       	dec	r0
     c30:	d2 f7       	brpl	.-12     	; 0xc26 <__stack+0x3c7>
     c32:	5c 01       	movw	r10, r24
     c34:	6d 01       	movw	r12, r26
     c36:	ae 28       	or	r10, r14
     c38:	bf 28       	or	r11, r15
     c3a:	c0 2a       	or	r12, r16
     c3c:	d1 2a       	or	r13, r17
     c3e:	ad aa       	std	Y+53, r10	; 0x35
     c40:	be aa       	std	Y+54, r11	; 0x36
     c42:	cf aa       	std	Y+55, r12	; 0x37
     c44:	d8 ae       	std	Y+56, r13	; 0x38
     c46:	72 01       	movw	r14, r4
     c48:	61 01       	movw	r12, r2
     c4a:	e2 96       	adiw	r28, 0x32	; 50
     c4c:	0f ac       	ldd	r0, Y+63	; 0x3f
     c4e:	e2 97       	sbiw	r28, 0x32	; 50
     c50:	04 c0       	rjmp	.+8      	; 0xc5a <__stack+0x3fb>
     c52:	cc 0c       	add	r12, r12
     c54:	dd 1c       	adc	r13, r13
     c56:	ee 1c       	adc	r14, r14
     c58:	ff 1c       	adc	r15, r15
     c5a:	0a 94       	dec	r0
     c5c:	d2 f7       	brpl	.-12     	; 0xc52 <__stack+0x3f3>
     c5e:	c9 aa       	std	Y+49, r12	; 0x31
     c60:	da aa       	std	Y+50, r13	; 0x32
     c62:	eb aa       	std	Y+51, r14	; 0x33
     c64:	fc aa       	std	Y+52, r15	; 0x34
     c66:	64 01       	movw	r12, r8
     c68:	53 01       	movw	r10, r6
     c6a:	06 2e       	mov	r0, r22
     c6c:	04 c0       	rjmp	.+8      	; 0xc76 <__stack+0x417>
     c6e:	d6 94       	lsr	r13
     c70:	c7 94       	ror	r12
     c72:	b7 94       	ror	r11
     c74:	a7 94       	ror	r10
     c76:	0a 94       	dec	r0
     c78:	d2 f7       	brpl	.-12     	; 0xc6e <__stack+0x40f>
     c7a:	d4 01       	movw	r26, r8
     c7c:	c3 01       	movw	r24, r6
     c7e:	e2 96       	adiw	r28, 0x32	; 50
     c80:	0f ac       	ldd	r0, Y+63	; 0x3f
     c82:	e2 97       	sbiw	r28, 0x32	; 50
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <__stack+0x42f>
     c86:	88 0f       	add	r24, r24
     c88:	99 1f       	adc	r25, r25
     c8a:	aa 1f       	adc	r26, r26
     c8c:	bb 1f       	adc	r27, r27
     c8e:	0a 94       	dec	r0
     c90:	d2 f7       	brpl	.-12     	; 0xc86 <__stack+0x427>
     c92:	21 96       	adiw	r28, 0x01	; 1
     c94:	ec ac       	ldd	r14, Y+60	; 0x3c
     c96:	fd ac       	ldd	r15, Y+61	; 0x3d
     c98:	0e ad       	ldd	r16, Y+62	; 0x3e
     c9a:	1f ad       	ldd	r17, Y+63	; 0x3f
     c9c:	21 97       	sbiw	r28, 0x01	; 1
     c9e:	04 c0       	rjmp	.+8      	; 0xca8 <__stack+0x449>
     ca0:	16 95       	lsr	r17
     ca2:	07 95       	ror	r16
     ca4:	f7 94       	ror	r15
     ca6:	e7 94       	ror	r14
     ca8:	6a 95       	dec	r22
     caa:	d2 f7       	brpl	.-12     	; 0xca0 <__stack+0x441>
     cac:	37 01       	movw	r6, r14
     cae:	48 01       	movw	r8, r16
     cb0:	68 2a       	or	r6, r24
     cb2:	79 2a       	or	r7, r25
     cb4:	8a 2a       	or	r8, r26
     cb6:	9b 2a       	or	r9, r27
     cb8:	6d a6       	std	Y+45, r6	; 0x2d
     cba:	7e a6       	std	Y+46, r7	; 0x2e
     cbc:	8f a6       	std	Y+47, r8	; 0x2f
     cbe:	98 aa       	std	Y+48, r9	; 0x30
     cc0:	ed a8       	ldd	r14, Y+53	; 0x35
     cc2:	fe a8       	ldd	r15, Y+54	; 0x36
     cc4:	0f a9       	ldd	r16, Y+55	; 0x37
     cc6:	18 ad       	ldd	r17, Y+56	; 0x38
     cc8:	38 01       	movw	r6, r16
     cca:	88 24       	eor	r8, r8
     ccc:	99 24       	eor	r9, r9
     cce:	98 01       	movw	r18, r16
     cd0:	87 01       	movw	r16, r14
     cd2:	20 70       	andi	r18, 0x00	; 0
     cd4:	30 70       	andi	r19, 0x00	; 0
     cd6:	a5 96       	adiw	r28, 0x25	; 37
     cd8:	0c af       	std	Y+60, r16	; 0x3c
     cda:	1d af       	std	Y+61, r17	; 0x3d
     cdc:	2e af       	std	Y+62, r18	; 0x3e
     cde:	3f af       	std	Y+63, r19	; 0x3f
     ce0:	a5 97       	sbiw	r28, 0x25	; 37
     ce2:	c6 01       	movw	r24, r12
     ce4:	b5 01       	movw	r22, r10
     ce6:	a4 01       	movw	r20, r8
     ce8:	93 01       	movw	r18, r6
     cea:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     cee:	7b 01       	movw	r14, r22
     cf0:	8c 01       	movw	r16, r24
     cf2:	c6 01       	movw	r24, r12
     cf4:	b5 01       	movw	r22, r10
     cf6:	a4 01       	movw	r20, r8
     cf8:	93 01       	movw	r18, r6
     cfa:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     cfe:	c9 01       	movw	r24, r18
     d00:	da 01       	movw	r26, r20
     d02:	1c 01       	movw	r2, r24
     d04:	2d 01       	movw	r4, r26
     d06:	c2 01       	movw	r24, r4
     d08:	b1 01       	movw	r22, r2
     d0a:	a5 96       	adiw	r28, 0x25	; 37
     d0c:	2c ad       	ldd	r18, Y+60	; 0x3c
     d0e:	3d ad       	ldd	r19, Y+61	; 0x3d
     d10:	4e ad       	ldd	r20, Y+62	; 0x3e
     d12:	5f ad       	ldd	r21, Y+63	; 0x3f
     d14:	a5 97       	sbiw	r28, 0x25	; 37
     d16:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     d1a:	9b 01       	movw	r18, r22
     d1c:	ac 01       	movw	r20, r24
     d1e:	87 01       	movw	r16, r14
     d20:	ff 24       	eor	r15, r15
     d22:	ee 24       	eor	r14, r14
     d24:	ad a4       	ldd	r10, Y+45	; 0x2d
     d26:	be a4       	ldd	r11, Y+46	; 0x2e
     d28:	cf a4       	ldd	r12, Y+47	; 0x2f
     d2a:	d8 a8       	ldd	r13, Y+48	; 0x30
     d2c:	c6 01       	movw	r24, r12
     d2e:	aa 27       	eor	r26, r26
     d30:	bb 27       	eor	r27, r27
     d32:	57 01       	movw	r10, r14
     d34:	68 01       	movw	r12, r16
     d36:	a8 2a       	or	r10, r24
     d38:	b9 2a       	or	r11, r25
     d3a:	ca 2a       	or	r12, r26
     d3c:	db 2a       	or	r13, r27
     d3e:	a2 16       	cp	r10, r18
     d40:	b3 06       	cpc	r11, r19
     d42:	c4 06       	cpc	r12, r20
     d44:	d5 06       	cpc	r13, r21
     d46:	00 f5       	brcc	.+64     	; 0xd88 <__stack+0x529>
     d48:	08 94       	sec
     d4a:	21 08       	sbc	r2, r1
     d4c:	31 08       	sbc	r3, r1
     d4e:	41 08       	sbc	r4, r1
     d50:	51 08       	sbc	r5, r1
     d52:	ed a8       	ldd	r14, Y+53	; 0x35
     d54:	fe a8       	ldd	r15, Y+54	; 0x36
     d56:	0f a9       	ldd	r16, Y+55	; 0x37
     d58:	18 ad       	ldd	r17, Y+56	; 0x38
     d5a:	ae 0c       	add	r10, r14
     d5c:	bf 1c       	adc	r11, r15
     d5e:	c0 1e       	adc	r12, r16
     d60:	d1 1e       	adc	r13, r17
     d62:	ae 14       	cp	r10, r14
     d64:	bf 04       	cpc	r11, r15
     d66:	c0 06       	cpc	r12, r16
     d68:	d1 06       	cpc	r13, r17
     d6a:	70 f0       	brcs	.+28     	; 0xd88 <__stack+0x529>
     d6c:	a2 16       	cp	r10, r18
     d6e:	b3 06       	cpc	r11, r19
     d70:	c4 06       	cpc	r12, r20
     d72:	d5 06       	cpc	r13, r21
     d74:	48 f4       	brcc	.+18     	; 0xd88 <__stack+0x529>
     d76:	08 94       	sec
     d78:	21 08       	sbc	r2, r1
     d7a:	31 08       	sbc	r3, r1
     d7c:	41 08       	sbc	r4, r1
     d7e:	51 08       	sbc	r5, r1
     d80:	ae 0c       	add	r10, r14
     d82:	bf 1c       	adc	r11, r15
     d84:	c0 1e       	adc	r12, r16
     d86:	d1 1e       	adc	r13, r17
     d88:	a2 1a       	sub	r10, r18
     d8a:	b3 0a       	sbc	r11, r19
     d8c:	c4 0a       	sbc	r12, r20
     d8e:	d5 0a       	sbc	r13, r21
     d90:	c6 01       	movw	r24, r12
     d92:	b5 01       	movw	r22, r10
     d94:	a4 01       	movw	r20, r8
     d96:	93 01       	movw	r18, r6
     d98:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     d9c:	7b 01       	movw	r14, r22
     d9e:	8c 01       	movw	r16, r24
     da0:	c6 01       	movw	r24, r12
     da2:	b5 01       	movw	r22, r10
     da4:	a4 01       	movw	r20, r8
     da6:	93 01       	movw	r18, r6
     da8:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
     dac:	c9 01       	movw	r24, r18
     dae:	da 01       	movw	r26, r20
     db0:	3c 01       	movw	r6, r24
     db2:	4d 01       	movw	r8, r26
     db4:	c4 01       	movw	r24, r8
     db6:	b3 01       	movw	r22, r6
     db8:	a5 96       	adiw	r28, 0x25	; 37
     dba:	2c ad       	ldd	r18, Y+60	; 0x3c
     dbc:	3d ad       	ldd	r19, Y+61	; 0x3d
     dbe:	4e ad       	ldd	r20, Y+62	; 0x3e
     dc0:	5f ad       	ldd	r21, Y+63	; 0x3f
     dc2:	a5 97       	sbiw	r28, 0x25	; 37
     dc4:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     dc8:	9b 01       	movw	r18, r22
     dca:	ac 01       	movw	r20, r24
     dcc:	87 01       	movw	r16, r14
     dce:	ff 24       	eor	r15, r15
     dd0:	ee 24       	eor	r14, r14
     dd2:	8d a5       	ldd	r24, Y+45	; 0x2d
     dd4:	9e a5       	ldd	r25, Y+46	; 0x2e
     dd6:	af a5       	ldd	r26, Y+47	; 0x2f
     dd8:	b8 a9       	ldd	r27, Y+48	; 0x30
     dda:	a0 70       	andi	r26, 0x00	; 0
     ddc:	b0 70       	andi	r27, 0x00	; 0
     dde:	57 01       	movw	r10, r14
     de0:	68 01       	movw	r12, r16
     de2:	a8 2a       	or	r10, r24
     de4:	b9 2a       	or	r11, r25
     de6:	ca 2a       	or	r12, r26
     de8:	db 2a       	or	r13, r27
     dea:	a2 16       	cp	r10, r18
     dec:	b3 06       	cpc	r11, r19
     dee:	c4 06       	cpc	r12, r20
     df0:	d5 06       	cpc	r13, r21
     df2:	00 f5       	brcc	.+64     	; 0xe34 <__stack+0x5d5>
     df4:	08 94       	sec
     df6:	61 08       	sbc	r6, r1
     df8:	71 08       	sbc	r7, r1
     dfa:	81 08       	sbc	r8, r1
     dfc:	91 08       	sbc	r9, r1
     dfe:	6d a9       	ldd	r22, Y+53	; 0x35
     e00:	7e a9       	ldd	r23, Y+54	; 0x36
     e02:	8f a9       	ldd	r24, Y+55	; 0x37
     e04:	98 ad       	ldd	r25, Y+56	; 0x38
     e06:	a6 0e       	add	r10, r22
     e08:	b7 1e       	adc	r11, r23
     e0a:	c8 1e       	adc	r12, r24
     e0c:	d9 1e       	adc	r13, r25
     e0e:	a6 16       	cp	r10, r22
     e10:	b7 06       	cpc	r11, r23
     e12:	c8 06       	cpc	r12, r24
     e14:	d9 06       	cpc	r13, r25
     e16:	70 f0       	brcs	.+28     	; 0xe34 <__stack+0x5d5>
     e18:	a2 16       	cp	r10, r18
     e1a:	b3 06       	cpc	r11, r19
     e1c:	c4 06       	cpc	r12, r20
     e1e:	d5 06       	cpc	r13, r21
     e20:	48 f4       	brcc	.+18     	; 0xe34 <__stack+0x5d5>
     e22:	08 94       	sec
     e24:	61 08       	sbc	r6, r1
     e26:	71 08       	sbc	r7, r1
     e28:	81 08       	sbc	r8, r1
     e2a:	91 08       	sbc	r9, r1
     e2c:	a6 0e       	add	r10, r22
     e2e:	b7 1e       	adc	r11, r23
     e30:	c8 1e       	adc	r12, r24
     e32:	d9 1e       	adc	r13, r25
     e34:	d6 01       	movw	r26, r12
     e36:	c5 01       	movw	r24, r10
     e38:	82 1b       	sub	r24, r18
     e3a:	93 0b       	sbc	r25, r19
     e3c:	a4 0b       	sbc	r26, r20
     e3e:	b5 0b       	sbc	r27, r21
     e40:	89 a7       	std	Y+41, r24	; 0x29
     e42:	9a a7       	std	Y+42, r25	; 0x2a
     e44:	ab a7       	std	Y+43, r26	; 0x2b
     e46:	bc a7       	std	Y+44, r27	; 0x2c
     e48:	d1 01       	movw	r26, r2
     e4a:	99 27       	eor	r25, r25
     e4c:	88 27       	eor	r24, r24
     e4e:	64 01       	movw	r12, r8
     e50:	53 01       	movw	r10, r6
     e52:	a8 2a       	or	r10, r24
     e54:	b9 2a       	or	r11, r25
     e56:	ca 2a       	or	r12, r26
     e58:	db 2a       	or	r13, r27
     e5a:	25 96       	adiw	r28, 0x05	; 5
     e5c:	ac ae       	std	Y+60, r10	; 0x3c
     e5e:	bd ae       	std	Y+61, r11	; 0x3d
     e60:	ce ae       	std	Y+62, r12	; 0x3e
     e62:	df ae       	std	Y+63, r13	; 0x3f
     e64:	25 97       	sbiw	r28, 0x05	; 5
     e66:	86 01       	movw	r16, r12
     e68:	75 01       	movw	r14, r10
     e6a:	2f ef       	ldi	r18, 0xFF	; 255
     e6c:	3f ef       	ldi	r19, 0xFF	; 255
     e6e:	40 e0       	ldi	r20, 0x00	; 0
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	e2 22       	and	r14, r18
     e74:	f3 22       	and	r15, r19
     e76:	04 23       	and	r16, r20
     e78:	15 23       	and	r17, r21
     e7a:	a6 01       	movw	r20, r12
     e7c:	66 27       	eor	r22, r22
     e7e:	77 27       	eor	r23, r23
     e80:	ad 96       	adiw	r28, 0x2d	; 45
     e82:	4c af       	std	Y+60, r20	; 0x3c
     e84:	5d af       	std	Y+61, r21	; 0x3d
     e86:	6e af       	std	Y+62, r22	; 0x3e
     e88:	7f af       	std	Y+63, r23	; 0x3f
     e8a:	ad 97       	sbiw	r28, 0x2d	; 45
     e8c:	a9 a8       	ldd	r10, Y+49	; 0x31
     e8e:	ba a8       	ldd	r11, Y+50	; 0x32
     e90:	cb a8       	ldd	r12, Y+51	; 0x33
     e92:	dc a8       	ldd	r13, Y+52	; 0x34
     e94:	6f ef       	ldi	r22, 0xFF	; 255
     e96:	7f ef       	ldi	r23, 0xFF	; 255
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	a6 22       	and	r10, r22
     e9e:	b7 22       	and	r11, r23
     ea0:	c8 22       	and	r12, r24
     ea2:	d9 22       	and	r13, r25
     ea4:	89 a9       	ldd	r24, Y+49	; 0x31
     ea6:	9a a9       	ldd	r25, Y+50	; 0x32
     ea8:	ab a9       	ldd	r26, Y+51	; 0x33
     eaa:	bc a9       	ldd	r27, Y+52	; 0x34
     eac:	1d 01       	movw	r2, r26
     eae:	44 24       	eor	r4, r4
     eb0:	55 24       	eor	r5, r5
     eb2:	c8 01       	movw	r24, r16
     eb4:	b7 01       	movw	r22, r14
     eb6:	a6 01       	movw	r20, r12
     eb8:	95 01       	movw	r18, r10
     eba:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     ebe:	a9 96       	adiw	r28, 0x29	; 41
     ec0:	6c af       	std	Y+60, r22	; 0x3c
     ec2:	7d af       	std	Y+61, r23	; 0x3d
     ec4:	8e af       	std	Y+62, r24	; 0x3e
     ec6:	9f af       	std	Y+63, r25	; 0x3f
     ec8:	a9 97       	sbiw	r28, 0x29	; 41
     eca:	c8 01       	movw	r24, r16
     ecc:	b7 01       	movw	r22, r14
     ece:	a2 01       	movw	r20, r4
     ed0:	91 01       	movw	r18, r2
     ed2:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     ed6:	3b 01       	movw	r6, r22
     ed8:	4c 01       	movw	r8, r24
     eda:	ad 96       	adiw	r28, 0x2d	; 45
     edc:	6c ad       	ldd	r22, Y+60	; 0x3c
     ede:	7d ad       	ldd	r23, Y+61	; 0x3d
     ee0:	8e ad       	ldd	r24, Y+62	; 0x3e
     ee2:	9f ad       	ldd	r25, Y+63	; 0x3f
     ee4:	ad 97       	sbiw	r28, 0x2d	; 45
     ee6:	a6 01       	movw	r20, r12
     ee8:	95 01       	movw	r18, r10
     eea:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     eee:	7b 01       	movw	r14, r22
     ef0:	8c 01       	movw	r16, r24
     ef2:	ad 96       	adiw	r28, 0x2d	; 45
     ef4:	6c ad       	ldd	r22, Y+60	; 0x3c
     ef6:	7d ad       	ldd	r23, Y+61	; 0x3d
     ef8:	8e ad       	ldd	r24, Y+62	; 0x3e
     efa:	9f ad       	ldd	r25, Y+63	; 0x3f
     efc:	ad 97       	sbiw	r28, 0x2d	; 45
     efe:	a2 01       	movw	r20, r4
     f00:	91 01       	movw	r18, r2
     f02:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
     f06:	5b 01       	movw	r10, r22
     f08:	6c 01       	movw	r12, r24
     f0a:	a8 01       	movw	r20, r16
     f0c:	97 01       	movw	r18, r14
     f0e:	26 0d       	add	r18, r6
     f10:	37 1d       	adc	r19, r7
     f12:	48 1d       	adc	r20, r8
     f14:	59 1d       	adc	r21, r9
     f16:	a9 96       	adiw	r28, 0x29	; 41
     f18:	6c ac       	ldd	r6, Y+60	; 0x3c
     f1a:	7d ac       	ldd	r7, Y+61	; 0x3d
     f1c:	8e ac       	ldd	r8, Y+62	; 0x3e
     f1e:	9f ac       	ldd	r9, Y+63	; 0x3f
     f20:	a9 97       	sbiw	r28, 0x29	; 41
     f22:	c4 01       	movw	r24, r8
     f24:	aa 27       	eor	r26, r26
     f26:	bb 27       	eor	r27, r27
     f28:	28 0f       	add	r18, r24
     f2a:	39 1f       	adc	r19, r25
     f2c:	4a 1f       	adc	r20, r26
     f2e:	5b 1f       	adc	r21, r27
     f30:	2e 15       	cp	r18, r14
     f32:	3f 05       	cpc	r19, r15
     f34:	40 07       	cpc	r20, r16
     f36:	51 07       	cpc	r21, r17
     f38:	48 f4       	brcc	.+18     	; 0xf4c <__stack+0x6ed>
     f3a:	e1 2c       	mov	r14, r1
     f3c:	f1 2c       	mov	r15, r1
     f3e:	61 e0       	ldi	r22, 0x01	; 1
     f40:	06 2f       	mov	r16, r22
     f42:	11 2d       	mov	r17, r1
     f44:	ae 0c       	add	r10, r14
     f46:	bf 1c       	adc	r11, r15
     f48:	c0 1e       	adc	r12, r16
     f4a:	d1 1e       	adc	r13, r17
     f4c:	ca 01       	movw	r24, r20
     f4e:	aa 27       	eor	r26, r26
     f50:	bb 27       	eor	r27, r27
     f52:	bc 01       	movw	r22, r24
     f54:	cd 01       	movw	r24, r26
     f56:	6a 0d       	add	r22, r10
     f58:	7b 1d       	adc	r23, r11
     f5a:	8c 1d       	adc	r24, r12
     f5c:	9d 1d       	adc	r25, r13
     f5e:	69 a4       	ldd	r6, Y+41	; 0x29
     f60:	7a a4       	ldd	r7, Y+42	; 0x2a
     f62:	8b a4       	ldd	r8, Y+43	; 0x2b
     f64:	9c a4       	ldd	r9, Y+44	; 0x2c
     f66:	66 16       	cp	r6, r22
     f68:	77 06       	cpc	r7, r23
     f6a:	88 06       	cpc	r8, r24
     f6c:	99 06       	cpc	r9, r25
     f6e:	50 f1       	brcs	.+84     	; 0xfc4 <__stack+0x765>
     f70:	66 15       	cp	r22, r6
     f72:	77 05       	cpc	r23, r7
     f74:	88 05       	cpc	r24, r8
     f76:	99 05       	cpc	r25, r9
     f78:	09 f0       	breq	.+2      	; 0xf7c <__stack+0x71d>
     f7a:	4d c0       	rjmp	.+154    	; 0x1016 <__stack+0x7b7>
     f7c:	d9 01       	movw	r26, r18
     f7e:	99 27       	eor	r25, r25
     f80:	88 27       	eor	r24, r24
     f82:	a9 96       	adiw	r28, 0x29	; 41
     f84:	2c ad       	ldd	r18, Y+60	; 0x3c
     f86:	3d ad       	ldd	r19, Y+61	; 0x3d
     f88:	4e ad       	ldd	r20, Y+62	; 0x3e
     f8a:	5f ad       	ldd	r21, Y+63	; 0x3f
     f8c:	a9 97       	sbiw	r28, 0x29	; 41
     f8e:	40 70       	andi	r20, 0x00	; 0
     f90:	50 70       	andi	r21, 0x00	; 0
     f92:	82 0f       	add	r24, r18
     f94:	93 1f       	adc	r25, r19
     f96:	a4 1f       	adc	r26, r20
     f98:	b5 1f       	adc	r27, r21
     f9a:	21 96       	adiw	r28, 0x01	; 1
     f9c:	2c ad       	ldd	r18, Y+60	; 0x3c
     f9e:	3d ad       	ldd	r19, Y+61	; 0x3d
     fa0:	4e ad       	ldd	r20, Y+62	; 0x3e
     fa2:	5f ad       	ldd	r21, Y+63	; 0x3f
     fa4:	21 97       	sbiw	r28, 0x01	; 1
     fa6:	e2 96       	adiw	r28, 0x32	; 50
     fa8:	0f ac       	ldd	r0, Y+63	; 0x3f
     faa:	e2 97       	sbiw	r28, 0x32	; 50
     fac:	04 c0       	rjmp	.+8      	; 0xfb6 <__stack+0x757>
     fae:	22 0f       	add	r18, r18
     fb0:	33 1f       	adc	r19, r19
     fb2:	44 1f       	adc	r20, r20
     fb4:	55 1f       	adc	r21, r21
     fb6:	0a 94       	dec	r0
     fb8:	d2 f7       	brpl	.-12     	; 0xfae <__stack+0x74f>
     fba:	28 17       	cp	r18, r24
     fbc:	39 07       	cpc	r19, r25
     fbe:	4a 07       	cpc	r20, r26
     fc0:	5b 07       	cpc	r21, r27
     fc2:	48 f5       	brcc	.+82     	; 0x1016 <__stack+0x7b7>
     fc4:	25 96       	adiw	r28, 0x05	; 5
     fc6:	0c ad       	ldd	r16, Y+60	; 0x3c
     fc8:	1d ad       	ldd	r17, Y+61	; 0x3d
     fca:	2e ad       	ldd	r18, Y+62	; 0x3e
     fcc:	3f ad       	ldd	r19, Y+63	; 0x3f
     fce:	25 97       	sbiw	r28, 0x05	; 5
     fd0:	01 50       	subi	r16, 0x01	; 1
     fd2:	10 40       	sbci	r17, 0x00	; 0
     fd4:	20 40       	sbci	r18, 0x00	; 0
     fd6:	30 40       	sbci	r19, 0x00	; 0
     fd8:	25 96       	adiw	r28, 0x05	; 5
     fda:	0c af       	std	Y+60, r16	; 0x3c
     fdc:	1d af       	std	Y+61, r17	; 0x3d
     fde:	2e af       	std	Y+62, r18	; 0x3e
     fe0:	3f af       	std	Y+63, r19	; 0x3f
     fe2:	25 97       	sbiw	r28, 0x05	; 5
     fe4:	18 c0       	rjmp	.+48     	; 0x1016 <__stack+0x7b7>
     fe6:	66 24       	eor	r6, r6
     fe8:	77 24       	eor	r7, r7
     fea:	43 01       	movw	r8, r6
     fec:	21 e0       	ldi	r18, 0x01	; 1
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	40 e0       	ldi	r20, 0x00	; 0
     ff2:	50 e0       	ldi	r21, 0x00	; 0
     ff4:	25 96       	adiw	r28, 0x05	; 5
     ff6:	2c af       	std	Y+60, r18	; 0x3c
     ff8:	3d af       	std	Y+61, r19	; 0x3d
     ffa:	4e af       	std	Y+62, r20	; 0x3e
     ffc:	5f af       	std	Y+63, r21	; 0x3f
     ffe:	25 97       	sbiw	r28, 0x05	; 5
    1000:	0d c0       	rjmp	.+26     	; 0x101c <__stack+0x7bd>
    1002:	66 24       	eor	r6, r6
    1004:	77 24       	eor	r7, r7
    1006:	43 01       	movw	r8, r6
    1008:	25 96       	adiw	r28, 0x05	; 5
    100a:	1c ae       	std	Y+60, r1	; 0x3c
    100c:	1d ae       	std	Y+61, r1	; 0x3d
    100e:	1e ae       	std	Y+62, r1	; 0x3e
    1010:	1f ae       	std	Y+63, r1	; 0x3f
    1012:	25 97       	sbiw	r28, 0x05	; 5
    1014:	03 c0       	rjmp	.+6      	; 0x101c <__stack+0x7bd>
    1016:	66 24       	eor	r6, r6
    1018:	77 24       	eor	r7, r7
    101a:	43 01       	movw	r8, r6
    101c:	fe 01       	movw	r30, r28
    101e:	b1 96       	adiw	r30, 0x21	; 33
    1020:	88 e0       	ldi	r24, 0x08	; 8
    1022:	df 01       	movw	r26, r30
    1024:	1d 92       	st	X+, r1
    1026:	8a 95       	dec	r24
    1028:	e9 f7       	brne	.-6      	; 0x1024 <__stack+0x7c5>
    102a:	25 96       	adiw	r28, 0x05	; 5
    102c:	ac ac       	ldd	r10, Y+60	; 0x3c
    102e:	bd ac       	ldd	r11, Y+61	; 0x3d
    1030:	ce ac       	ldd	r12, Y+62	; 0x3e
    1032:	df ac       	ldd	r13, Y+63	; 0x3f
    1034:	25 97       	sbiw	r28, 0x05	; 5
    1036:	a9 a2       	std	Y+33, r10	; 0x21
    1038:	ba a2       	std	Y+34, r11	; 0x22
    103a:	cb a2       	std	Y+35, r12	; 0x23
    103c:	dc a2       	std	Y+36, r13	; 0x24
    103e:	6d a2       	std	Y+37, r6	; 0x25
    1040:	7e a2       	std	Y+38, r7	; 0x26
    1042:	8f a2       	std	Y+39, r8	; 0x27
    1044:	98 a6       	std	Y+40, r9	; 0x28
    1046:	22 96       	adiw	r28, 0x02	; 2
    1048:	2f ad       	ldd	r18, Y+63	; 0x3f
    104a:	22 97       	sbiw	r28, 0x02	; 2
    104c:	3a a1       	ldd	r19, Y+34	; 0x22
    104e:	4b a1       	ldd	r20, Y+35	; 0x23
    1050:	5c a1       	ldd	r21, Y+36	; 0x24
    1052:	66 2d       	mov	r22, r6
    1054:	7e a1       	ldd	r23, Y+38	; 0x26
    1056:	df a0       	ldd	r13, Y+39	; 0x27
    1058:	98 a5       	ldd	r25, Y+40	; 0x28
    105a:	e1 96       	adiw	r28, 0x31	; 49
    105c:	ec ac       	ldd	r14, Y+60	; 0x3c
    105e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1060:	0e ad       	ldd	r16, Y+62	; 0x3e
    1062:	1f ad       	ldd	r17, Y+63	; 0x3f
    1064:	e1 97       	sbiw	r28, 0x31	; 49
    1066:	e1 14       	cp	r14, r1
    1068:	f1 04       	cpc	r15, r1
    106a:	01 05       	cpc	r16, r1
    106c:	11 05       	cpc	r17, r1
    106e:	09 f4       	brne	.+2      	; 0x1072 <__stack+0x813>
    1070:	56 c0       	rjmp	.+172    	; 0x111e <__stack+0x8bf>
    1072:	21 95       	neg	r18
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	12 16       	cp	r1, r18
    1078:	08 f0       	brcs	.+2      	; 0x107c <__stack+0x81d>
    107a:	80 e0       	ldi	r24, 0x00	; 0
    107c:	31 95       	neg	r19
    107e:	e1 e0       	ldi	r30, 0x01	; 1
    1080:	13 16       	cp	r1, r19
    1082:	08 f0       	brcs	.+2      	; 0x1086 <__stack+0x827>
    1084:	e0 e0       	ldi	r30, 0x00	; 0
    1086:	93 2e       	mov	r9, r19
    1088:	98 1a       	sub	r9, r24
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	39 15       	cp	r19, r9
    108e:	08 f0       	brcs	.+2      	; 0x1092 <__stack+0x833>
    1090:	80 e0       	ldi	r24, 0x00	; 0
    1092:	e8 2b       	or	r30, r24
    1094:	41 95       	neg	r20
    1096:	f1 e0       	ldi	r31, 0x01	; 1
    1098:	14 16       	cp	r1, r20
    109a:	08 f0       	brcs	.+2      	; 0x109e <__stack+0x83f>
    109c:	f0 e0       	ldi	r31, 0x00	; 0
    109e:	a4 2e       	mov	r10, r20
    10a0:	ae 1a       	sub	r10, r30
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	4a 15       	cp	r20, r10
    10a6:	08 f0       	brcs	.+2      	; 0x10aa <__stack+0x84b>
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	f8 2b       	or	r31, r24
    10ac:	51 95       	neg	r21
    10ae:	e1 e0       	ldi	r30, 0x01	; 1
    10b0:	15 16       	cp	r1, r21
    10b2:	08 f0       	brcs	.+2      	; 0x10b6 <__stack+0x857>
    10b4:	e0 e0       	ldi	r30, 0x00	; 0
    10b6:	b5 2e       	mov	r11, r21
    10b8:	bf 1a       	sub	r11, r31
    10ba:	81 e0       	ldi	r24, 0x01	; 1
    10bc:	5b 15       	cp	r21, r11
    10be:	08 f0       	brcs	.+2      	; 0x10c2 <__stack+0x863>
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	e8 2b       	or	r30, r24
    10c4:	61 95       	neg	r22
    10c6:	f1 e0       	ldi	r31, 0x01	; 1
    10c8:	16 16       	cp	r1, r22
    10ca:	08 f0       	brcs	.+2      	; 0x10ce <__stack+0x86f>
    10cc:	f0 e0       	ldi	r31, 0x00	; 0
    10ce:	a6 2f       	mov	r26, r22
    10d0:	ae 1b       	sub	r26, r30
    10d2:	81 e0       	ldi	r24, 0x01	; 1
    10d4:	6a 17       	cp	r22, r26
    10d6:	08 f0       	brcs	.+2      	; 0x10da <__stack+0x87b>
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	f8 2b       	or	r31, r24
    10dc:	71 95       	neg	r23
    10de:	e1 e0       	ldi	r30, 0x01	; 1
    10e0:	17 16       	cp	r1, r23
    10e2:	08 f0       	brcs	.+2      	; 0x10e6 <__stack+0x887>
    10e4:	e0 e0       	ldi	r30, 0x00	; 0
    10e6:	c7 2e       	mov	r12, r23
    10e8:	cf 1a       	sub	r12, r31
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	7c 15       	cp	r23, r12
    10ee:	08 f0       	brcs	.+2      	; 0x10f2 <__stack+0x893>
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	e8 2b       	or	r30, r24
    10f4:	8d 2d       	mov	r24, r13
    10f6:	81 95       	neg	r24
    10f8:	f1 e0       	ldi	r31, 0x01	; 1
    10fa:	18 16       	cp	r1, r24
    10fc:	08 f0       	brcs	.+2      	; 0x1100 <__stack+0x8a1>
    10fe:	f0 e0       	ldi	r31, 0x00	; 0
    1100:	d8 2e       	mov	r13, r24
    1102:	de 1a       	sub	r13, r30
    1104:	e1 e0       	ldi	r30, 0x01	; 1
    1106:	8d 15       	cp	r24, r13
    1108:	08 f0       	brcs	.+2      	; 0x110c <__stack+0x8ad>
    110a:	e0 e0       	ldi	r30, 0x00	; 0
    110c:	fe 2b       	or	r31, r30
    110e:	89 2f       	mov	r24, r25
    1110:	81 95       	neg	r24
    1112:	39 2d       	mov	r19, r9
    1114:	a5 01       	movw	r20, r10
    1116:	6a 2f       	mov	r22, r26
    1118:	7c 2d       	mov	r23, r12
    111a:	98 2f       	mov	r25, r24
    111c:	9f 1b       	sub	r25, r31
    111e:	8d 2d       	mov	r24, r13
    1120:	ce 58       	subi	r28, 0x8E	; 142
    1122:	df 4f       	sbci	r29, 0xFF	; 255
    1124:	e2 e1       	ldi	r30, 0x12	; 18
    1126:	0c 94 e7 25 	jmp	0x4bce	; 0x4bce <__epilogue_restores__>

0000112a <__moddi3>:
    112a:	a7 e7       	ldi	r26, 0x77	; 119
    112c:	b0 e0       	ldi	r27, 0x00	; 0
    112e:	eb e9       	ldi	r30, 0x9B	; 155
    1130:	f8 e0       	ldi	r31, 0x08	; 8
    1132:	0c 94 cb 25 	jmp	0x4b96	; 0x4b96 <__prologue_saves__>
    1136:	98 2e       	mov	r9, r24
    1138:	89 2e       	mov	r8, r25
    113a:	71 2e       	mov	r7, r17
    113c:	88 e0       	ldi	r24, 0x08	; 8
    113e:	fe 01       	movw	r30, r28
    1140:	31 96       	adiw	r30, 0x01	; 1
    1142:	df 01       	movw	r26, r30
    1144:	68 2e       	mov	r6, r24
    1146:	1d 92       	st	X+, r1
    1148:	6a 94       	dec	r6
    114a:	e9 f7       	brne	.-6      	; 0x1146 <__moddi3+0x1c>
    114c:	29 83       	std	Y+1, r18	; 0x01
    114e:	3a 83       	std	Y+2, r19	; 0x02
    1150:	4b 83       	std	Y+3, r20	; 0x03
    1152:	5c 83       	std	Y+4, r21	; 0x04
    1154:	6d 83       	std	Y+5, r22	; 0x05
    1156:	7e 83       	std	Y+6, r23	; 0x06
    1158:	9f 82       	std	Y+7, r9	; 0x07
    115a:	98 87       	std	Y+8, r25	; 0x08
    115c:	fe 01       	movw	r30, r28
    115e:	39 96       	adiw	r30, 0x09	; 9
    1160:	df 01       	movw	r26, r30
    1162:	1d 92       	st	X+, r1
    1164:	8a 95       	dec	r24
    1166:	e9 f7       	brne	.-6      	; 0x1162 <__moddi3+0x38>
    1168:	a9 86       	std	Y+9, r10	; 0x09
    116a:	ba 86       	std	Y+10, r11	; 0x0a
    116c:	cb 86       	std	Y+11, r12	; 0x0b
    116e:	dc 86       	std	Y+12, r13	; 0x0c
    1170:	ed 86       	std	Y+13, r14	; 0x0d
    1172:	fe 86       	std	Y+14, r15	; 0x0e
    1174:	0f 87       	std	Y+15, r16	; 0x0f
    1176:	18 8b       	std	Y+16, r17	; 0x10
    1178:	8d 81       	ldd	r24, Y+5	; 0x05
    117a:	9e 81       	ldd	r25, Y+6	; 0x06
    117c:	af 81       	ldd	r26, Y+7	; 0x07
    117e:	b8 85       	ldd	r27, Y+8	; 0x08
    1180:	b7 fd       	sbrc	r27, 7
    1182:	07 c0       	rjmp	.+14     	; 0x1192 <__moddi3+0x68>
    1184:	e1 96       	adiw	r28, 0x31	; 49
    1186:	1c ae       	std	Y+60, r1	; 0x3c
    1188:	1d ae       	std	Y+61, r1	; 0x3d
    118a:	1e ae       	std	Y+62, r1	; 0x3e
    118c:	1f ae       	std	Y+63, r1	; 0x3f
    118e:	e1 97       	sbiw	r28, 0x31	; 49
    1190:	64 c0       	rjmp	.+200    	; 0x125a <__moddi3+0x130>
    1192:	21 95       	neg	r18
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	12 16       	cp	r1, r18
    1198:	08 f0       	brcs	.+2      	; 0x119c <__moddi3+0x72>
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	31 95       	neg	r19
    119e:	91 e0       	ldi	r25, 0x01	; 1
    11a0:	13 16       	cp	r1, r19
    11a2:	08 f0       	brcs	.+2      	; 0x11a6 <__moddi3+0x7c>
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	b3 2f       	mov	r27, r19
    11a8:	b8 1b       	sub	r27, r24
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	3b 17       	cp	r19, r27
    11ae:	08 f0       	brcs	.+2      	; 0x11b2 <__moddi3+0x88>
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	98 2b       	or	r25, r24
    11b4:	41 95       	neg	r20
    11b6:	31 e0       	ldi	r19, 0x01	; 1
    11b8:	14 16       	cp	r1, r20
    11ba:	08 f0       	brcs	.+2      	; 0x11be <__moddi3+0x94>
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	a4 2f       	mov	r26, r20
    11c0:	a9 1b       	sub	r26, r25
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	4a 17       	cp	r20, r26
    11c6:	08 f0       	brcs	.+2      	; 0x11ca <__moddi3+0xa0>
    11c8:	80 e0       	ldi	r24, 0x00	; 0
    11ca:	38 2b       	or	r19, r24
    11cc:	51 95       	neg	r21
    11ce:	91 e0       	ldi	r25, 0x01	; 1
    11d0:	15 16       	cp	r1, r21
    11d2:	08 f0       	brcs	.+2      	; 0x11d6 <__moddi3+0xac>
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	f5 2f       	mov	r31, r21
    11d8:	f3 1b       	sub	r31, r19
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	5f 17       	cp	r21, r31
    11de:	08 f0       	brcs	.+2      	; 0x11e2 <__moddi3+0xb8>
    11e0:	80 e0       	ldi	r24, 0x00	; 0
    11e2:	98 2b       	or	r25, r24
    11e4:	61 95       	neg	r22
    11e6:	31 e0       	ldi	r19, 0x01	; 1
    11e8:	16 16       	cp	r1, r22
    11ea:	08 f0       	brcs	.+2      	; 0x11ee <__moddi3+0xc4>
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	e6 2f       	mov	r30, r22
    11f0:	e9 1b       	sub	r30, r25
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	6e 17       	cp	r22, r30
    11f6:	08 f0       	brcs	.+2      	; 0x11fa <__moddi3+0xd0>
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	38 2b       	or	r19, r24
    11fc:	71 95       	neg	r23
    11fe:	41 e0       	ldi	r20, 0x01	; 1
    1200:	17 16       	cp	r1, r23
    1202:	08 f0       	brcs	.+2      	; 0x1206 <__moddi3+0xdc>
    1204:	40 e0       	ldi	r20, 0x00	; 0
    1206:	57 2f       	mov	r21, r23
    1208:	53 1b       	sub	r21, r19
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	75 17       	cp	r23, r21
    120e:	08 f0       	brcs	.+2      	; 0x1212 <__moddi3+0xe8>
    1210:	80 e0       	ldi	r24, 0x00	; 0
    1212:	48 2b       	or	r20, r24
    1214:	89 2d       	mov	r24, r9
    1216:	81 95       	neg	r24
    1218:	91 e0       	ldi	r25, 0x01	; 1
    121a:	18 16       	cp	r1, r24
    121c:	08 f0       	brcs	.+2      	; 0x1220 <__moddi3+0xf6>
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	68 2e       	mov	r6, r24
    1222:	64 1a       	sub	r6, r20
    1224:	46 2d       	mov	r20, r6
    1226:	31 e0       	ldi	r19, 0x01	; 1
    1228:	86 15       	cp	r24, r6
    122a:	08 f0       	brcs	.+2      	; 0x122e <__moddi3+0x104>
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	93 2b       	or	r25, r19
    1230:	88 2d       	mov	r24, r8
    1232:	81 95       	neg	r24
    1234:	89 1b       	sub	r24, r25
    1236:	29 83       	std	Y+1, r18	; 0x01
    1238:	ba 83       	std	Y+2, r27	; 0x02
    123a:	ab 83       	std	Y+3, r26	; 0x03
    123c:	fc 83       	std	Y+4, r31	; 0x04
    123e:	ed 83       	std	Y+5, r30	; 0x05
    1240:	5e 83       	std	Y+6, r21	; 0x06
    1242:	4f 83       	std	Y+7, r20	; 0x07
    1244:	88 87       	std	Y+8, r24	; 0x08
    1246:	2f ef       	ldi	r18, 0xFF	; 255
    1248:	3f ef       	ldi	r19, 0xFF	; 255
    124a:	4f ef       	ldi	r20, 0xFF	; 255
    124c:	5f ef       	ldi	r21, 0xFF	; 255
    124e:	e1 96       	adiw	r28, 0x31	; 49
    1250:	2c af       	std	Y+60, r18	; 0x3c
    1252:	3d af       	std	Y+61, r19	; 0x3d
    1254:	4e af       	std	Y+62, r20	; 0x3e
    1256:	5f af       	std	Y+63, r21	; 0x3f
    1258:	e1 97       	sbiw	r28, 0x31	; 49
    125a:	8d 85       	ldd	r24, Y+13	; 0x0d
    125c:	9e 85       	ldd	r25, Y+14	; 0x0e
    125e:	af 85       	ldd	r26, Y+15	; 0x0f
    1260:	b8 89       	ldd	r27, Y+16	; 0x10
    1262:	b7 ff       	sbrs	r27, 7
    1264:	5a c0       	rjmp	.+180    	; 0x131a <__moddi3+0x1f0>
    1266:	a1 94       	neg	r10
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	1a 14       	cp	r1, r10
    126c:	08 f0       	brcs	.+2      	; 0x1270 <__moddi3+0x146>
    126e:	80 e0       	ldi	r24, 0x00	; 0
    1270:	b1 94       	neg	r11
    1272:	91 e0       	ldi	r25, 0x01	; 1
    1274:	1b 14       	cp	r1, r11
    1276:	08 f0       	brcs	.+2      	; 0x127a <__moddi3+0x150>
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	6b 2d       	mov	r22, r11
    127c:	68 1b       	sub	r22, r24
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	b6 16       	cp	r11, r22
    1282:	08 f0       	brcs	.+2      	; 0x1286 <__moddi3+0x15c>
    1284:	80 e0       	ldi	r24, 0x00	; 0
    1286:	98 2b       	or	r25, r24
    1288:	c1 94       	neg	r12
    128a:	21 e0       	ldi	r18, 0x01	; 1
    128c:	1c 14       	cp	r1, r12
    128e:	08 f0       	brcs	.+2      	; 0x1292 <__moddi3+0x168>
    1290:	20 e0       	ldi	r18, 0x00	; 0
    1292:	5c 2d       	mov	r21, r12
    1294:	59 1b       	sub	r21, r25
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	c5 16       	cp	r12, r21
    129a:	08 f0       	brcs	.+2      	; 0x129e <__moddi3+0x174>
    129c:	80 e0       	ldi	r24, 0x00	; 0
    129e:	28 2b       	or	r18, r24
    12a0:	d1 94       	neg	r13
    12a2:	91 e0       	ldi	r25, 0x01	; 1
    12a4:	1d 14       	cp	r1, r13
    12a6:	08 f0       	brcs	.+2      	; 0x12aa <__moddi3+0x180>
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	4d 2d       	mov	r20, r13
    12ac:	42 1b       	sub	r20, r18
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	d4 16       	cp	r13, r20
    12b2:	08 f0       	brcs	.+2      	; 0x12b6 <__moddi3+0x18c>
    12b4:	80 e0       	ldi	r24, 0x00	; 0
    12b6:	98 2b       	or	r25, r24
    12b8:	e1 94       	neg	r14
    12ba:	21 e0       	ldi	r18, 0x01	; 1
    12bc:	1e 14       	cp	r1, r14
    12be:	08 f0       	brcs	.+2      	; 0x12c2 <__moddi3+0x198>
    12c0:	20 e0       	ldi	r18, 0x00	; 0
    12c2:	3e 2d       	mov	r19, r14
    12c4:	39 1b       	sub	r19, r25
    12c6:	81 e0       	ldi	r24, 0x01	; 1
    12c8:	e3 16       	cp	r14, r19
    12ca:	08 f0       	brcs	.+2      	; 0x12ce <__moddi3+0x1a4>
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	28 2b       	or	r18, r24
    12d0:	f1 94       	neg	r15
    12d2:	91 e0       	ldi	r25, 0x01	; 1
    12d4:	1f 14       	cp	r1, r15
    12d6:	08 f0       	brcs	.+2      	; 0x12da <__moddi3+0x1b0>
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	7f 2d       	mov	r23, r15
    12dc:	72 1b       	sub	r23, r18
    12de:	27 2f       	mov	r18, r23
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	f7 16       	cp	r15, r23
    12e4:	08 f0       	brcs	.+2      	; 0x12e8 <__moddi3+0x1be>
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	98 2b       	or	r25, r24
    12ea:	01 95       	neg	r16
    12ec:	11 e0       	ldi	r17, 0x01	; 1
    12ee:	10 16       	cp	r1, r16
    12f0:	08 f0       	brcs	.+2      	; 0x12f4 <__moddi3+0x1ca>
    12f2:	10 e0       	ldi	r17, 0x00	; 0
    12f4:	80 2f       	mov	r24, r16
    12f6:	89 1b       	sub	r24, r25
    12f8:	98 2f       	mov	r25, r24
    12fa:	81 e0       	ldi	r24, 0x01	; 1
    12fc:	09 17       	cp	r16, r25
    12fe:	08 f0       	brcs	.+2      	; 0x1302 <__moddi3+0x1d8>
    1300:	80 e0       	ldi	r24, 0x00	; 0
    1302:	18 2b       	or	r17, r24
    1304:	87 2d       	mov	r24, r7
    1306:	81 95       	neg	r24
    1308:	81 1b       	sub	r24, r17
    130a:	a9 86       	std	Y+9, r10	; 0x09
    130c:	6a 87       	std	Y+10, r22	; 0x0a
    130e:	5b 87       	std	Y+11, r21	; 0x0b
    1310:	4c 87       	std	Y+12, r20	; 0x0c
    1312:	3d 87       	std	Y+13, r19	; 0x0d
    1314:	2e 87       	std	Y+14, r18	; 0x0e
    1316:	9f 87       	std	Y+15, r25	; 0x0f
    1318:	88 8b       	std	Y+16, r24	; 0x10
    131a:	99 81       	ldd	r25, Y+1	; 0x01
    131c:	2a 81       	ldd	r18, Y+2	; 0x02
    131e:	3b 81       	ldd	r19, Y+3	; 0x03
    1320:	4c 81       	ldd	r20, Y+4	; 0x04
    1322:	5d 81       	ldd	r21, Y+5	; 0x05
    1324:	6e 81       	ldd	r22, Y+6	; 0x06
    1326:	7f 81       	ldd	r23, Y+7	; 0x07
    1328:	a8 85       	ldd	r26, Y+8	; 0x08
    132a:	b9 85       	ldd	r27, Y+9	; 0x09
    132c:	1a 85       	ldd	r17, Y+10	; 0x0a
    132e:	0b 85       	ldd	r16, Y+11	; 0x0b
    1330:	fc 84       	ldd	r15, Y+12	; 0x0c
    1332:	ed 84       	ldd	r14, Y+13	; 0x0d
    1334:	de 84       	ldd	r13, Y+14	; 0x0e
    1336:	cf 84       	ldd	r12, Y+15	; 0x0f
    1338:	b8 88       	ldd	r11, Y+16	; 0x10
    133a:	88 e0       	ldi	r24, 0x08	; 8
    133c:	e9 e1       	ldi	r30, 0x19	; 25
    133e:	8e 2e       	mov	r8, r30
    1340:	91 2c       	mov	r9, r1
    1342:	8c 0e       	add	r8, r28
    1344:	9d 1e       	adc	r9, r29
    1346:	f4 01       	movw	r30, r8
    1348:	68 2e       	mov	r6, r24
    134a:	11 92       	st	Z+, r1
    134c:	6a 94       	dec	r6
    134e:	e9 f7       	brne	.-6      	; 0x134a <__moddi3+0x220>
    1350:	99 8f       	std	Y+25, r25	; 0x19
    1352:	2a 8f       	std	Y+26, r18	; 0x1a
    1354:	3b 8f       	std	Y+27, r19	; 0x1b
    1356:	4c 8f       	std	Y+28, r20	; 0x1c
    1358:	5d 8f       	std	Y+29, r21	; 0x1d
    135a:	6e 8f       	std	Y+30, r22	; 0x1e
    135c:	7f 8f       	std	Y+31, r23	; 0x1f
    135e:	a8 a3       	std	Y+32, r26	; 0x20
    1360:	9e 01       	movw	r18, r28
    1362:	2f 5d       	subi	r18, 0xDF	; 223
    1364:	3f 4f       	sbci	r19, 0xFF	; 255
    1366:	f9 01       	movw	r30, r18
    1368:	11 92       	st	Z+, r1
    136a:	8a 95       	dec	r24
    136c:	e9 f7       	brne	.-6      	; 0x1368 <__moddi3+0x23e>
    136e:	b9 a3       	std	Y+33, r27	; 0x21
    1370:	1a a3       	std	Y+34, r17	; 0x22
    1372:	0b a3       	std	Y+35, r16	; 0x23
    1374:	fc a2       	std	Y+36, r15	; 0x24
    1376:	ed a2       	std	Y+37, r14	; 0x25
    1378:	de a2       	std	Y+38, r13	; 0x26
    137a:	cf a2       	std	Y+39, r12	; 0x27
    137c:	b8 a6       	std	Y+40, r11	; 0x28
    137e:	29 a0       	ldd	r2, Y+33	; 0x21
    1380:	3a a0       	ldd	r3, Y+34	; 0x22
    1382:	4b a0       	ldd	r4, Y+35	; 0x23
    1384:	5c a0       	ldd	r5, Y+36	; 0x24
    1386:	ad a0       	ldd	r10, Y+37	; 0x25
    1388:	be a0       	ldd	r11, Y+38	; 0x26
    138a:	cf a0       	ldd	r12, Y+39	; 0x27
    138c:	d8 a4       	ldd	r13, Y+40	; 0x28
    138e:	49 8d       	ldd	r20, Y+25	; 0x19
    1390:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1392:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1394:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1396:	e5 96       	adiw	r28, 0x35	; 53
    1398:	4f af       	std	Y+63, r20	; 0x3f
    139a:	e5 97       	sbiw	r28, 0x35	; 53
    139c:	e6 96       	adiw	r28, 0x36	; 54
    139e:	5f af       	std	Y+63, r21	; 0x3f
    13a0:	e6 97       	sbiw	r28, 0x36	; 54
    13a2:	e7 96       	adiw	r28, 0x37	; 55
    13a4:	6f af       	std	Y+63, r22	; 0x3f
    13a6:	e7 97       	sbiw	r28, 0x37	; 55
    13a8:	e8 96       	adiw	r28, 0x38	; 56
    13aa:	7f af       	std	Y+63, r23	; 0x3f
    13ac:	e8 97       	sbiw	r28, 0x38	; 56
    13ae:	e8 96       	adiw	r28, 0x38	; 56
    13b0:	6c ac       	ldd	r6, Y+60	; 0x3c
    13b2:	7d ac       	ldd	r7, Y+61	; 0x3d
    13b4:	8e ac       	ldd	r8, Y+62	; 0x3e
    13b6:	9f ac       	ldd	r9, Y+63	; 0x3f
    13b8:	e8 97       	sbiw	r28, 0x38	; 56
    13ba:	2d 96       	adiw	r28, 0x0d	; 13
    13bc:	6c ae       	std	Y+60, r6	; 0x3c
    13be:	7d ae       	std	Y+61, r7	; 0x3d
    13c0:	8e ae       	std	Y+62, r8	; 0x3e
    13c2:	9f ae       	std	Y+63, r9	; 0x3f
    13c4:	2d 97       	sbiw	r28, 0x0d	; 13
    13c6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    13c8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    13ca:	2f 8d       	ldd	r18, Y+31	; 0x1f
    13cc:	38 a1       	ldd	r19, Y+32	; 0x20
    13ce:	3c 01       	movw	r6, r24
    13d0:	49 01       	movw	r8, r18
    13d2:	61 96       	adiw	r28, 0x11	; 17
    13d4:	6c ae       	std	Y+60, r6	; 0x3c
    13d6:	7d ae       	std	Y+61, r7	; 0x3d
    13d8:	8e ae       	std	Y+62, r8	; 0x3e
    13da:	9f ae       	std	Y+63, r9	; 0x3f
    13dc:	61 97       	sbiw	r28, 0x11	; 17
    13de:	a1 14       	cp	r10, r1
    13e0:	b1 04       	cpc	r11, r1
    13e2:	c1 04       	cpc	r12, r1
    13e4:	d1 04       	cpc	r13, r1
    13e6:	09 f0       	breq	.+2      	; 0x13ea <__moddi3+0x2c0>
    13e8:	28 c3       	rjmp	.+1616   	; 0x1a3a <__moddi3+0x910>
    13ea:	62 14       	cp	r6, r2
    13ec:	73 04       	cpc	r7, r3
    13ee:	84 04       	cpc	r8, r4
    13f0:	95 04       	cpc	r9, r5
    13f2:	08 f0       	brcs	.+2      	; 0x13f6 <__moddi3+0x2cc>
    13f4:	0e c1       	rjmp	.+540    	; 0x1612 <__moddi3+0x4e8>
    13f6:	00 e0       	ldi	r16, 0x00	; 0
    13f8:	20 16       	cp	r2, r16
    13fa:	00 e0       	ldi	r16, 0x00	; 0
    13fc:	30 06       	cpc	r3, r16
    13fe:	01 e0       	ldi	r16, 0x01	; 1
    1400:	40 06       	cpc	r4, r16
    1402:	00 e0       	ldi	r16, 0x00	; 0
    1404:	50 06       	cpc	r5, r16
    1406:	88 f4       	brcc	.+34     	; 0x142a <__moddi3+0x300>
    1408:	1f ef       	ldi	r17, 0xFF	; 255
    140a:	21 16       	cp	r2, r17
    140c:	31 04       	cpc	r3, r1
    140e:	41 04       	cpc	r4, r1
    1410:	51 04       	cpc	r5, r1
    1412:	39 f0       	breq	.+14     	; 0x1422 <__moddi3+0x2f8>
    1414:	30 f0       	brcs	.+12     	; 0x1422 <__moddi3+0x2f8>
    1416:	88 e0       	ldi	r24, 0x08	; 8
    1418:	e8 2e       	mov	r14, r24
    141a:	f1 2c       	mov	r15, r1
    141c:	01 2d       	mov	r16, r1
    141e:	11 2d       	mov	r17, r1
    1420:	18 c0       	rjmp	.+48     	; 0x1452 <__moddi3+0x328>
    1422:	ee 24       	eor	r14, r14
    1424:	ff 24       	eor	r15, r15
    1426:	87 01       	movw	r16, r14
    1428:	14 c0       	rjmp	.+40     	; 0x1452 <__moddi3+0x328>
    142a:	20 e0       	ldi	r18, 0x00	; 0
    142c:	22 16       	cp	r2, r18
    142e:	20 e0       	ldi	r18, 0x00	; 0
    1430:	32 06       	cpc	r3, r18
    1432:	20 e0       	ldi	r18, 0x00	; 0
    1434:	42 06       	cpc	r4, r18
    1436:	21 e0       	ldi	r18, 0x01	; 1
    1438:	52 06       	cpc	r5, r18
    143a:	30 f0       	brcs	.+12     	; 0x1448 <__moddi3+0x31e>
    143c:	b8 e1       	ldi	r27, 0x18	; 24
    143e:	eb 2e       	mov	r14, r27
    1440:	f1 2c       	mov	r15, r1
    1442:	01 2d       	mov	r16, r1
    1444:	11 2d       	mov	r17, r1
    1446:	05 c0       	rjmp	.+10     	; 0x1452 <__moddi3+0x328>
    1448:	a0 e1       	ldi	r26, 0x10	; 16
    144a:	ea 2e       	mov	r14, r26
    144c:	f1 2c       	mov	r15, r1
    144e:	01 2d       	mov	r16, r1
    1450:	11 2d       	mov	r17, r1
    1452:	d2 01       	movw	r26, r4
    1454:	c1 01       	movw	r24, r2
    1456:	0e 2c       	mov	r0, r14
    1458:	04 c0       	rjmp	.+8      	; 0x1462 <__moddi3+0x338>
    145a:	b6 95       	lsr	r27
    145c:	a7 95       	ror	r26
    145e:	97 95       	ror	r25
    1460:	87 95       	ror	r24
    1462:	0a 94       	dec	r0
    1464:	d2 f7       	brpl	.-12     	; 0x145a <__moddi3+0x330>
    1466:	88 59       	subi	r24, 0x98	; 152
    1468:	9f 4f       	sbci	r25, 0xFF	; 255
    146a:	dc 01       	movw	r26, r24
    146c:	2c 91       	ld	r18, X
    146e:	80 e2       	ldi	r24, 0x20	; 32
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	a0 e0       	ldi	r26, 0x00	; 0
    1474:	b0 e0       	ldi	r27, 0x00	; 0
    1476:	8e 19       	sub	r24, r14
    1478:	9f 09       	sbc	r25, r15
    147a:	a0 0b       	sbc	r26, r16
    147c:	b1 0b       	sbc	r27, r17
    147e:	5c 01       	movw	r10, r24
    1480:	6d 01       	movw	r12, r26
    1482:	a2 1a       	sub	r10, r18
    1484:	b1 08       	sbc	r11, r1
    1486:	c1 08       	sbc	r12, r1
    1488:	d1 08       	sbc	r13, r1
    148a:	65 96       	adiw	r28, 0x15	; 21
    148c:	ac ae       	std	Y+60, r10	; 0x3c
    148e:	bd ae       	std	Y+61, r11	; 0x3d
    1490:	ce ae       	std	Y+62, r12	; 0x3e
    1492:	df ae       	std	Y+63, r13	; 0x3f
    1494:	65 97       	sbiw	r28, 0x15	; 21
    1496:	a1 14       	cp	r10, r1
    1498:	b1 04       	cpc	r11, r1
    149a:	c1 04       	cpc	r12, r1
    149c:	d1 04       	cpc	r13, r1
    149e:	09 f4       	brne	.+2      	; 0x14a2 <__moddi3+0x378>
    14a0:	45 c0       	rjmp	.+138    	; 0x152c <__moddi3+0x402>
    14a2:	62 96       	adiw	r28, 0x12	; 18
    14a4:	6f ad       	ldd	r22, Y+63	; 0x3f
    14a6:	62 97       	sbiw	r28, 0x12	; 18
    14a8:	06 2e       	mov	r0, r22
    14aa:	04 c0       	rjmp	.+8      	; 0x14b4 <__moddi3+0x38a>
    14ac:	22 0c       	add	r2, r2
    14ae:	33 1c       	adc	r3, r3
    14b0:	44 1c       	adc	r4, r4
    14b2:	55 1c       	adc	r5, r5
    14b4:	0a 94       	dec	r0
    14b6:	d2 f7       	brpl	.-12     	; 0x14ac <__moddi3+0x382>
    14b8:	a4 01       	movw	r20, r8
    14ba:	93 01       	movw	r18, r6
    14bc:	06 2e       	mov	r0, r22
    14be:	04 c0       	rjmp	.+8      	; 0x14c8 <__moddi3+0x39e>
    14c0:	22 0f       	add	r18, r18
    14c2:	33 1f       	adc	r19, r19
    14c4:	44 1f       	adc	r20, r20
    14c6:	55 1f       	adc	r21, r21
    14c8:	0a 94       	dec	r0
    14ca:	d2 f7       	brpl	.-12     	; 0x14c0 <__moddi3+0x396>
    14cc:	80 e2       	ldi	r24, 0x20	; 32
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	8a 19       	sub	r24, r10
    14d2:	9b 09       	sbc	r25, r11
    14d4:	e8 96       	adiw	r28, 0x38	; 56
    14d6:	cc ac       	ldd	r12, Y+60	; 0x3c
    14d8:	dd ac       	ldd	r13, Y+61	; 0x3d
    14da:	ee ac       	ldd	r14, Y+62	; 0x3e
    14dc:	ff ac       	ldd	r15, Y+63	; 0x3f
    14de:	e8 97       	sbiw	r28, 0x38	; 56
    14e0:	04 c0       	rjmp	.+8      	; 0x14ea <__moddi3+0x3c0>
    14e2:	f6 94       	lsr	r15
    14e4:	e7 94       	ror	r14
    14e6:	d7 94       	ror	r13
    14e8:	c7 94       	ror	r12
    14ea:	8a 95       	dec	r24
    14ec:	d2 f7       	brpl	.-12     	; 0x14e2 <__moddi3+0x3b8>
    14ee:	87 01       	movw	r16, r14
    14f0:	76 01       	movw	r14, r12
    14f2:	e2 2a       	or	r14, r18
    14f4:	f3 2a       	or	r15, r19
    14f6:	04 2b       	or	r16, r20
    14f8:	15 2b       	or	r17, r21
    14fa:	61 96       	adiw	r28, 0x11	; 17
    14fc:	ec ae       	std	Y+60, r14	; 0x3c
    14fe:	fd ae       	std	Y+61, r15	; 0x3d
    1500:	0e af       	std	Y+62, r16	; 0x3e
    1502:	1f af       	std	Y+63, r17	; 0x3f
    1504:	61 97       	sbiw	r28, 0x11	; 17
    1506:	e8 96       	adiw	r28, 0x38	; 56
    1508:	0c ad       	ldd	r16, Y+60	; 0x3c
    150a:	1d ad       	ldd	r17, Y+61	; 0x3d
    150c:	2e ad       	ldd	r18, Y+62	; 0x3e
    150e:	3f ad       	ldd	r19, Y+63	; 0x3f
    1510:	e8 97       	sbiw	r28, 0x38	; 56
    1512:	04 c0       	rjmp	.+8      	; 0x151c <__moddi3+0x3f2>
    1514:	00 0f       	add	r16, r16
    1516:	11 1f       	adc	r17, r17
    1518:	22 1f       	adc	r18, r18
    151a:	33 1f       	adc	r19, r19
    151c:	6a 95       	dec	r22
    151e:	d2 f7       	brpl	.-12     	; 0x1514 <__moddi3+0x3ea>
    1520:	2d 96       	adiw	r28, 0x0d	; 13
    1522:	0c af       	std	Y+60, r16	; 0x3c
    1524:	1d af       	std	Y+61, r17	; 0x3d
    1526:	2e af       	std	Y+62, r18	; 0x3e
    1528:	3f af       	std	Y+63, r19	; 0x3f
    152a:	2d 97       	sbiw	r28, 0x0d	; 13
    152c:	32 01       	movw	r6, r4
    152e:	88 24       	eor	r8, r8
    1530:	99 24       	eor	r9, r9
    1532:	a2 01       	movw	r20, r4
    1534:	91 01       	movw	r18, r2
    1536:	40 70       	andi	r20, 0x00	; 0
    1538:	50 70       	andi	r21, 0x00	; 0
    153a:	69 96       	adiw	r28, 0x19	; 25
    153c:	2c af       	std	Y+60, r18	; 0x3c
    153e:	3d af       	std	Y+61, r19	; 0x3d
    1540:	4e af       	std	Y+62, r20	; 0x3e
    1542:	5f af       	std	Y+63, r21	; 0x3f
    1544:	69 97       	sbiw	r28, 0x19	; 25
    1546:	61 96       	adiw	r28, 0x11	; 17
    1548:	6c ad       	ldd	r22, Y+60	; 0x3c
    154a:	7d ad       	ldd	r23, Y+61	; 0x3d
    154c:	8e ad       	ldd	r24, Y+62	; 0x3e
    154e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1550:	61 97       	sbiw	r28, 0x11	; 17
    1552:	a4 01       	movw	r20, r8
    1554:	93 01       	movw	r18, r6
    1556:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    155a:	7b 01       	movw	r14, r22
    155c:	8c 01       	movw	r16, r24
    155e:	61 96       	adiw	r28, 0x11	; 17
    1560:	6c ad       	ldd	r22, Y+60	; 0x3c
    1562:	7d ad       	ldd	r23, Y+61	; 0x3d
    1564:	8e ad       	ldd	r24, Y+62	; 0x3e
    1566:	9f ad       	ldd	r25, Y+63	; 0x3f
    1568:	61 97       	sbiw	r28, 0x11	; 17
    156a:	a4 01       	movw	r20, r8
    156c:	93 01       	movw	r18, r6
    156e:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1572:	ca 01       	movw	r24, r20
    1574:	b9 01       	movw	r22, r18
    1576:	69 96       	adiw	r28, 0x19	; 25
    1578:	2c ad       	ldd	r18, Y+60	; 0x3c
    157a:	3d ad       	ldd	r19, Y+61	; 0x3d
    157c:	4e ad       	ldd	r20, Y+62	; 0x3e
    157e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1580:	69 97       	sbiw	r28, 0x19	; 25
    1582:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1586:	9b 01       	movw	r18, r22
    1588:	ac 01       	movw	r20, r24
    158a:	87 01       	movw	r16, r14
    158c:	ff 24       	eor	r15, r15
    158e:	ee 24       	eor	r14, r14
    1590:	2d 96       	adiw	r28, 0x0d	; 13
    1592:	ac ac       	ldd	r10, Y+60	; 0x3c
    1594:	bd ac       	ldd	r11, Y+61	; 0x3d
    1596:	ce ac       	ldd	r12, Y+62	; 0x3e
    1598:	df ac       	ldd	r13, Y+63	; 0x3f
    159a:	2d 97       	sbiw	r28, 0x0d	; 13
    159c:	c6 01       	movw	r24, r12
    159e:	aa 27       	eor	r26, r26
    15a0:	bb 27       	eor	r27, r27
    15a2:	57 01       	movw	r10, r14
    15a4:	68 01       	movw	r12, r16
    15a6:	a8 2a       	or	r10, r24
    15a8:	b9 2a       	or	r11, r25
    15aa:	ca 2a       	or	r12, r26
    15ac:	db 2a       	or	r13, r27
    15ae:	a2 16       	cp	r10, r18
    15b0:	b3 06       	cpc	r11, r19
    15b2:	c4 06       	cpc	r12, r20
    15b4:	d5 06       	cpc	r13, r21
    15b6:	90 f4       	brcc	.+36     	; 0x15dc <__moddi3+0x4b2>
    15b8:	a2 0c       	add	r10, r2
    15ba:	b3 1c       	adc	r11, r3
    15bc:	c4 1c       	adc	r12, r4
    15be:	d5 1c       	adc	r13, r5
    15c0:	a2 14       	cp	r10, r2
    15c2:	b3 04       	cpc	r11, r3
    15c4:	c4 04       	cpc	r12, r4
    15c6:	d5 04       	cpc	r13, r5
    15c8:	48 f0       	brcs	.+18     	; 0x15dc <__moddi3+0x4b2>
    15ca:	a2 16       	cp	r10, r18
    15cc:	b3 06       	cpc	r11, r19
    15ce:	c4 06       	cpc	r12, r20
    15d0:	d5 06       	cpc	r13, r21
    15d2:	20 f4       	brcc	.+8      	; 0x15dc <__moddi3+0x4b2>
    15d4:	a2 0c       	add	r10, r2
    15d6:	b3 1c       	adc	r11, r3
    15d8:	c4 1c       	adc	r12, r4
    15da:	d5 1c       	adc	r13, r5
    15dc:	a2 1a       	sub	r10, r18
    15de:	b3 0a       	sbc	r11, r19
    15e0:	c4 0a       	sbc	r12, r20
    15e2:	d5 0a       	sbc	r13, r21
    15e4:	c6 01       	movw	r24, r12
    15e6:	b5 01       	movw	r22, r10
    15e8:	a4 01       	movw	r20, r8
    15ea:	93 01       	movw	r18, r6
    15ec:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    15f0:	7b 01       	movw	r14, r22
    15f2:	8c 01       	movw	r16, r24
    15f4:	c6 01       	movw	r24, r12
    15f6:	b5 01       	movw	r22, r10
    15f8:	a4 01       	movw	r20, r8
    15fa:	93 01       	movw	r18, r6
    15fc:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1600:	ca 01       	movw	r24, r20
    1602:	b9 01       	movw	r22, r18
    1604:	69 96       	adiw	r28, 0x19	; 25
    1606:	2c ad       	ldd	r18, Y+60	; 0x3c
    1608:	3d ad       	ldd	r19, Y+61	; 0x3d
    160a:	4e ad       	ldd	r20, Y+62	; 0x3e
    160c:	5f ad       	ldd	r21, Y+63	; 0x3f
    160e:	69 97       	sbiw	r28, 0x19	; 25
    1610:	c8 c1       	rjmp	.+912    	; 0x19a2 <__moddi3+0x878>
    1612:	21 14       	cp	r2, r1
    1614:	31 04       	cpc	r3, r1
    1616:	41 04       	cpc	r4, r1
    1618:	51 04       	cpc	r5, r1
    161a:	71 f4       	brne	.+28     	; 0x1638 <__moddi3+0x50e>
    161c:	61 e0       	ldi	r22, 0x01	; 1
    161e:	70 e0       	ldi	r23, 0x00	; 0
    1620:	80 e0       	ldi	r24, 0x00	; 0
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	20 e0       	ldi	r18, 0x00	; 0
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	40 e0       	ldi	r20, 0x00	; 0
    162a:	50 e0       	ldi	r21, 0x00	; 0
    162c:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1630:	c9 01       	movw	r24, r18
    1632:	da 01       	movw	r26, r20
    1634:	1c 01       	movw	r2, r24
    1636:	2d 01       	movw	r4, r26
    1638:	00 e0       	ldi	r16, 0x00	; 0
    163a:	20 16       	cp	r2, r16
    163c:	00 e0       	ldi	r16, 0x00	; 0
    163e:	30 06       	cpc	r3, r16
    1640:	01 e0       	ldi	r16, 0x01	; 1
    1642:	40 06       	cpc	r4, r16
    1644:	00 e0       	ldi	r16, 0x00	; 0
    1646:	50 06       	cpc	r5, r16
    1648:	88 f4       	brcc	.+34     	; 0x166c <__moddi3+0x542>
    164a:	1f ef       	ldi	r17, 0xFF	; 255
    164c:	21 16       	cp	r2, r17
    164e:	31 04       	cpc	r3, r1
    1650:	41 04       	cpc	r4, r1
    1652:	51 04       	cpc	r5, r1
    1654:	39 f0       	breq	.+14     	; 0x1664 <__moddi3+0x53a>
    1656:	30 f0       	brcs	.+12     	; 0x1664 <__moddi3+0x53a>
    1658:	68 e0       	ldi	r22, 0x08	; 8
    165a:	e6 2e       	mov	r14, r22
    165c:	f1 2c       	mov	r15, r1
    165e:	01 2d       	mov	r16, r1
    1660:	11 2d       	mov	r17, r1
    1662:	18 c0       	rjmp	.+48     	; 0x1694 <__moddi3+0x56a>
    1664:	ee 24       	eor	r14, r14
    1666:	ff 24       	eor	r15, r15
    1668:	87 01       	movw	r16, r14
    166a:	14 c0       	rjmp	.+40     	; 0x1694 <__moddi3+0x56a>
    166c:	20 e0       	ldi	r18, 0x00	; 0
    166e:	22 16       	cp	r2, r18
    1670:	20 e0       	ldi	r18, 0x00	; 0
    1672:	32 06       	cpc	r3, r18
    1674:	20 e0       	ldi	r18, 0x00	; 0
    1676:	42 06       	cpc	r4, r18
    1678:	21 e0       	ldi	r18, 0x01	; 1
    167a:	52 06       	cpc	r5, r18
    167c:	30 f0       	brcs	.+12     	; 0x168a <__moddi3+0x560>
    167e:	58 e1       	ldi	r21, 0x18	; 24
    1680:	e5 2e       	mov	r14, r21
    1682:	f1 2c       	mov	r15, r1
    1684:	01 2d       	mov	r16, r1
    1686:	11 2d       	mov	r17, r1
    1688:	05 c0       	rjmp	.+10     	; 0x1694 <__moddi3+0x56a>
    168a:	40 e1       	ldi	r20, 0x10	; 16
    168c:	e4 2e       	mov	r14, r20
    168e:	f1 2c       	mov	r15, r1
    1690:	01 2d       	mov	r16, r1
    1692:	11 2d       	mov	r17, r1
    1694:	d2 01       	movw	r26, r4
    1696:	c1 01       	movw	r24, r2
    1698:	0e 2c       	mov	r0, r14
    169a:	04 c0       	rjmp	.+8      	; 0x16a4 <__moddi3+0x57a>
    169c:	b6 95       	lsr	r27
    169e:	a7 95       	ror	r26
    16a0:	97 95       	ror	r25
    16a2:	87 95       	ror	r24
    16a4:	0a 94       	dec	r0
    16a6:	d2 f7       	brpl	.-12     	; 0x169c <__moddi3+0x572>
    16a8:	88 59       	subi	r24, 0x98	; 152
    16aa:	9f 4f       	sbci	r25, 0xFF	; 255
    16ac:	dc 01       	movw	r26, r24
    16ae:	2c 91       	ld	r18, X
    16b0:	30 e2       	ldi	r19, 0x20	; 32
    16b2:	a3 2e       	mov	r10, r19
    16b4:	b1 2c       	mov	r11, r1
    16b6:	c1 2c       	mov	r12, r1
    16b8:	d1 2c       	mov	r13, r1
    16ba:	d6 01       	movw	r26, r12
    16bc:	c5 01       	movw	r24, r10
    16be:	8e 19       	sub	r24, r14
    16c0:	9f 09       	sbc	r25, r15
    16c2:	a0 0b       	sbc	r26, r16
    16c4:	b1 0b       	sbc	r27, r17
    16c6:	7c 01       	movw	r14, r24
    16c8:	8d 01       	movw	r16, r26
    16ca:	e2 1a       	sub	r14, r18
    16cc:	f1 08       	sbc	r15, r1
    16ce:	01 09       	sbc	r16, r1
    16d0:	11 09       	sbc	r17, r1
    16d2:	65 96       	adiw	r28, 0x15	; 21
    16d4:	ec ae       	std	Y+60, r14	; 0x3c
    16d6:	fd ae       	std	Y+61, r15	; 0x3d
    16d8:	0e af       	std	Y+62, r16	; 0x3e
    16da:	1f af       	std	Y+63, r17	; 0x3f
    16dc:	65 97       	sbiw	r28, 0x15	; 21
    16de:	e1 14       	cp	r14, r1
    16e0:	f1 04       	cpc	r15, r1
    16e2:	01 05       	cpc	r16, r1
    16e4:	11 05       	cpc	r17, r1
    16e6:	39 f4       	brne	.+14     	; 0x16f6 <__moddi3+0x5cc>
    16e8:	64 01       	movw	r12, r8
    16ea:	53 01       	movw	r10, r6
    16ec:	a2 18       	sub	r10, r2
    16ee:	b3 08       	sbc	r11, r3
    16f0:	c4 08       	sbc	r12, r4
    16f2:	d5 08       	sbc	r13, r5
    16f4:	ec c0       	rjmp	.+472    	; 0x18ce <__moddi3+0x7a4>
    16f6:	62 96       	adiw	r28, 0x12	; 18
    16f8:	ff ac       	ldd	r15, Y+63	; 0x3f
    16fa:	62 97       	sbiw	r28, 0x12	; 18
    16fc:	e4 96       	adiw	r28, 0x34	; 52
    16fe:	ff ae       	std	Y+63, r15	; 0x3f
    1700:	e4 97       	sbiw	r28, 0x34	; 52
    1702:	0f 2c       	mov	r0, r15
    1704:	04 c0       	rjmp	.+8      	; 0x170e <__moddi3+0x5e4>
    1706:	22 0c       	add	r2, r2
    1708:	33 1c       	adc	r3, r3
    170a:	44 1c       	adc	r4, r4
    170c:	55 1c       	adc	r5, r5
    170e:	0a 94       	dec	r0
    1710:	d2 f7       	brpl	.-12     	; 0x1706 <__moddi3+0x5dc>
    1712:	8a 2d       	mov	r24, r10
    1714:	8f 19       	sub	r24, r15
    1716:	64 01       	movw	r12, r8
    1718:	53 01       	movw	r10, r6
    171a:	08 2e       	mov	r0, r24
    171c:	04 c0       	rjmp	.+8      	; 0x1726 <__moddi3+0x5fc>
    171e:	d6 94       	lsr	r13
    1720:	c7 94       	ror	r12
    1722:	b7 94       	ror	r11
    1724:	a7 94       	ror	r10
    1726:	0a 94       	dec	r0
    1728:	d2 f7       	brpl	.-12     	; 0x171e <__moddi3+0x5f4>
    172a:	a4 01       	movw	r20, r8
    172c:	93 01       	movw	r18, r6
    172e:	04 c0       	rjmp	.+8      	; 0x1738 <__moddi3+0x60e>
    1730:	22 0f       	add	r18, r18
    1732:	33 1f       	adc	r19, r19
    1734:	44 1f       	adc	r20, r20
    1736:	55 1f       	adc	r21, r21
    1738:	fa 94       	dec	r15
    173a:	d2 f7       	brpl	.-12     	; 0x1730 <__moddi3+0x606>
    173c:	e8 96       	adiw	r28, 0x38	; 56
    173e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1740:	7d ac       	ldd	r7, Y+61	; 0x3d
    1742:	8e ac       	ldd	r8, Y+62	; 0x3e
    1744:	9f ac       	ldd	r9, Y+63	; 0x3f
    1746:	e8 97       	sbiw	r28, 0x38	; 56
    1748:	04 c0       	rjmp	.+8      	; 0x1752 <__moddi3+0x628>
    174a:	96 94       	lsr	r9
    174c:	87 94       	ror	r8
    174e:	77 94       	ror	r7
    1750:	67 94       	ror	r6
    1752:	8a 95       	dec	r24
    1754:	d2 f7       	brpl	.-12     	; 0x174a <__moddi3+0x620>
    1756:	84 01       	movw	r16, r8
    1758:	73 01       	movw	r14, r6
    175a:	e2 2a       	or	r14, r18
    175c:	f3 2a       	or	r15, r19
    175e:	04 2b       	or	r16, r20
    1760:	15 2b       	or	r17, r21
    1762:	29 96       	adiw	r28, 0x09	; 9
    1764:	ec ae       	std	Y+60, r14	; 0x3c
    1766:	fd ae       	std	Y+61, r15	; 0x3d
    1768:	0e af       	std	Y+62, r16	; 0x3e
    176a:	1f af       	std	Y+63, r17	; 0x3f
    176c:	29 97       	sbiw	r28, 0x09	; 9
    176e:	32 01       	movw	r6, r4
    1770:	88 24       	eor	r8, r8
    1772:	99 24       	eor	r9, r9
    1774:	92 01       	movw	r18, r4
    1776:	81 01       	movw	r16, r2
    1778:	20 70       	andi	r18, 0x00	; 0
    177a:	30 70       	andi	r19, 0x00	; 0
    177c:	6d 96       	adiw	r28, 0x1d	; 29
    177e:	0c af       	std	Y+60, r16	; 0x3c
    1780:	1d af       	std	Y+61, r17	; 0x3d
    1782:	2e af       	std	Y+62, r18	; 0x3e
    1784:	3f af       	std	Y+63, r19	; 0x3f
    1786:	6d 97       	sbiw	r28, 0x1d	; 29
    1788:	c6 01       	movw	r24, r12
    178a:	b5 01       	movw	r22, r10
    178c:	a4 01       	movw	r20, r8
    178e:	93 01       	movw	r18, r6
    1790:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1794:	7b 01       	movw	r14, r22
    1796:	8c 01       	movw	r16, r24
    1798:	c6 01       	movw	r24, r12
    179a:	b5 01       	movw	r22, r10
    179c:	a4 01       	movw	r20, r8
    179e:	93 01       	movw	r18, r6
    17a0:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    17a4:	ca 01       	movw	r24, r20
    17a6:	b9 01       	movw	r22, r18
    17a8:	6d 96       	adiw	r28, 0x1d	; 29
    17aa:	2c ad       	ldd	r18, Y+60	; 0x3c
    17ac:	3d ad       	ldd	r19, Y+61	; 0x3d
    17ae:	4e ad       	ldd	r20, Y+62	; 0x3e
    17b0:	5f ad       	ldd	r21, Y+63	; 0x3f
    17b2:	6d 97       	sbiw	r28, 0x1d	; 29
    17b4:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    17b8:	9b 01       	movw	r18, r22
    17ba:	ac 01       	movw	r20, r24
    17bc:	87 01       	movw	r16, r14
    17be:	ff 24       	eor	r15, r15
    17c0:	ee 24       	eor	r14, r14
    17c2:	29 96       	adiw	r28, 0x09	; 9
    17c4:	ac ac       	ldd	r10, Y+60	; 0x3c
    17c6:	bd ac       	ldd	r11, Y+61	; 0x3d
    17c8:	ce ac       	ldd	r12, Y+62	; 0x3e
    17ca:	df ac       	ldd	r13, Y+63	; 0x3f
    17cc:	29 97       	sbiw	r28, 0x09	; 9
    17ce:	c6 01       	movw	r24, r12
    17d0:	aa 27       	eor	r26, r26
    17d2:	bb 27       	eor	r27, r27
    17d4:	5c 01       	movw	r10, r24
    17d6:	6d 01       	movw	r12, r26
    17d8:	ae 28       	or	r10, r14
    17da:	bf 28       	or	r11, r15
    17dc:	c0 2a       	or	r12, r16
    17de:	d1 2a       	or	r13, r17
    17e0:	a2 16       	cp	r10, r18
    17e2:	b3 06       	cpc	r11, r19
    17e4:	c4 06       	cpc	r12, r20
    17e6:	d5 06       	cpc	r13, r21
    17e8:	90 f4       	brcc	.+36     	; 0x180e <__moddi3+0x6e4>
    17ea:	a2 0c       	add	r10, r2
    17ec:	b3 1c       	adc	r11, r3
    17ee:	c4 1c       	adc	r12, r4
    17f0:	d5 1c       	adc	r13, r5
    17f2:	a2 14       	cp	r10, r2
    17f4:	b3 04       	cpc	r11, r3
    17f6:	c4 04       	cpc	r12, r4
    17f8:	d5 04       	cpc	r13, r5
    17fa:	48 f0       	brcs	.+18     	; 0x180e <__moddi3+0x6e4>
    17fc:	a2 16       	cp	r10, r18
    17fe:	b3 06       	cpc	r11, r19
    1800:	c4 06       	cpc	r12, r20
    1802:	d5 06       	cpc	r13, r21
    1804:	20 f4       	brcc	.+8      	; 0x180e <__moddi3+0x6e4>
    1806:	a2 0c       	add	r10, r2
    1808:	b3 1c       	adc	r11, r3
    180a:	c4 1c       	adc	r12, r4
    180c:	d5 1c       	adc	r13, r5
    180e:	a2 1a       	sub	r10, r18
    1810:	b3 0a       	sbc	r11, r19
    1812:	c4 0a       	sbc	r12, r20
    1814:	d5 0a       	sbc	r13, r21
    1816:	c6 01       	movw	r24, r12
    1818:	b5 01       	movw	r22, r10
    181a:	a4 01       	movw	r20, r8
    181c:	93 01       	movw	r18, r6
    181e:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1822:	7b 01       	movw	r14, r22
    1824:	8c 01       	movw	r16, r24
    1826:	c6 01       	movw	r24, r12
    1828:	b5 01       	movw	r22, r10
    182a:	a4 01       	movw	r20, r8
    182c:	93 01       	movw	r18, r6
    182e:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1832:	ca 01       	movw	r24, r20
    1834:	b9 01       	movw	r22, r18
    1836:	6d 96       	adiw	r28, 0x1d	; 29
    1838:	2c ad       	ldd	r18, Y+60	; 0x3c
    183a:	3d ad       	ldd	r19, Y+61	; 0x3d
    183c:	4e ad       	ldd	r20, Y+62	; 0x3e
    183e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1840:	6d 97       	sbiw	r28, 0x1d	; 29
    1842:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1846:	9b 01       	movw	r18, r22
    1848:	ac 01       	movw	r20, r24
    184a:	87 01       	movw	r16, r14
    184c:	ff 24       	eor	r15, r15
    184e:	ee 24       	eor	r14, r14
    1850:	29 96       	adiw	r28, 0x09	; 9
    1852:	8c ad       	ldd	r24, Y+60	; 0x3c
    1854:	9d ad       	ldd	r25, Y+61	; 0x3d
    1856:	ae ad       	ldd	r26, Y+62	; 0x3e
    1858:	bf ad       	ldd	r27, Y+63	; 0x3f
    185a:	29 97       	sbiw	r28, 0x09	; 9
    185c:	a0 70       	andi	r26, 0x00	; 0
    185e:	b0 70       	andi	r27, 0x00	; 0
    1860:	57 01       	movw	r10, r14
    1862:	68 01       	movw	r12, r16
    1864:	a8 2a       	or	r10, r24
    1866:	b9 2a       	or	r11, r25
    1868:	ca 2a       	or	r12, r26
    186a:	db 2a       	or	r13, r27
    186c:	a2 16       	cp	r10, r18
    186e:	b3 06       	cpc	r11, r19
    1870:	c4 06       	cpc	r12, r20
    1872:	d5 06       	cpc	r13, r21
    1874:	90 f4       	brcc	.+36     	; 0x189a <__moddi3+0x770>
    1876:	a2 0c       	add	r10, r2
    1878:	b3 1c       	adc	r11, r3
    187a:	c4 1c       	adc	r12, r4
    187c:	d5 1c       	adc	r13, r5
    187e:	a2 14       	cp	r10, r2
    1880:	b3 04       	cpc	r11, r3
    1882:	c4 04       	cpc	r12, r4
    1884:	d5 04       	cpc	r13, r5
    1886:	48 f0       	brcs	.+18     	; 0x189a <__moddi3+0x770>
    1888:	a2 16       	cp	r10, r18
    188a:	b3 06       	cpc	r11, r19
    188c:	c4 06       	cpc	r12, r20
    188e:	d5 06       	cpc	r13, r21
    1890:	20 f4       	brcc	.+8      	; 0x189a <__moddi3+0x770>
    1892:	a2 0c       	add	r10, r2
    1894:	b3 1c       	adc	r11, r3
    1896:	c4 1c       	adc	r12, r4
    1898:	d5 1c       	adc	r13, r5
    189a:	e8 96       	adiw	r28, 0x38	; 56
    189c:	ec ac       	ldd	r14, Y+60	; 0x3c
    189e:	fd ac       	ldd	r15, Y+61	; 0x3d
    18a0:	0e ad       	ldd	r16, Y+62	; 0x3e
    18a2:	1f ad       	ldd	r17, Y+63	; 0x3f
    18a4:	e8 97       	sbiw	r28, 0x38	; 56
    18a6:	e4 96       	adiw	r28, 0x34	; 52
    18a8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18aa:	e4 97       	sbiw	r28, 0x34	; 52
    18ac:	04 c0       	rjmp	.+8      	; 0x18b6 <__moddi3+0x78c>
    18ae:	ee 0c       	add	r14, r14
    18b0:	ff 1c       	adc	r15, r15
    18b2:	00 1f       	adc	r16, r16
    18b4:	11 1f       	adc	r17, r17
    18b6:	0a 94       	dec	r0
    18b8:	d2 f7       	brpl	.-12     	; 0x18ae <__moddi3+0x784>
    18ba:	2d 96       	adiw	r28, 0x0d	; 13
    18bc:	ec ae       	std	Y+60, r14	; 0x3c
    18be:	fd ae       	std	Y+61, r15	; 0x3d
    18c0:	0e af       	std	Y+62, r16	; 0x3e
    18c2:	1f af       	std	Y+63, r17	; 0x3f
    18c4:	2d 97       	sbiw	r28, 0x0d	; 13
    18c6:	a2 1a       	sub	r10, r18
    18c8:	b3 0a       	sbc	r11, r19
    18ca:	c4 0a       	sbc	r12, r20
    18cc:	d5 0a       	sbc	r13, r21
    18ce:	32 01       	movw	r6, r4
    18d0:	88 24       	eor	r8, r8
    18d2:	99 24       	eor	r9, r9
    18d4:	92 01       	movw	r18, r4
    18d6:	81 01       	movw	r16, r2
    18d8:	20 70       	andi	r18, 0x00	; 0
    18da:	30 70       	andi	r19, 0x00	; 0
    18dc:	a1 96       	adiw	r28, 0x21	; 33
    18de:	0c af       	std	Y+60, r16	; 0x3c
    18e0:	1d af       	std	Y+61, r17	; 0x3d
    18e2:	2e af       	std	Y+62, r18	; 0x3e
    18e4:	3f af       	std	Y+63, r19	; 0x3f
    18e6:	a1 97       	sbiw	r28, 0x21	; 33
    18e8:	c6 01       	movw	r24, r12
    18ea:	b5 01       	movw	r22, r10
    18ec:	a4 01       	movw	r20, r8
    18ee:	93 01       	movw	r18, r6
    18f0:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    18f4:	7b 01       	movw	r14, r22
    18f6:	8c 01       	movw	r16, r24
    18f8:	c6 01       	movw	r24, r12
    18fa:	b5 01       	movw	r22, r10
    18fc:	a4 01       	movw	r20, r8
    18fe:	93 01       	movw	r18, r6
    1900:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1904:	ca 01       	movw	r24, r20
    1906:	b9 01       	movw	r22, r18
    1908:	a1 96       	adiw	r28, 0x21	; 33
    190a:	2c ad       	ldd	r18, Y+60	; 0x3c
    190c:	3d ad       	ldd	r19, Y+61	; 0x3d
    190e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1910:	5f ad       	ldd	r21, Y+63	; 0x3f
    1912:	a1 97       	sbiw	r28, 0x21	; 33
    1914:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1918:	9b 01       	movw	r18, r22
    191a:	ac 01       	movw	r20, r24
    191c:	87 01       	movw	r16, r14
    191e:	ff 24       	eor	r15, r15
    1920:	ee 24       	eor	r14, r14
    1922:	2d 96       	adiw	r28, 0x0d	; 13
    1924:	ac ac       	ldd	r10, Y+60	; 0x3c
    1926:	bd ac       	ldd	r11, Y+61	; 0x3d
    1928:	ce ac       	ldd	r12, Y+62	; 0x3e
    192a:	df ac       	ldd	r13, Y+63	; 0x3f
    192c:	2d 97       	sbiw	r28, 0x0d	; 13
    192e:	c6 01       	movw	r24, r12
    1930:	aa 27       	eor	r26, r26
    1932:	bb 27       	eor	r27, r27
    1934:	57 01       	movw	r10, r14
    1936:	68 01       	movw	r12, r16
    1938:	a8 2a       	or	r10, r24
    193a:	b9 2a       	or	r11, r25
    193c:	ca 2a       	or	r12, r26
    193e:	db 2a       	or	r13, r27
    1940:	a2 16       	cp	r10, r18
    1942:	b3 06       	cpc	r11, r19
    1944:	c4 06       	cpc	r12, r20
    1946:	d5 06       	cpc	r13, r21
    1948:	90 f4       	brcc	.+36     	; 0x196e <__moddi3+0x844>
    194a:	a2 0c       	add	r10, r2
    194c:	b3 1c       	adc	r11, r3
    194e:	c4 1c       	adc	r12, r4
    1950:	d5 1c       	adc	r13, r5
    1952:	a2 14       	cp	r10, r2
    1954:	b3 04       	cpc	r11, r3
    1956:	c4 04       	cpc	r12, r4
    1958:	d5 04       	cpc	r13, r5
    195a:	48 f0       	brcs	.+18     	; 0x196e <__moddi3+0x844>
    195c:	a2 16       	cp	r10, r18
    195e:	b3 06       	cpc	r11, r19
    1960:	c4 06       	cpc	r12, r20
    1962:	d5 06       	cpc	r13, r21
    1964:	20 f4       	brcc	.+8      	; 0x196e <__moddi3+0x844>
    1966:	a2 0c       	add	r10, r2
    1968:	b3 1c       	adc	r11, r3
    196a:	c4 1c       	adc	r12, r4
    196c:	d5 1c       	adc	r13, r5
    196e:	a2 1a       	sub	r10, r18
    1970:	b3 0a       	sbc	r11, r19
    1972:	c4 0a       	sbc	r12, r20
    1974:	d5 0a       	sbc	r13, r21
    1976:	c6 01       	movw	r24, r12
    1978:	b5 01       	movw	r22, r10
    197a:	a4 01       	movw	r20, r8
    197c:	93 01       	movw	r18, r6
    197e:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1982:	7b 01       	movw	r14, r22
    1984:	8c 01       	movw	r16, r24
    1986:	c6 01       	movw	r24, r12
    1988:	b5 01       	movw	r22, r10
    198a:	a4 01       	movw	r20, r8
    198c:	93 01       	movw	r18, r6
    198e:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1992:	ca 01       	movw	r24, r20
    1994:	b9 01       	movw	r22, r18
    1996:	a1 96       	adiw	r28, 0x21	; 33
    1998:	2c ad       	ldd	r18, Y+60	; 0x3c
    199a:	3d ad       	ldd	r19, Y+61	; 0x3d
    199c:	4e ad       	ldd	r20, Y+62	; 0x3e
    199e:	5f ad       	ldd	r21, Y+63	; 0x3f
    19a0:	a1 97       	sbiw	r28, 0x21	; 33
    19a2:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    19a6:	9b 01       	movw	r18, r22
    19a8:	ac 01       	movw	r20, r24
    19aa:	87 01       	movw	r16, r14
    19ac:	ff 24       	eor	r15, r15
    19ae:	ee 24       	eor	r14, r14
    19b0:	2d 96       	adiw	r28, 0x0d	; 13
    19b2:	8c ad       	ldd	r24, Y+60	; 0x3c
    19b4:	9d ad       	ldd	r25, Y+61	; 0x3d
    19b6:	ae ad       	ldd	r26, Y+62	; 0x3e
    19b8:	bf ad       	ldd	r27, Y+63	; 0x3f
    19ba:	2d 97       	sbiw	r28, 0x0d	; 13
    19bc:	a0 70       	andi	r26, 0x00	; 0
    19be:	b0 70       	andi	r27, 0x00	; 0
    19c0:	e8 2a       	or	r14, r24
    19c2:	f9 2a       	or	r15, r25
    19c4:	0a 2b       	or	r16, r26
    19c6:	1b 2b       	or	r17, r27
    19c8:	e2 16       	cp	r14, r18
    19ca:	f3 06       	cpc	r15, r19
    19cc:	04 07       	cpc	r16, r20
    19ce:	15 07       	cpc	r17, r21
    19d0:	90 f4       	brcc	.+36     	; 0x19f6 <__moddi3+0x8cc>
    19d2:	e2 0c       	add	r14, r2
    19d4:	f3 1c       	adc	r15, r3
    19d6:	04 1d       	adc	r16, r4
    19d8:	15 1d       	adc	r17, r5
    19da:	e2 14       	cp	r14, r2
    19dc:	f3 04       	cpc	r15, r3
    19de:	04 05       	cpc	r16, r4
    19e0:	15 05       	cpc	r17, r5
    19e2:	48 f0       	brcs	.+18     	; 0x19f6 <__moddi3+0x8cc>
    19e4:	e2 16       	cp	r14, r18
    19e6:	f3 06       	cpc	r15, r19
    19e8:	04 07       	cpc	r16, r20
    19ea:	15 07       	cpc	r17, r21
    19ec:	20 f4       	brcc	.+8      	; 0x19f6 <__moddi3+0x8cc>
    19ee:	e2 0c       	add	r14, r2
    19f0:	f3 1c       	adc	r15, r3
    19f2:	04 1d       	adc	r16, r4
    19f4:	15 1d       	adc	r17, r5
    19f6:	e2 1a       	sub	r14, r18
    19f8:	f3 0a       	sbc	r15, r19
    19fa:	04 0b       	sbc	r16, r20
    19fc:	15 0b       	sbc	r17, r21
    19fe:	d8 01       	movw	r26, r16
    1a00:	c7 01       	movw	r24, r14
    1a02:	62 96       	adiw	r28, 0x12	; 18
    1a04:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a06:	62 97       	sbiw	r28, 0x12	; 18
    1a08:	04 c0       	rjmp	.+8      	; 0x1a12 <__moddi3+0x8e8>
    1a0a:	b6 95       	lsr	r27
    1a0c:	a7 95       	ror	r26
    1a0e:	97 95       	ror	r25
    1a10:	87 95       	ror	r24
    1a12:	0a 94       	dec	r0
    1a14:	d2 f7       	brpl	.-12     	; 0x1a0a <__moddi3+0x8e0>
    1a16:	89 a7       	std	Y+41, r24	; 0x29
    1a18:	9a a7       	std	Y+42, r25	; 0x2a
    1a1a:	ab a7       	std	Y+43, r26	; 0x2b
    1a1c:	bc a7       	std	Y+44, r27	; 0x2c
    1a1e:	1d a6       	std	Y+45, r1	; 0x2d
    1a20:	1e a6       	std	Y+46, r1	; 0x2e
    1a22:	1f a6       	std	Y+47, r1	; 0x2f
    1a24:	18 aa       	std	Y+48, r1	; 0x30
    1a26:	89 8b       	std	Y+17, r24	; 0x11
    1a28:	8a a5       	ldd	r24, Y+42	; 0x2a
    1a2a:	8a 8b       	std	Y+18, r24	; 0x12
    1a2c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a2e:	8b 8b       	std	Y+19, r24	; 0x13
    1a30:	8c a5       	ldd	r24, Y+44	; 0x2c
    1a32:	8c 8b       	std	Y+20, r24	; 0x14
    1a34:	8d a5       	ldd	r24, Y+45	; 0x2d
    1a36:	8d 8b       	std	Y+21, r24	; 0x15
    1a38:	2f c3       	rjmp	.+1630   	; 0x2098 <__moddi3+0xf6e>
    1a3a:	6a 14       	cp	r6, r10
    1a3c:	7b 04       	cpc	r7, r11
    1a3e:	8c 04       	cpc	r8, r12
    1a40:	9d 04       	cpc	r9, r13
    1a42:	48 f4       	brcc	.+18     	; 0x1a56 <__moddi3+0x92c>
    1a44:	49 8b       	std	Y+17, r20	; 0x11
    1a46:	5a 8b       	std	Y+18, r21	; 0x12
    1a48:	6b 8b       	std	Y+19, r22	; 0x13
    1a4a:	7c 8b       	std	Y+20, r23	; 0x14
    1a4c:	8d 8b       	std	Y+21, r24	; 0x15
    1a4e:	9e 8b       	std	Y+22, r25	; 0x16
    1a50:	2f 8b       	std	Y+23, r18	; 0x17
    1a52:	38 8f       	std	Y+24, r19	; 0x18
    1a54:	27 c3       	rjmp	.+1614   	; 0x20a4 <__moddi3+0xf7a>
    1a56:	00 e0       	ldi	r16, 0x00	; 0
    1a58:	a0 16       	cp	r10, r16
    1a5a:	00 e0       	ldi	r16, 0x00	; 0
    1a5c:	b0 06       	cpc	r11, r16
    1a5e:	01 e0       	ldi	r16, 0x01	; 1
    1a60:	c0 06       	cpc	r12, r16
    1a62:	00 e0       	ldi	r16, 0x00	; 0
    1a64:	d0 06       	cpc	r13, r16
    1a66:	88 f4       	brcc	.+34     	; 0x1a8a <__moddi3+0x960>
    1a68:	1f ef       	ldi	r17, 0xFF	; 255
    1a6a:	a1 16       	cp	r10, r17
    1a6c:	b1 04       	cpc	r11, r1
    1a6e:	c1 04       	cpc	r12, r1
    1a70:	d1 04       	cpc	r13, r1
    1a72:	39 f0       	breq	.+14     	; 0x1a82 <__moddi3+0x958>
    1a74:	30 f0       	brcs	.+12     	; 0x1a82 <__moddi3+0x958>
    1a76:	28 e0       	ldi	r18, 0x08	; 8
    1a78:	e2 2e       	mov	r14, r18
    1a7a:	f1 2c       	mov	r15, r1
    1a7c:	01 2d       	mov	r16, r1
    1a7e:	11 2d       	mov	r17, r1
    1a80:	18 c0       	rjmp	.+48     	; 0x1ab2 <__moddi3+0x988>
    1a82:	ee 24       	eor	r14, r14
    1a84:	ff 24       	eor	r15, r15
    1a86:	87 01       	movw	r16, r14
    1a88:	14 c0       	rjmp	.+40     	; 0x1ab2 <__moddi3+0x988>
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	a2 16       	cp	r10, r18
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	b2 06       	cpc	r11, r18
    1a92:	20 e0       	ldi	r18, 0x00	; 0
    1a94:	c2 06       	cpc	r12, r18
    1a96:	21 e0       	ldi	r18, 0x01	; 1
    1a98:	d2 06       	cpc	r13, r18
    1a9a:	30 f0       	brcs	.+12     	; 0x1aa8 <__moddi3+0x97e>
    1a9c:	98 e1       	ldi	r25, 0x18	; 24
    1a9e:	e9 2e       	mov	r14, r25
    1aa0:	f1 2c       	mov	r15, r1
    1aa2:	01 2d       	mov	r16, r1
    1aa4:	11 2d       	mov	r17, r1
    1aa6:	05 c0       	rjmp	.+10     	; 0x1ab2 <__moddi3+0x988>
    1aa8:	80 e1       	ldi	r24, 0x10	; 16
    1aaa:	e8 2e       	mov	r14, r24
    1aac:	f1 2c       	mov	r15, r1
    1aae:	01 2d       	mov	r16, r1
    1ab0:	11 2d       	mov	r17, r1
    1ab2:	d6 01       	movw	r26, r12
    1ab4:	c5 01       	movw	r24, r10
    1ab6:	0e 2c       	mov	r0, r14
    1ab8:	04 c0       	rjmp	.+8      	; 0x1ac2 <__moddi3+0x998>
    1aba:	b6 95       	lsr	r27
    1abc:	a7 95       	ror	r26
    1abe:	97 95       	ror	r25
    1ac0:	87 95       	ror	r24
    1ac2:	0a 94       	dec	r0
    1ac4:	d2 f7       	brpl	.-12     	; 0x1aba <__moddi3+0x990>
    1ac6:	88 59       	subi	r24, 0x98	; 152
    1ac8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aca:	dc 01       	movw	r26, r24
    1acc:	2c 91       	ld	r18, X
    1ace:	80 e2       	ldi	r24, 0x20	; 32
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	a0 e0       	ldi	r26, 0x00	; 0
    1ad4:	b0 e0       	ldi	r27, 0x00	; 0
    1ad6:	8e 19       	sub	r24, r14
    1ad8:	9f 09       	sbc	r25, r15
    1ada:	a0 0b       	sbc	r26, r16
    1adc:	b1 0b       	sbc	r27, r17
    1ade:	82 1b       	sub	r24, r18
    1ae0:	91 09       	sbc	r25, r1
    1ae2:	a1 09       	sbc	r26, r1
    1ae4:	b1 09       	sbc	r27, r1
    1ae6:	00 97       	sbiw	r24, 0x00	; 0
    1ae8:	a1 05       	cpc	r26, r1
    1aea:	b1 05       	cpc	r27, r1
    1aec:	09 f0       	breq	.+2      	; 0x1af0 <__moddi3+0x9c6>
    1aee:	59 c0       	rjmp	.+178    	; 0x1ba2 <__moddi3+0xa78>
    1af0:	a6 14       	cp	r10, r6
    1af2:	b7 04       	cpc	r11, r7
    1af4:	c8 04       	cpc	r12, r8
    1af6:	d9 04       	cpc	r13, r9
    1af8:	70 f0       	brcs	.+28     	; 0x1b16 <__moddi3+0x9ec>
    1afa:	e8 96       	adiw	r28, 0x38	; 56
    1afc:	ec ac       	ldd	r14, Y+60	; 0x3c
    1afe:	fd ac       	ldd	r15, Y+61	; 0x3d
    1b00:	0e ad       	ldd	r16, Y+62	; 0x3e
    1b02:	1f ad       	ldd	r17, Y+63	; 0x3f
    1b04:	e8 97       	sbiw	r28, 0x38	; 56
    1b06:	e2 14       	cp	r14, r2
    1b08:	f3 04       	cpc	r15, r3
    1b0a:	04 05       	cpc	r16, r4
    1b0c:	15 05       	cpc	r17, r5
    1b0e:	18 f4       	brcc	.+6      	; 0x1b16 <__moddi3+0x9ec>
    1b10:	d8 01       	movw	r26, r16
    1b12:	c7 01       	movw	r24, r14
    1b14:	2f c0       	rjmp	.+94     	; 0x1b74 <__moddi3+0xa4a>
    1b16:	e8 96       	adiw	r28, 0x38	; 56
    1b18:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b1a:	9d ad       	ldd	r25, Y+61	; 0x3d
    1b1c:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b1e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b20:	e8 97       	sbiw	r28, 0x38	; 56
    1b22:	82 19       	sub	r24, r2
    1b24:	93 09       	sbc	r25, r3
    1b26:	a4 09       	sbc	r26, r4
    1b28:	b5 09       	sbc	r27, r5
    1b2a:	a4 01       	movw	r20, r8
    1b2c:	93 01       	movw	r18, r6
    1b2e:	2a 19       	sub	r18, r10
    1b30:	3b 09       	sbc	r19, r11
    1b32:	4c 09       	sbc	r20, r12
    1b34:	5d 09       	sbc	r21, r13
    1b36:	aa 24       	eor	r10, r10
    1b38:	bb 24       	eor	r11, r11
    1b3a:	65 01       	movw	r12, r10
    1b3c:	e8 96       	adiw	r28, 0x38	; 56
    1b3e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1b40:	7d ac       	ldd	r7, Y+61	; 0x3d
    1b42:	8e ac       	ldd	r8, Y+62	; 0x3e
    1b44:	9f ac       	ldd	r9, Y+63	; 0x3f
    1b46:	e8 97       	sbiw	r28, 0x38	; 56
    1b48:	68 16       	cp	r6, r24
    1b4a:	79 06       	cpc	r7, r25
    1b4c:	8a 06       	cpc	r8, r26
    1b4e:	9b 06       	cpc	r9, r27
    1b50:	28 f4       	brcc	.+10     	; 0x1b5c <__moddi3+0xa32>
    1b52:	11 e0       	ldi	r17, 0x01	; 1
    1b54:	a1 2e       	mov	r10, r17
    1b56:	b1 2c       	mov	r11, r1
    1b58:	c1 2c       	mov	r12, r1
    1b5a:	d1 2c       	mov	r13, r1
    1b5c:	79 01       	movw	r14, r18
    1b5e:	8a 01       	movw	r16, r20
    1b60:	ea 18       	sub	r14, r10
    1b62:	fb 08       	sbc	r15, r11
    1b64:	0c 09       	sbc	r16, r12
    1b66:	1d 09       	sbc	r17, r13
    1b68:	61 96       	adiw	r28, 0x11	; 17
    1b6a:	ec ae       	std	Y+60, r14	; 0x3c
    1b6c:	fd ae       	std	Y+61, r15	; 0x3d
    1b6e:	0e af       	std	Y+62, r16	; 0x3e
    1b70:	1f af       	std	Y+63, r17	; 0x3f
    1b72:	61 97       	sbiw	r28, 0x11	; 17
    1b74:	89 a7       	std	Y+41, r24	; 0x29
    1b76:	9a a7       	std	Y+42, r25	; 0x2a
    1b78:	ab a7       	std	Y+43, r26	; 0x2b
    1b7a:	bc a7       	std	Y+44, r27	; 0x2c
    1b7c:	61 96       	adiw	r28, 0x11	; 17
    1b7e:	0c ad       	ldd	r16, Y+60	; 0x3c
    1b80:	1d ad       	ldd	r17, Y+61	; 0x3d
    1b82:	2e ad       	ldd	r18, Y+62	; 0x3e
    1b84:	3f ad       	ldd	r19, Y+63	; 0x3f
    1b86:	61 97       	sbiw	r28, 0x11	; 17
    1b88:	0d a7       	std	Y+45, r16	; 0x2d
    1b8a:	1e a7       	std	Y+46, r17	; 0x2e
    1b8c:	2f a7       	std	Y+47, r18	; 0x2f
    1b8e:	38 ab       	std	Y+48, r19	; 0x30
    1b90:	89 8b       	std	Y+17, r24	; 0x11
    1b92:	8a a5       	ldd	r24, Y+42	; 0x2a
    1b94:	8a 8b       	std	Y+18, r24	; 0x12
    1b96:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b98:	8b 8b       	std	Y+19, r24	; 0x13
    1b9a:	8c a5       	ldd	r24, Y+44	; 0x2c
    1b9c:	8c 8b       	std	Y+20, r24	; 0x14
    1b9e:	0d 8b       	std	Y+21, r16	; 0x15
    1ba0:	7b c2       	rjmp	.+1270   	; 0x2098 <__moddi3+0xf6e>
    1ba2:	e3 96       	adiw	r28, 0x33	; 51
    1ba4:	8f af       	std	Y+63, r24	; 0x3f
    1ba6:	e3 97       	sbiw	r28, 0x33	; 51
    1ba8:	a6 01       	movw	r20, r12
    1baa:	95 01       	movw	r18, r10
    1bac:	08 2e       	mov	r0, r24
    1bae:	04 c0       	rjmp	.+8      	; 0x1bb8 <__moddi3+0xa8e>
    1bb0:	22 0f       	add	r18, r18
    1bb2:	33 1f       	adc	r19, r19
    1bb4:	44 1f       	adc	r20, r20
    1bb6:	55 1f       	adc	r21, r21
    1bb8:	0a 94       	dec	r0
    1bba:	d2 f7       	brpl	.-12     	; 0x1bb0 <__moddi3+0xa86>
    1bbc:	10 e2       	ldi	r17, 0x20	; 32
    1bbe:	18 1b       	sub	r17, r24
    1bc0:	e2 96       	adiw	r28, 0x32	; 50
    1bc2:	1f af       	std	Y+63, r17	; 0x3f
    1bc4:	e2 97       	sbiw	r28, 0x32	; 50
    1bc6:	d2 01       	movw	r26, r4
    1bc8:	c1 01       	movw	r24, r2
    1bca:	01 2e       	mov	r0, r17
    1bcc:	04 c0       	rjmp	.+8      	; 0x1bd6 <__moddi3+0xaac>
    1bce:	b6 95       	lsr	r27
    1bd0:	a7 95       	ror	r26
    1bd2:	97 95       	ror	r25
    1bd4:	87 95       	ror	r24
    1bd6:	0a 94       	dec	r0
    1bd8:	d2 f7       	brpl	.-12     	; 0x1bce <__moddi3+0xaa4>
    1bda:	5c 01       	movw	r10, r24
    1bdc:	6d 01       	movw	r12, r26
    1bde:	a2 2a       	or	r10, r18
    1be0:	b3 2a       	or	r11, r19
    1be2:	c4 2a       	or	r12, r20
    1be4:	d5 2a       	or	r13, r21
    1be6:	25 96       	adiw	r28, 0x05	; 5
    1be8:	ac ae       	std	Y+60, r10	; 0x3c
    1bea:	bd ae       	std	Y+61, r11	; 0x3d
    1bec:	ce ae       	std	Y+62, r12	; 0x3e
    1bee:	df ae       	std	Y+63, r13	; 0x3f
    1bf0:	25 97       	sbiw	r28, 0x05	; 5
    1bf2:	72 01       	movw	r14, r4
    1bf4:	61 01       	movw	r12, r2
    1bf6:	e3 96       	adiw	r28, 0x33	; 51
    1bf8:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bfa:	e3 97       	sbiw	r28, 0x33	; 51
    1bfc:	04 c0       	rjmp	.+8      	; 0x1c06 <__moddi3+0xadc>
    1bfe:	cc 0c       	add	r12, r12
    1c00:	dd 1c       	adc	r13, r13
    1c02:	ee 1c       	adc	r14, r14
    1c04:	ff 1c       	adc	r15, r15
    1c06:	0a 94       	dec	r0
    1c08:	d2 f7       	brpl	.-12     	; 0x1bfe <__moddi3+0xad4>
    1c0a:	21 96       	adiw	r28, 0x01	; 1
    1c0c:	cc ae       	std	Y+60, r12	; 0x3c
    1c0e:	dd ae       	std	Y+61, r13	; 0x3d
    1c10:	ee ae       	std	Y+62, r14	; 0x3e
    1c12:	ff ae       	std	Y+63, r15	; 0x3f
    1c14:	21 97       	sbiw	r28, 0x01	; 1
    1c16:	64 01       	movw	r12, r8
    1c18:	53 01       	movw	r10, r6
    1c1a:	01 2e       	mov	r0, r17
    1c1c:	04 c0       	rjmp	.+8      	; 0x1c26 <__moddi3+0xafc>
    1c1e:	d6 94       	lsr	r13
    1c20:	c7 94       	ror	r12
    1c22:	b7 94       	ror	r11
    1c24:	a7 94       	ror	r10
    1c26:	0a 94       	dec	r0
    1c28:	d2 f7       	brpl	.-12     	; 0x1c1e <__moddi3+0xaf4>
    1c2a:	a4 01       	movw	r20, r8
    1c2c:	93 01       	movw	r18, r6
    1c2e:	e3 96       	adiw	r28, 0x33	; 51
    1c30:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c32:	e3 97       	sbiw	r28, 0x33	; 51
    1c34:	04 c0       	rjmp	.+8      	; 0x1c3e <__moddi3+0xb14>
    1c36:	22 0f       	add	r18, r18
    1c38:	33 1f       	adc	r19, r19
    1c3a:	44 1f       	adc	r20, r20
    1c3c:	55 1f       	adc	r21, r21
    1c3e:	0a 94       	dec	r0
    1c40:	d2 f7       	brpl	.-12     	; 0x1c36 <__moddi3+0xb0c>
    1c42:	e8 96       	adiw	r28, 0x38	; 56
    1c44:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c46:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c48:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c4a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c4c:	e8 97       	sbiw	r28, 0x38	; 56
    1c4e:	04 c0       	rjmp	.+8      	; 0x1c58 <__moddi3+0xb2e>
    1c50:	b6 95       	lsr	r27
    1c52:	a7 95       	ror	r26
    1c54:	97 95       	ror	r25
    1c56:	87 95       	ror	r24
    1c58:	1a 95       	dec	r17
    1c5a:	d2 f7       	brpl	.-12     	; 0x1c50 <__moddi3+0xb26>
    1c5c:	7c 01       	movw	r14, r24
    1c5e:	8d 01       	movw	r16, r26
    1c60:	e2 2a       	or	r14, r18
    1c62:	f3 2a       	or	r15, r19
    1c64:	04 2b       	or	r16, r20
    1c66:	15 2b       	or	r17, r21
    1c68:	e9 ae       	std	Y+57, r14	; 0x39
    1c6a:	fa ae       	std	Y+58, r15	; 0x3a
    1c6c:	0b af       	std	Y+59, r16	; 0x3b
    1c6e:	1c af       	std	Y+60, r17	; 0x3c
    1c70:	e8 96       	adiw	r28, 0x38	; 56
    1c72:	0c ad       	ldd	r16, Y+60	; 0x3c
    1c74:	1d ad       	ldd	r17, Y+61	; 0x3d
    1c76:	2e ad       	ldd	r18, Y+62	; 0x3e
    1c78:	3f ad       	ldd	r19, Y+63	; 0x3f
    1c7a:	e8 97       	sbiw	r28, 0x38	; 56
    1c7c:	e3 96       	adiw	r28, 0x33	; 51
    1c7e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c80:	e3 97       	sbiw	r28, 0x33	; 51
    1c82:	04 c0       	rjmp	.+8      	; 0x1c8c <__moddi3+0xb62>
    1c84:	00 0f       	add	r16, r16
    1c86:	11 1f       	adc	r17, r17
    1c88:	22 1f       	adc	r18, r18
    1c8a:	33 1f       	adc	r19, r19
    1c8c:	0a 94       	dec	r0
    1c8e:	d2 f7       	brpl	.-12     	; 0x1c84 <__moddi3+0xb5a>
    1c90:	0d ab       	std	Y+53, r16	; 0x35
    1c92:	1e ab       	std	Y+54, r17	; 0x36
    1c94:	2f ab       	std	Y+55, r18	; 0x37
    1c96:	38 af       	std	Y+56, r19	; 0x38
    1c98:	25 96       	adiw	r28, 0x05	; 5
    1c9a:	2c ad       	ldd	r18, Y+60	; 0x3c
    1c9c:	3d ad       	ldd	r19, Y+61	; 0x3d
    1c9e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ca0:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ca2:	25 97       	sbiw	r28, 0x05	; 5
    1ca4:	3a 01       	movw	r6, r20
    1ca6:	88 24       	eor	r8, r8
    1ca8:	99 24       	eor	r9, r9
    1caa:	40 70       	andi	r20, 0x00	; 0
    1cac:	50 70       	andi	r21, 0x00	; 0
    1cae:	a5 96       	adiw	r28, 0x25	; 37
    1cb0:	2c af       	std	Y+60, r18	; 0x3c
    1cb2:	3d af       	std	Y+61, r19	; 0x3d
    1cb4:	4e af       	std	Y+62, r20	; 0x3e
    1cb6:	5f af       	std	Y+63, r21	; 0x3f
    1cb8:	a5 97       	sbiw	r28, 0x25	; 37
    1cba:	c6 01       	movw	r24, r12
    1cbc:	b5 01       	movw	r22, r10
    1cbe:	a4 01       	movw	r20, r8
    1cc0:	93 01       	movw	r18, r6
    1cc2:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1cc6:	7b 01       	movw	r14, r22
    1cc8:	8c 01       	movw	r16, r24
    1cca:	c6 01       	movw	r24, r12
    1ccc:	b5 01       	movw	r22, r10
    1cce:	a4 01       	movw	r20, r8
    1cd0:	93 01       	movw	r18, r6
    1cd2:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1cd6:	c9 01       	movw	r24, r18
    1cd8:	da 01       	movw	r26, r20
    1cda:	1c 01       	movw	r2, r24
    1cdc:	2d 01       	movw	r4, r26
    1cde:	c2 01       	movw	r24, r4
    1ce0:	b1 01       	movw	r22, r2
    1ce2:	a5 96       	adiw	r28, 0x25	; 37
    1ce4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ce6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ce8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1cea:	5f ad       	ldd	r21, Y+63	; 0x3f
    1cec:	a5 97       	sbiw	r28, 0x25	; 37
    1cee:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1cf2:	9b 01       	movw	r18, r22
    1cf4:	ac 01       	movw	r20, r24
    1cf6:	87 01       	movw	r16, r14
    1cf8:	ff 24       	eor	r15, r15
    1cfa:	ee 24       	eor	r14, r14
    1cfc:	a9 ac       	ldd	r10, Y+57	; 0x39
    1cfe:	ba ac       	ldd	r11, Y+58	; 0x3a
    1d00:	cb ac       	ldd	r12, Y+59	; 0x3b
    1d02:	dc ac       	ldd	r13, Y+60	; 0x3c
    1d04:	c6 01       	movw	r24, r12
    1d06:	aa 27       	eor	r26, r26
    1d08:	bb 27       	eor	r27, r27
    1d0a:	57 01       	movw	r10, r14
    1d0c:	68 01       	movw	r12, r16
    1d0e:	a8 2a       	or	r10, r24
    1d10:	b9 2a       	or	r11, r25
    1d12:	ca 2a       	or	r12, r26
    1d14:	db 2a       	or	r13, r27
    1d16:	a2 16       	cp	r10, r18
    1d18:	b3 06       	cpc	r11, r19
    1d1a:	c4 06       	cpc	r12, r20
    1d1c:	d5 06       	cpc	r13, r21
    1d1e:	10 f5       	brcc	.+68     	; 0x1d64 <__moddi3+0xc3a>
    1d20:	08 94       	sec
    1d22:	21 08       	sbc	r2, r1
    1d24:	31 08       	sbc	r3, r1
    1d26:	41 08       	sbc	r4, r1
    1d28:	51 08       	sbc	r5, r1
    1d2a:	25 96       	adiw	r28, 0x05	; 5
    1d2c:	ec ac       	ldd	r14, Y+60	; 0x3c
    1d2e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1d30:	0e ad       	ldd	r16, Y+62	; 0x3e
    1d32:	1f ad       	ldd	r17, Y+63	; 0x3f
    1d34:	25 97       	sbiw	r28, 0x05	; 5
    1d36:	ae 0c       	add	r10, r14
    1d38:	bf 1c       	adc	r11, r15
    1d3a:	c0 1e       	adc	r12, r16
    1d3c:	d1 1e       	adc	r13, r17
    1d3e:	ae 14       	cp	r10, r14
    1d40:	bf 04       	cpc	r11, r15
    1d42:	c0 06       	cpc	r12, r16
    1d44:	d1 06       	cpc	r13, r17
    1d46:	70 f0       	brcs	.+28     	; 0x1d64 <__moddi3+0xc3a>
    1d48:	a2 16       	cp	r10, r18
    1d4a:	b3 06       	cpc	r11, r19
    1d4c:	c4 06       	cpc	r12, r20
    1d4e:	d5 06       	cpc	r13, r21
    1d50:	48 f4       	brcc	.+18     	; 0x1d64 <__moddi3+0xc3a>
    1d52:	08 94       	sec
    1d54:	21 08       	sbc	r2, r1
    1d56:	31 08       	sbc	r3, r1
    1d58:	41 08       	sbc	r4, r1
    1d5a:	51 08       	sbc	r5, r1
    1d5c:	ae 0c       	add	r10, r14
    1d5e:	bf 1c       	adc	r11, r15
    1d60:	c0 1e       	adc	r12, r16
    1d62:	d1 1e       	adc	r13, r17
    1d64:	a2 1a       	sub	r10, r18
    1d66:	b3 0a       	sbc	r11, r19
    1d68:	c4 0a       	sbc	r12, r20
    1d6a:	d5 0a       	sbc	r13, r21
    1d6c:	c6 01       	movw	r24, r12
    1d6e:	b5 01       	movw	r22, r10
    1d70:	a4 01       	movw	r20, r8
    1d72:	93 01       	movw	r18, r6
    1d74:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1d78:	7b 01       	movw	r14, r22
    1d7a:	8c 01       	movw	r16, r24
    1d7c:	c6 01       	movw	r24, r12
    1d7e:	b5 01       	movw	r22, r10
    1d80:	a4 01       	movw	r20, r8
    1d82:	93 01       	movw	r18, r6
    1d84:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <__udivmodsi4>
    1d88:	c9 01       	movw	r24, r18
    1d8a:	da 01       	movw	r26, r20
    1d8c:	3c 01       	movw	r6, r24
    1d8e:	4d 01       	movw	r8, r26
    1d90:	c4 01       	movw	r24, r8
    1d92:	b3 01       	movw	r22, r6
    1d94:	a5 96       	adiw	r28, 0x25	; 37
    1d96:	2c ad       	ldd	r18, Y+60	; 0x3c
    1d98:	3d ad       	ldd	r19, Y+61	; 0x3d
    1d9a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1d9c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1d9e:	a5 97       	sbiw	r28, 0x25	; 37
    1da0:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1da4:	9b 01       	movw	r18, r22
    1da6:	ac 01       	movw	r20, r24
    1da8:	87 01       	movw	r16, r14
    1daa:	ff 24       	eor	r15, r15
    1dac:	ee 24       	eor	r14, r14
    1dae:	89 ad       	ldd	r24, Y+57	; 0x39
    1db0:	9a ad       	ldd	r25, Y+58	; 0x3a
    1db2:	ab ad       	ldd	r26, Y+59	; 0x3b
    1db4:	bc ad       	ldd	r27, Y+60	; 0x3c
    1db6:	a0 70       	andi	r26, 0x00	; 0
    1db8:	b0 70       	andi	r27, 0x00	; 0
    1dba:	57 01       	movw	r10, r14
    1dbc:	68 01       	movw	r12, r16
    1dbe:	a8 2a       	or	r10, r24
    1dc0:	b9 2a       	or	r11, r25
    1dc2:	ca 2a       	or	r12, r26
    1dc4:	db 2a       	or	r13, r27
    1dc6:	a2 16       	cp	r10, r18
    1dc8:	b3 06       	cpc	r11, r19
    1dca:	c4 06       	cpc	r12, r20
    1dcc:	d5 06       	cpc	r13, r21
    1dce:	10 f5       	brcc	.+68     	; 0x1e14 <__moddi3+0xcea>
    1dd0:	08 94       	sec
    1dd2:	61 08       	sbc	r6, r1
    1dd4:	71 08       	sbc	r7, r1
    1dd6:	81 08       	sbc	r8, r1
    1dd8:	91 08       	sbc	r9, r1
    1dda:	25 96       	adiw	r28, 0x05	; 5
    1ddc:	6c ad       	ldd	r22, Y+60	; 0x3c
    1dde:	7d ad       	ldd	r23, Y+61	; 0x3d
    1de0:	8e ad       	ldd	r24, Y+62	; 0x3e
    1de2:	9f ad       	ldd	r25, Y+63	; 0x3f
    1de4:	25 97       	sbiw	r28, 0x05	; 5
    1de6:	a6 0e       	add	r10, r22
    1de8:	b7 1e       	adc	r11, r23
    1dea:	c8 1e       	adc	r12, r24
    1dec:	d9 1e       	adc	r13, r25
    1dee:	a6 16       	cp	r10, r22
    1df0:	b7 06       	cpc	r11, r23
    1df2:	c8 06       	cpc	r12, r24
    1df4:	d9 06       	cpc	r13, r25
    1df6:	70 f0       	brcs	.+28     	; 0x1e14 <__moddi3+0xcea>
    1df8:	a2 16       	cp	r10, r18
    1dfa:	b3 06       	cpc	r11, r19
    1dfc:	c4 06       	cpc	r12, r20
    1dfe:	d5 06       	cpc	r13, r21
    1e00:	48 f4       	brcc	.+18     	; 0x1e14 <__moddi3+0xcea>
    1e02:	08 94       	sec
    1e04:	61 08       	sbc	r6, r1
    1e06:	71 08       	sbc	r7, r1
    1e08:	81 08       	sbc	r8, r1
    1e0a:	91 08       	sbc	r9, r1
    1e0c:	a6 0e       	add	r10, r22
    1e0e:	b7 1e       	adc	r11, r23
    1e10:	c8 1e       	adc	r12, r24
    1e12:	d9 1e       	adc	r13, r25
    1e14:	d6 01       	movw	r26, r12
    1e16:	c5 01       	movw	r24, r10
    1e18:	82 1b       	sub	r24, r18
    1e1a:	93 0b       	sbc	r25, r19
    1e1c:	a4 0b       	sbc	r26, r20
    1e1e:	b5 0b       	sbc	r27, r21
    1e20:	89 ab       	std	Y+49, r24	; 0x31
    1e22:	9a ab       	std	Y+50, r25	; 0x32
    1e24:	ab ab       	std	Y+51, r26	; 0x33
    1e26:	bc ab       	std	Y+52, r27	; 0x34
    1e28:	d1 01       	movw	r26, r2
    1e2a:	99 27       	eor	r25, r25
    1e2c:	88 27       	eor	r24, r24
    1e2e:	84 01       	movw	r16, r8
    1e30:	73 01       	movw	r14, r6
    1e32:	e8 2a       	or	r14, r24
    1e34:	f9 2a       	or	r15, r25
    1e36:	0a 2b       	or	r16, r26
    1e38:	1b 2b       	or	r17, r27
    1e3a:	8f ef       	ldi	r24, 0xFF	; 255
    1e3c:	a8 2e       	mov	r10, r24
    1e3e:	8f ef       	ldi	r24, 0xFF	; 255
    1e40:	b8 2e       	mov	r11, r24
    1e42:	c1 2c       	mov	r12, r1
    1e44:	d1 2c       	mov	r13, r1
    1e46:	ae 20       	and	r10, r14
    1e48:	bf 20       	and	r11, r15
    1e4a:	c0 22       	and	r12, r16
    1e4c:	d1 22       	and	r13, r17
    1e4e:	78 01       	movw	r14, r16
    1e50:	00 27       	eor	r16, r16
    1e52:	11 27       	eor	r17, r17
    1e54:	21 96       	adiw	r28, 0x01	; 1
    1e56:	6c ac       	ldd	r6, Y+60	; 0x3c
    1e58:	7d ac       	ldd	r7, Y+61	; 0x3d
    1e5a:	8e ac       	ldd	r8, Y+62	; 0x3e
    1e5c:	9f ac       	ldd	r9, Y+63	; 0x3f
    1e5e:	21 97       	sbiw	r28, 0x01	; 1
    1e60:	2f ef       	ldi	r18, 0xFF	; 255
    1e62:	3f ef       	ldi	r19, 0xFF	; 255
    1e64:	40 e0       	ldi	r20, 0x00	; 0
    1e66:	50 e0       	ldi	r21, 0x00	; 0
    1e68:	62 22       	and	r6, r18
    1e6a:	73 22       	and	r7, r19
    1e6c:	84 22       	and	r8, r20
    1e6e:	95 22       	and	r9, r21
    1e70:	21 96       	adiw	r28, 0x01	; 1
    1e72:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e74:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e76:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e78:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e7a:	21 97       	sbiw	r28, 0x01	; 1
    1e7c:	ac 01       	movw	r20, r24
    1e7e:	66 27       	eor	r22, r22
    1e80:	77 27       	eor	r23, r23
    1e82:	ad 96       	adiw	r28, 0x2d	; 45
    1e84:	4c af       	std	Y+60, r20	; 0x3c
    1e86:	5d af       	std	Y+61, r21	; 0x3d
    1e88:	6e af       	std	Y+62, r22	; 0x3e
    1e8a:	7f af       	std	Y+63, r23	; 0x3f
    1e8c:	ad 97       	sbiw	r28, 0x2d	; 45
    1e8e:	c6 01       	movw	r24, r12
    1e90:	b5 01       	movw	r22, r10
    1e92:	a4 01       	movw	r20, r8
    1e94:	93 01       	movw	r18, r6
    1e96:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1e9a:	a9 96       	adiw	r28, 0x29	; 41
    1e9c:	6c af       	std	Y+60, r22	; 0x3c
    1e9e:	7d af       	std	Y+61, r23	; 0x3d
    1ea0:	8e af       	std	Y+62, r24	; 0x3e
    1ea2:	9f af       	std	Y+63, r25	; 0x3f
    1ea4:	a9 97       	sbiw	r28, 0x29	; 41
    1ea6:	c6 01       	movw	r24, r12
    1ea8:	b5 01       	movw	r22, r10
    1eaa:	ad 96       	adiw	r28, 0x2d	; 45
    1eac:	2c ad       	ldd	r18, Y+60	; 0x3c
    1eae:	3d ad       	ldd	r19, Y+61	; 0x3d
    1eb0:	4e ad       	ldd	r20, Y+62	; 0x3e
    1eb2:	5f ad       	ldd	r21, Y+63	; 0x3f
    1eb4:	ad 97       	sbiw	r28, 0x2d	; 45
    1eb6:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1eba:	1b 01       	movw	r2, r22
    1ebc:	2c 01       	movw	r4, r24
    1ebe:	c8 01       	movw	r24, r16
    1ec0:	b7 01       	movw	r22, r14
    1ec2:	a4 01       	movw	r20, r8
    1ec4:	93 01       	movw	r18, r6
    1ec6:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1eca:	5b 01       	movw	r10, r22
    1ecc:	6c 01       	movw	r12, r24
    1ece:	c8 01       	movw	r24, r16
    1ed0:	b7 01       	movw	r22, r14
    1ed2:	ad 96       	adiw	r28, 0x2d	; 45
    1ed4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ed6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ed8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1eda:	5f ad       	ldd	r21, Y+63	; 0x3f
    1edc:	ad 97       	sbiw	r28, 0x2d	; 45
    1ede:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <__mulsi3>
    1ee2:	7b 01       	movw	r14, r22
    1ee4:	8c 01       	movw	r16, r24
    1ee6:	a6 01       	movw	r20, r12
    1ee8:	95 01       	movw	r18, r10
    1eea:	22 0d       	add	r18, r2
    1eec:	33 1d       	adc	r19, r3
    1eee:	44 1d       	adc	r20, r4
    1ef0:	55 1d       	adc	r21, r5
    1ef2:	a9 96       	adiw	r28, 0x29	; 41
    1ef4:	6c ac       	ldd	r6, Y+60	; 0x3c
    1ef6:	7d ac       	ldd	r7, Y+61	; 0x3d
    1ef8:	8e ac       	ldd	r8, Y+62	; 0x3e
    1efa:	9f ac       	ldd	r9, Y+63	; 0x3f
    1efc:	a9 97       	sbiw	r28, 0x29	; 41
    1efe:	c4 01       	movw	r24, r8
    1f00:	aa 27       	eor	r26, r26
    1f02:	bb 27       	eor	r27, r27
    1f04:	28 0f       	add	r18, r24
    1f06:	39 1f       	adc	r19, r25
    1f08:	4a 1f       	adc	r20, r26
    1f0a:	5b 1f       	adc	r21, r27
    1f0c:	2a 15       	cp	r18, r10
    1f0e:	3b 05       	cpc	r19, r11
    1f10:	4c 05       	cpc	r20, r12
    1f12:	5d 05       	cpc	r21, r13
    1f14:	48 f4       	brcc	.+18     	; 0x1f28 <__moddi3+0xdfe>
    1f16:	81 2c       	mov	r8, r1
    1f18:	91 2c       	mov	r9, r1
    1f1a:	e1 e0       	ldi	r30, 0x01	; 1
    1f1c:	ae 2e       	mov	r10, r30
    1f1e:	b1 2c       	mov	r11, r1
    1f20:	e8 0c       	add	r14, r8
    1f22:	f9 1c       	adc	r15, r9
    1f24:	0a 1d       	adc	r16, r10
    1f26:	1b 1d       	adc	r17, r11
    1f28:	ca 01       	movw	r24, r20
    1f2a:	aa 27       	eor	r26, r26
    1f2c:	bb 27       	eor	r27, r27
    1f2e:	57 01       	movw	r10, r14
    1f30:	68 01       	movw	r12, r16
    1f32:	a8 0e       	add	r10, r24
    1f34:	b9 1e       	adc	r11, r25
    1f36:	ca 1e       	adc	r12, r26
    1f38:	db 1e       	adc	r13, r27
    1f3a:	a9 01       	movw	r20, r18
    1f3c:	33 27       	eor	r19, r19
    1f3e:	22 27       	eor	r18, r18
    1f40:	a9 96       	adiw	r28, 0x29	; 41
    1f42:	8c ad       	ldd	r24, Y+60	; 0x3c
    1f44:	9d ad       	ldd	r25, Y+61	; 0x3d
    1f46:	ae ad       	ldd	r26, Y+62	; 0x3e
    1f48:	bf ad       	ldd	r27, Y+63	; 0x3f
    1f4a:	a9 97       	sbiw	r28, 0x29	; 41
    1f4c:	a0 70       	andi	r26, 0x00	; 0
    1f4e:	b0 70       	andi	r27, 0x00	; 0
    1f50:	28 0f       	add	r18, r24
    1f52:	39 1f       	adc	r19, r25
    1f54:	4a 1f       	adc	r20, r26
    1f56:	5b 1f       	adc	r21, r27
    1f58:	e9 a8       	ldd	r14, Y+49	; 0x31
    1f5a:	fa a8       	ldd	r15, Y+50	; 0x32
    1f5c:	0b a9       	ldd	r16, Y+51	; 0x33
    1f5e:	1c a9       	ldd	r17, Y+52	; 0x34
    1f60:	ea 14       	cp	r14, r10
    1f62:	fb 04       	cpc	r15, r11
    1f64:	0c 05       	cpc	r16, r12
    1f66:	1d 05       	cpc	r17, r13
    1f68:	70 f0       	brcs	.+28     	; 0x1f86 <__moddi3+0xe5c>
    1f6a:	ae 14       	cp	r10, r14
    1f6c:	bf 04       	cpc	r11, r15
    1f6e:	c0 06       	cpc	r12, r16
    1f70:	d1 06       	cpc	r13, r17
    1f72:	89 f5       	brne	.+98     	; 0x1fd6 <__moddi3+0xeac>
    1f74:	6d a9       	ldd	r22, Y+53	; 0x35
    1f76:	7e a9       	ldd	r23, Y+54	; 0x36
    1f78:	8f a9       	ldd	r24, Y+55	; 0x37
    1f7a:	98 ad       	ldd	r25, Y+56	; 0x38
    1f7c:	62 17       	cp	r22, r18
    1f7e:	73 07       	cpc	r23, r19
    1f80:	84 07       	cpc	r24, r20
    1f82:	95 07       	cpc	r25, r21
    1f84:	40 f5       	brcc	.+80     	; 0x1fd6 <__moddi3+0xeac>
    1f86:	da 01       	movw	r26, r20
    1f88:	c9 01       	movw	r24, r18
    1f8a:	21 96       	adiw	r28, 0x01	; 1
    1f8c:	6c ac       	ldd	r6, Y+60	; 0x3c
    1f8e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1f90:	8e ac       	ldd	r8, Y+62	; 0x3e
    1f92:	9f ac       	ldd	r9, Y+63	; 0x3f
    1f94:	21 97       	sbiw	r28, 0x01	; 1
    1f96:	86 19       	sub	r24, r6
    1f98:	97 09       	sbc	r25, r7
    1f9a:	a8 09       	sbc	r26, r8
    1f9c:	b9 09       	sbc	r27, r9
    1f9e:	25 96       	adiw	r28, 0x05	; 5
    1fa0:	ec ac       	ldd	r14, Y+60	; 0x3c
    1fa2:	fd ac       	ldd	r15, Y+61	; 0x3d
    1fa4:	0e ad       	ldd	r16, Y+62	; 0x3e
    1fa6:	1f ad       	ldd	r17, Y+63	; 0x3f
    1fa8:	25 97       	sbiw	r28, 0x05	; 5
    1faa:	ae 18       	sub	r10, r14
    1fac:	bf 08       	sbc	r11, r15
    1fae:	c0 0a       	sbc	r12, r16
    1fb0:	d1 0a       	sbc	r13, r17
    1fb2:	ee 24       	eor	r14, r14
    1fb4:	ff 24       	eor	r15, r15
    1fb6:	87 01       	movw	r16, r14
    1fb8:	28 17       	cp	r18, r24
    1fba:	39 07       	cpc	r19, r25
    1fbc:	4a 07       	cpc	r20, r26
    1fbe:	5b 07       	cpc	r21, r27
    1fc0:	28 f4       	brcc	.+10     	; 0x1fcc <__moddi3+0xea2>
    1fc2:	21 e0       	ldi	r18, 0x01	; 1
    1fc4:	e2 2e       	mov	r14, r18
    1fc6:	f1 2c       	mov	r15, r1
    1fc8:	01 2d       	mov	r16, r1
    1fca:	11 2d       	mov	r17, r1
    1fcc:	ae 18       	sub	r10, r14
    1fce:	bf 08       	sbc	r11, r15
    1fd0:	c0 0a       	sbc	r12, r16
    1fd2:	d1 0a       	sbc	r13, r17
    1fd4:	02 c0       	rjmp	.+4      	; 0x1fda <__moddi3+0xeb0>
    1fd6:	da 01       	movw	r26, r20
    1fd8:	c9 01       	movw	r24, r18
    1fda:	6d a8       	ldd	r6, Y+53	; 0x35
    1fdc:	7e a8       	ldd	r7, Y+54	; 0x36
    1fde:	8f a8       	ldd	r8, Y+55	; 0x37
    1fe0:	98 ac       	ldd	r9, Y+56	; 0x38
    1fe2:	68 1a       	sub	r6, r24
    1fe4:	79 0a       	sbc	r7, r25
    1fe6:	8a 0a       	sbc	r8, r26
    1fe8:	9b 0a       	sbc	r9, r27
    1fea:	09 a9       	ldd	r16, Y+49	; 0x31
    1fec:	1a a9       	ldd	r17, Y+50	; 0x32
    1fee:	2b a9       	ldd	r18, Y+51	; 0x33
    1ff0:	3c a9       	ldd	r19, Y+52	; 0x34
    1ff2:	0a 19       	sub	r16, r10
    1ff4:	1b 09       	sbc	r17, r11
    1ff6:	2c 09       	sbc	r18, r12
    1ff8:	3d 09       	sbc	r19, r13
    1ffa:	58 01       	movw	r10, r16
    1ffc:	69 01       	movw	r12, r18
    1ffe:	22 24       	eor	r2, r2
    2000:	33 24       	eor	r3, r3
    2002:	21 01       	movw	r4, r2
    2004:	2d a9       	ldd	r18, Y+53	; 0x35
    2006:	3e a9       	ldd	r19, Y+54	; 0x36
    2008:	4f a9       	ldd	r20, Y+55	; 0x37
    200a:	58 ad       	ldd	r21, Y+56	; 0x38
    200c:	26 15       	cp	r18, r6
    200e:	37 05       	cpc	r19, r7
    2010:	48 05       	cpc	r20, r8
    2012:	59 05       	cpc	r21, r9
    2014:	28 f4       	brcc	.+10     	; 0x2020 <__moddi3+0xef6>
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	28 2e       	mov	r2, r24
    201a:	31 2c       	mov	r3, r1
    201c:	41 2c       	mov	r4, r1
    201e:	51 2c       	mov	r5, r1
    2020:	86 01       	movw	r16, r12
    2022:	75 01       	movw	r14, r10
    2024:	e2 18       	sub	r14, r2
    2026:	f3 08       	sbc	r15, r3
    2028:	04 09       	sbc	r16, r4
    202a:	15 09       	sbc	r17, r5
    202c:	a8 01       	movw	r20, r16
    202e:	97 01       	movw	r18, r14
    2030:	e2 96       	adiw	r28, 0x32	; 50
    2032:	0f ac       	ldd	r0, Y+63	; 0x3f
    2034:	e2 97       	sbiw	r28, 0x32	; 50
    2036:	04 c0       	rjmp	.+8      	; 0x2040 <__moddi3+0xf16>
    2038:	22 0f       	add	r18, r18
    203a:	33 1f       	adc	r19, r19
    203c:	44 1f       	adc	r20, r20
    203e:	55 1f       	adc	r21, r21
    2040:	0a 94       	dec	r0
    2042:	d2 f7       	brpl	.-12     	; 0x2038 <__moddi3+0xf0e>
    2044:	d4 01       	movw	r26, r8
    2046:	c3 01       	movw	r24, r6
    2048:	e3 96       	adiw	r28, 0x33	; 51
    204a:	0f ac       	ldd	r0, Y+63	; 0x3f
    204c:	e3 97       	sbiw	r28, 0x33	; 51
    204e:	04 c0       	rjmp	.+8      	; 0x2058 <__moddi3+0xf2e>
    2050:	b6 95       	lsr	r27
    2052:	a7 95       	ror	r26
    2054:	97 95       	ror	r25
    2056:	87 95       	ror	r24
    2058:	0a 94       	dec	r0
    205a:	d2 f7       	brpl	.-12     	; 0x2050 <__moddi3+0xf26>
    205c:	28 2b       	or	r18, r24
    205e:	39 2b       	or	r19, r25
    2060:	4a 2b       	or	r20, r26
    2062:	5b 2b       	or	r21, r27
    2064:	29 a7       	std	Y+41, r18	; 0x29
    2066:	3a a7       	std	Y+42, r19	; 0x2a
    2068:	4b a7       	std	Y+43, r20	; 0x2b
    206a:	5c a7       	std	Y+44, r21	; 0x2c
    206c:	e3 96       	adiw	r28, 0x33	; 51
    206e:	0f ac       	ldd	r0, Y+63	; 0x3f
    2070:	e3 97       	sbiw	r28, 0x33	; 51
    2072:	04 c0       	rjmp	.+8      	; 0x207c <__moddi3+0xf52>
    2074:	16 95       	lsr	r17
    2076:	07 95       	ror	r16
    2078:	f7 94       	ror	r15
    207a:	e7 94       	ror	r14
    207c:	0a 94       	dec	r0
    207e:	d2 f7       	brpl	.-12     	; 0x2074 <__moddi3+0xf4a>
    2080:	ed a6       	std	Y+45, r14	; 0x2d
    2082:	fe a6       	std	Y+46, r15	; 0x2e
    2084:	0f a7       	std	Y+47, r16	; 0x2f
    2086:	18 ab       	std	Y+48, r17	; 0x30
    2088:	29 8b       	std	Y+17, r18	; 0x11
    208a:	8a a5       	ldd	r24, Y+42	; 0x2a
    208c:	8a 8b       	std	Y+18, r24	; 0x12
    208e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2090:	8b 8b       	std	Y+19, r24	; 0x13
    2092:	8c a5       	ldd	r24, Y+44	; 0x2c
    2094:	8c 8b       	std	Y+20, r24	; 0x14
    2096:	ed 8a       	std	Y+21, r14	; 0x15
    2098:	8e a5       	ldd	r24, Y+46	; 0x2e
    209a:	8e 8b       	std	Y+22, r24	; 0x16
    209c:	8f a5       	ldd	r24, Y+47	; 0x2f
    209e:	8f 8b       	std	Y+23, r24	; 0x17
    20a0:	88 a9       	ldd	r24, Y+48	; 0x30
    20a2:	88 8f       	std	Y+24, r24	; 0x18
    20a4:	e1 96       	adiw	r28, 0x31	; 49
    20a6:	4c ad       	ldd	r20, Y+60	; 0x3c
    20a8:	5d ad       	ldd	r21, Y+61	; 0x3d
    20aa:	6e ad       	ldd	r22, Y+62	; 0x3e
    20ac:	7f ad       	ldd	r23, Y+63	; 0x3f
    20ae:	e1 97       	sbiw	r28, 0x31	; 49
    20b0:	41 15       	cp	r20, r1
    20b2:	51 05       	cpc	r21, r1
    20b4:	61 05       	cpc	r22, r1
    20b6:	71 05       	cpc	r23, r1
    20b8:	09 f4       	brne	.+2      	; 0x20bc <__moddi3+0xf92>
    20ba:	67 c0       	rjmp	.+206    	; 0x218a <__moddi3+0x1060>
    20bc:	89 89       	ldd	r24, Y+17	; 0x11
    20be:	2a 89       	ldd	r18, Y+18	; 0x12
    20c0:	3b 89       	ldd	r19, Y+19	; 0x13
    20c2:	4c 89       	ldd	r20, Y+20	; 0x14
    20c4:	5d 89       	ldd	r21, Y+21	; 0x15
    20c6:	ae 89       	ldd	r26, Y+22	; 0x16
    20c8:	bf 89       	ldd	r27, Y+23	; 0x17
    20ca:	18 8d       	ldd	r17, Y+24	; 0x18
    20cc:	f8 2f       	mov	r31, r24
    20ce:	f1 95       	neg	r31
    20d0:	91 e0       	ldi	r25, 0x01	; 1
    20d2:	1f 16       	cp	r1, r31
    20d4:	08 f0       	brcs	.+2      	; 0x20d8 <__moddi3+0xfae>
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	82 2f       	mov	r24, r18
    20da:	81 95       	neg	r24
    20dc:	21 e0       	ldi	r18, 0x01	; 1
    20de:	18 16       	cp	r1, r24
    20e0:	08 f0       	brcs	.+2      	; 0x20e4 <__moddi3+0xfba>
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	e8 2f       	mov	r30, r24
    20e6:	e9 1b       	sub	r30, r25
    20e8:	91 e0       	ldi	r25, 0x01	; 1
    20ea:	8e 17       	cp	r24, r30
    20ec:	08 f0       	brcs	.+2      	; 0x20f0 <__moddi3+0xfc6>
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	29 2b       	or	r18, r25
    20f2:	83 2f       	mov	r24, r19
    20f4:	81 95       	neg	r24
    20f6:	31 e0       	ldi	r19, 0x01	; 1
    20f8:	18 16       	cp	r1, r24
    20fa:	08 f0       	brcs	.+2      	; 0x20fe <__moddi3+0xfd4>
    20fc:	30 e0       	ldi	r19, 0x00	; 0
    20fe:	78 2f       	mov	r23, r24
    2100:	72 1b       	sub	r23, r18
    2102:	91 e0       	ldi	r25, 0x01	; 1
    2104:	87 17       	cp	r24, r23
    2106:	08 f0       	brcs	.+2      	; 0x210a <__moddi3+0xfe0>
    2108:	90 e0       	ldi	r25, 0x00	; 0
    210a:	39 2b       	or	r19, r25
    210c:	84 2f       	mov	r24, r20
    210e:	81 95       	neg	r24
    2110:	21 e0       	ldi	r18, 0x01	; 1
    2112:	18 16       	cp	r1, r24
    2114:	08 f0       	brcs	.+2      	; 0x2118 <__moddi3+0xfee>
    2116:	20 e0       	ldi	r18, 0x00	; 0
    2118:	68 2f       	mov	r22, r24
    211a:	63 1b       	sub	r22, r19
    211c:	91 e0       	ldi	r25, 0x01	; 1
    211e:	86 17       	cp	r24, r22
    2120:	08 f0       	brcs	.+2      	; 0x2124 <__moddi3+0xffa>
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	29 2b       	or	r18, r25
    2126:	85 2f       	mov	r24, r21
    2128:	81 95       	neg	r24
    212a:	31 e0       	ldi	r19, 0x01	; 1
    212c:	18 16       	cp	r1, r24
    212e:	08 f0       	brcs	.+2      	; 0x2132 <__moddi3+0x1008>
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	58 2f       	mov	r21, r24
    2134:	52 1b       	sub	r21, r18
    2136:	91 e0       	ldi	r25, 0x01	; 1
    2138:	85 17       	cp	r24, r21
    213a:	08 f0       	brcs	.+2      	; 0x213e <__moddi3+0x1014>
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	39 2b       	or	r19, r25
    2140:	8a 2f       	mov	r24, r26
    2142:	81 95       	neg	r24
    2144:	21 e0       	ldi	r18, 0x01	; 1
    2146:	18 16       	cp	r1, r24
    2148:	08 f0       	brcs	.+2      	; 0x214c <__moddi3+0x1022>
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	48 2f       	mov	r20, r24
    214e:	43 1b       	sub	r20, r19
    2150:	91 e0       	ldi	r25, 0x01	; 1
    2152:	84 17       	cp	r24, r20
    2154:	08 f0       	brcs	.+2      	; 0x2158 <__moddi3+0x102e>
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	29 2b       	or	r18, r25
    215a:	8b 2f       	mov	r24, r27
    215c:	81 95       	neg	r24
    215e:	91 e0       	ldi	r25, 0x01	; 1
    2160:	18 16       	cp	r1, r24
    2162:	08 f0       	brcs	.+2      	; 0x2166 <__moddi3+0x103c>
    2164:	90 e0       	ldi	r25, 0x00	; 0
    2166:	38 2f       	mov	r19, r24
    2168:	32 1b       	sub	r19, r18
    216a:	21 e0       	ldi	r18, 0x01	; 1
    216c:	83 17       	cp	r24, r19
    216e:	08 f0       	brcs	.+2      	; 0x2172 <__moddi3+0x1048>
    2170:	20 e0       	ldi	r18, 0x00	; 0
    2172:	92 2b       	or	r25, r18
    2174:	81 2f       	mov	r24, r17
    2176:	81 95       	neg	r24
    2178:	89 1b       	sub	r24, r25
    217a:	f9 8b       	std	Y+17, r31	; 0x11
    217c:	ea 8b       	std	Y+18, r30	; 0x12
    217e:	7b 8b       	std	Y+19, r23	; 0x13
    2180:	6c 8b       	std	Y+20, r22	; 0x14
    2182:	5d 8b       	std	Y+21, r21	; 0x15
    2184:	4e 8b       	std	Y+22, r20	; 0x16
    2186:	3f 8b       	std	Y+23, r19	; 0x17
    2188:	88 8f       	std	Y+24, r24	; 0x18
    218a:	29 89       	ldd	r18, Y+17	; 0x11
    218c:	3a 89       	ldd	r19, Y+18	; 0x12
    218e:	4b 89       	ldd	r20, Y+19	; 0x13
    2190:	5c 89       	ldd	r21, Y+20	; 0x14
    2192:	6d 89       	ldd	r22, Y+21	; 0x15
    2194:	7e 89       	ldd	r23, Y+22	; 0x16
    2196:	8f 89       	ldd	r24, Y+23	; 0x17
    2198:	98 8d       	ldd	r25, Y+24	; 0x18
    219a:	c9 58       	subi	r28, 0x89	; 137
    219c:	df 4f       	sbci	r29, 0xFF	; 255
    219e:	e2 e1       	ldi	r30, 0x12	; 18
    21a0:	0c 94 e7 25 	jmp	0x4bce	; 0x4bce <__epilogue_restores__>

000021a4 <_fpadd_parts>:
    21a4:	a0 e0       	ldi	r26, 0x00	; 0
    21a6:	b0 e0       	ldi	r27, 0x00	; 0
    21a8:	e8 ed       	ldi	r30, 0xD8	; 216
    21aa:	f0 e1       	ldi	r31, 0x10	; 16
    21ac:	0c 94 cb 25 	jmp	0x4b96	; 0x4b96 <__prologue_saves__>
    21b0:	dc 01       	movw	r26, r24
    21b2:	2b 01       	movw	r4, r22
    21b4:	fa 01       	movw	r30, r20
    21b6:	9c 91       	ld	r25, X
    21b8:	92 30       	cpi	r25, 0x02	; 2
    21ba:	08 f4       	brcc	.+2      	; 0x21be <_fpadd_parts+0x1a>
    21bc:	39 c1       	rjmp	.+626    	; 0x2430 <_fpadd_parts+0x28c>
    21be:	eb 01       	movw	r28, r22
    21c0:	88 81       	ld	r24, Y
    21c2:	82 30       	cpi	r24, 0x02	; 2
    21c4:	08 f4       	brcc	.+2      	; 0x21c8 <_fpadd_parts+0x24>
    21c6:	33 c1       	rjmp	.+614    	; 0x242e <_fpadd_parts+0x28a>
    21c8:	94 30       	cpi	r25, 0x04	; 4
    21ca:	69 f4       	brne	.+26     	; 0x21e6 <_fpadd_parts+0x42>
    21cc:	84 30       	cpi	r24, 0x04	; 4
    21ce:	09 f0       	breq	.+2      	; 0x21d2 <_fpadd_parts+0x2e>
    21d0:	2f c1       	rjmp	.+606    	; 0x2430 <_fpadd_parts+0x28c>
    21d2:	11 96       	adiw	r26, 0x01	; 1
    21d4:	9c 91       	ld	r25, X
    21d6:	11 97       	sbiw	r26, 0x01	; 1
    21d8:	89 81       	ldd	r24, Y+1	; 0x01
    21da:	98 17       	cp	r25, r24
    21dc:	09 f4       	brne	.+2      	; 0x21e0 <_fpadd_parts+0x3c>
    21de:	28 c1       	rjmp	.+592    	; 0x2430 <_fpadd_parts+0x28c>
    21e0:	a0 e6       	ldi	r26, 0x60	; 96
    21e2:	b0 e0       	ldi	r27, 0x00	; 0
    21e4:	25 c1       	rjmp	.+586    	; 0x2430 <_fpadd_parts+0x28c>
    21e6:	84 30       	cpi	r24, 0x04	; 4
    21e8:	09 f4       	brne	.+2      	; 0x21ec <_fpadd_parts+0x48>
    21ea:	21 c1       	rjmp	.+578    	; 0x242e <_fpadd_parts+0x28a>
    21ec:	82 30       	cpi	r24, 0x02	; 2
    21ee:	a9 f4       	brne	.+42     	; 0x221a <_fpadd_parts+0x76>
    21f0:	92 30       	cpi	r25, 0x02	; 2
    21f2:	09 f0       	breq	.+2      	; 0x21f6 <_fpadd_parts+0x52>
    21f4:	1d c1       	rjmp	.+570    	; 0x2430 <_fpadd_parts+0x28c>
    21f6:	9a 01       	movw	r18, r20
    21f8:	ad 01       	movw	r20, r26
    21fa:	88 e0       	ldi	r24, 0x08	; 8
    21fc:	ea 01       	movw	r28, r20
    21fe:	09 90       	ld	r0, Y+
    2200:	ae 01       	movw	r20, r28
    2202:	e9 01       	movw	r28, r18
    2204:	09 92       	st	Y+, r0
    2206:	9e 01       	movw	r18, r28
    2208:	81 50       	subi	r24, 0x01	; 1
    220a:	c1 f7       	brne	.-16     	; 0x21fc <_fpadd_parts+0x58>
    220c:	e2 01       	movw	r28, r4
    220e:	89 81       	ldd	r24, Y+1	; 0x01
    2210:	11 96       	adiw	r26, 0x01	; 1
    2212:	9c 91       	ld	r25, X
    2214:	89 23       	and	r24, r25
    2216:	81 83       	std	Z+1, r24	; 0x01
    2218:	08 c1       	rjmp	.+528    	; 0x242a <_fpadd_parts+0x286>
    221a:	92 30       	cpi	r25, 0x02	; 2
    221c:	09 f4       	brne	.+2      	; 0x2220 <_fpadd_parts+0x7c>
    221e:	07 c1       	rjmp	.+526    	; 0x242e <_fpadd_parts+0x28a>
    2220:	12 96       	adiw	r26, 0x02	; 2
    2222:	2d 90       	ld	r2, X+
    2224:	3c 90       	ld	r3, X
    2226:	13 97       	sbiw	r26, 0x03	; 3
    2228:	eb 01       	movw	r28, r22
    222a:	8a 81       	ldd	r24, Y+2	; 0x02
    222c:	9b 81       	ldd	r25, Y+3	; 0x03
    222e:	14 96       	adiw	r26, 0x04	; 4
    2230:	ad 90       	ld	r10, X+
    2232:	bd 90       	ld	r11, X+
    2234:	cd 90       	ld	r12, X+
    2236:	dc 90       	ld	r13, X
    2238:	17 97       	sbiw	r26, 0x07	; 7
    223a:	ec 80       	ldd	r14, Y+4	; 0x04
    223c:	fd 80       	ldd	r15, Y+5	; 0x05
    223e:	0e 81       	ldd	r16, Y+6	; 0x06
    2240:	1f 81       	ldd	r17, Y+7	; 0x07
    2242:	91 01       	movw	r18, r2
    2244:	28 1b       	sub	r18, r24
    2246:	39 0b       	sbc	r19, r25
    2248:	b9 01       	movw	r22, r18
    224a:	37 ff       	sbrs	r19, 7
    224c:	04 c0       	rjmp	.+8      	; 0x2256 <_fpadd_parts+0xb2>
    224e:	66 27       	eor	r22, r22
    2250:	77 27       	eor	r23, r23
    2252:	62 1b       	sub	r22, r18
    2254:	73 0b       	sbc	r23, r19
    2256:	60 32       	cpi	r22, 0x20	; 32
    2258:	71 05       	cpc	r23, r1
    225a:	0c f0       	brlt	.+2      	; 0x225e <_fpadd_parts+0xba>
    225c:	61 c0       	rjmp	.+194    	; 0x2320 <_fpadd_parts+0x17c>
    225e:	12 16       	cp	r1, r18
    2260:	13 06       	cpc	r1, r19
    2262:	6c f5       	brge	.+90     	; 0x22be <_fpadd_parts+0x11a>
    2264:	37 01       	movw	r6, r14
    2266:	48 01       	movw	r8, r16
    2268:	06 2e       	mov	r0, r22
    226a:	04 c0       	rjmp	.+8      	; 0x2274 <_fpadd_parts+0xd0>
    226c:	96 94       	lsr	r9
    226e:	87 94       	ror	r8
    2270:	77 94       	ror	r7
    2272:	67 94       	ror	r6
    2274:	0a 94       	dec	r0
    2276:	d2 f7       	brpl	.-12     	; 0x226c <_fpadd_parts+0xc8>
    2278:	21 e0       	ldi	r18, 0x01	; 1
    227a:	30 e0       	ldi	r19, 0x00	; 0
    227c:	40 e0       	ldi	r20, 0x00	; 0
    227e:	50 e0       	ldi	r21, 0x00	; 0
    2280:	04 c0       	rjmp	.+8      	; 0x228a <_fpadd_parts+0xe6>
    2282:	22 0f       	add	r18, r18
    2284:	33 1f       	adc	r19, r19
    2286:	44 1f       	adc	r20, r20
    2288:	55 1f       	adc	r21, r21
    228a:	6a 95       	dec	r22
    228c:	d2 f7       	brpl	.-12     	; 0x2282 <_fpadd_parts+0xde>
    228e:	21 50       	subi	r18, 0x01	; 1
    2290:	30 40       	sbci	r19, 0x00	; 0
    2292:	40 40       	sbci	r20, 0x00	; 0
    2294:	50 40       	sbci	r21, 0x00	; 0
    2296:	2e 21       	and	r18, r14
    2298:	3f 21       	and	r19, r15
    229a:	40 23       	and	r20, r16
    229c:	51 23       	and	r21, r17
    229e:	21 15       	cp	r18, r1
    22a0:	31 05       	cpc	r19, r1
    22a2:	41 05       	cpc	r20, r1
    22a4:	51 05       	cpc	r21, r1
    22a6:	21 f0       	breq	.+8      	; 0x22b0 <_fpadd_parts+0x10c>
    22a8:	21 e0       	ldi	r18, 0x01	; 1
    22aa:	30 e0       	ldi	r19, 0x00	; 0
    22ac:	40 e0       	ldi	r20, 0x00	; 0
    22ae:	50 e0       	ldi	r21, 0x00	; 0
    22b0:	79 01       	movw	r14, r18
    22b2:	8a 01       	movw	r16, r20
    22b4:	e6 28       	or	r14, r6
    22b6:	f7 28       	or	r15, r7
    22b8:	08 29       	or	r16, r8
    22ba:	19 29       	or	r17, r9
    22bc:	3c c0       	rjmp	.+120    	; 0x2336 <_fpadd_parts+0x192>
    22be:	23 2b       	or	r18, r19
    22c0:	d1 f1       	breq	.+116    	; 0x2336 <_fpadd_parts+0x192>
    22c2:	26 0e       	add	r2, r22
    22c4:	37 1e       	adc	r3, r23
    22c6:	35 01       	movw	r6, r10
    22c8:	46 01       	movw	r8, r12
    22ca:	06 2e       	mov	r0, r22
    22cc:	04 c0       	rjmp	.+8      	; 0x22d6 <_fpadd_parts+0x132>
    22ce:	96 94       	lsr	r9
    22d0:	87 94       	ror	r8
    22d2:	77 94       	ror	r7
    22d4:	67 94       	ror	r6
    22d6:	0a 94       	dec	r0
    22d8:	d2 f7       	brpl	.-12     	; 0x22ce <_fpadd_parts+0x12a>
    22da:	21 e0       	ldi	r18, 0x01	; 1
    22dc:	30 e0       	ldi	r19, 0x00	; 0
    22de:	40 e0       	ldi	r20, 0x00	; 0
    22e0:	50 e0       	ldi	r21, 0x00	; 0
    22e2:	04 c0       	rjmp	.+8      	; 0x22ec <_fpadd_parts+0x148>
    22e4:	22 0f       	add	r18, r18
    22e6:	33 1f       	adc	r19, r19
    22e8:	44 1f       	adc	r20, r20
    22ea:	55 1f       	adc	r21, r21
    22ec:	6a 95       	dec	r22
    22ee:	d2 f7       	brpl	.-12     	; 0x22e4 <_fpadd_parts+0x140>
    22f0:	21 50       	subi	r18, 0x01	; 1
    22f2:	30 40       	sbci	r19, 0x00	; 0
    22f4:	40 40       	sbci	r20, 0x00	; 0
    22f6:	50 40       	sbci	r21, 0x00	; 0
    22f8:	2a 21       	and	r18, r10
    22fa:	3b 21       	and	r19, r11
    22fc:	4c 21       	and	r20, r12
    22fe:	5d 21       	and	r21, r13
    2300:	21 15       	cp	r18, r1
    2302:	31 05       	cpc	r19, r1
    2304:	41 05       	cpc	r20, r1
    2306:	51 05       	cpc	r21, r1
    2308:	21 f0       	breq	.+8      	; 0x2312 <_fpadd_parts+0x16e>
    230a:	21 e0       	ldi	r18, 0x01	; 1
    230c:	30 e0       	ldi	r19, 0x00	; 0
    230e:	40 e0       	ldi	r20, 0x00	; 0
    2310:	50 e0       	ldi	r21, 0x00	; 0
    2312:	59 01       	movw	r10, r18
    2314:	6a 01       	movw	r12, r20
    2316:	a6 28       	or	r10, r6
    2318:	b7 28       	or	r11, r7
    231a:	c8 28       	or	r12, r8
    231c:	d9 28       	or	r13, r9
    231e:	0b c0       	rjmp	.+22     	; 0x2336 <_fpadd_parts+0x192>
    2320:	82 15       	cp	r24, r2
    2322:	93 05       	cpc	r25, r3
    2324:	2c f0       	brlt	.+10     	; 0x2330 <_fpadd_parts+0x18c>
    2326:	1c 01       	movw	r2, r24
    2328:	aa 24       	eor	r10, r10
    232a:	bb 24       	eor	r11, r11
    232c:	65 01       	movw	r12, r10
    232e:	03 c0       	rjmp	.+6      	; 0x2336 <_fpadd_parts+0x192>
    2330:	ee 24       	eor	r14, r14
    2332:	ff 24       	eor	r15, r15
    2334:	87 01       	movw	r16, r14
    2336:	11 96       	adiw	r26, 0x01	; 1
    2338:	9c 91       	ld	r25, X
    233a:	d2 01       	movw	r26, r4
    233c:	11 96       	adiw	r26, 0x01	; 1
    233e:	8c 91       	ld	r24, X
    2340:	98 17       	cp	r25, r24
    2342:	09 f4       	brne	.+2      	; 0x2346 <_fpadd_parts+0x1a2>
    2344:	45 c0       	rjmp	.+138    	; 0x23d0 <_fpadd_parts+0x22c>
    2346:	99 23       	and	r25, r25
    2348:	39 f0       	breq	.+14     	; 0x2358 <_fpadd_parts+0x1b4>
    234a:	a8 01       	movw	r20, r16
    234c:	97 01       	movw	r18, r14
    234e:	2a 19       	sub	r18, r10
    2350:	3b 09       	sbc	r19, r11
    2352:	4c 09       	sbc	r20, r12
    2354:	5d 09       	sbc	r21, r13
    2356:	06 c0       	rjmp	.+12     	; 0x2364 <_fpadd_parts+0x1c0>
    2358:	a6 01       	movw	r20, r12
    235a:	95 01       	movw	r18, r10
    235c:	2e 19       	sub	r18, r14
    235e:	3f 09       	sbc	r19, r15
    2360:	40 0b       	sbc	r20, r16
    2362:	51 0b       	sbc	r21, r17
    2364:	57 fd       	sbrc	r21, 7
    2366:	08 c0       	rjmp	.+16     	; 0x2378 <_fpadd_parts+0x1d4>
    2368:	11 82       	std	Z+1, r1	; 0x01
    236a:	33 82       	std	Z+3, r3	; 0x03
    236c:	22 82       	std	Z+2, r2	; 0x02
    236e:	24 83       	std	Z+4, r18	; 0x04
    2370:	35 83       	std	Z+5, r19	; 0x05
    2372:	46 83       	std	Z+6, r20	; 0x06
    2374:	57 83       	std	Z+7, r21	; 0x07
    2376:	1d c0       	rjmp	.+58     	; 0x23b2 <_fpadd_parts+0x20e>
    2378:	81 e0       	ldi	r24, 0x01	; 1
    237a:	81 83       	std	Z+1, r24	; 0x01
    237c:	33 82       	std	Z+3, r3	; 0x03
    237e:	22 82       	std	Z+2, r2	; 0x02
    2380:	88 27       	eor	r24, r24
    2382:	99 27       	eor	r25, r25
    2384:	dc 01       	movw	r26, r24
    2386:	82 1b       	sub	r24, r18
    2388:	93 0b       	sbc	r25, r19
    238a:	a4 0b       	sbc	r26, r20
    238c:	b5 0b       	sbc	r27, r21
    238e:	84 83       	std	Z+4, r24	; 0x04
    2390:	95 83       	std	Z+5, r25	; 0x05
    2392:	a6 83       	std	Z+6, r26	; 0x06
    2394:	b7 83       	std	Z+7, r27	; 0x07
    2396:	0d c0       	rjmp	.+26     	; 0x23b2 <_fpadd_parts+0x20e>
    2398:	22 0f       	add	r18, r18
    239a:	33 1f       	adc	r19, r19
    239c:	44 1f       	adc	r20, r20
    239e:	55 1f       	adc	r21, r21
    23a0:	24 83       	std	Z+4, r18	; 0x04
    23a2:	35 83       	std	Z+5, r19	; 0x05
    23a4:	46 83       	std	Z+6, r20	; 0x06
    23a6:	57 83       	std	Z+7, r21	; 0x07
    23a8:	82 81       	ldd	r24, Z+2	; 0x02
    23aa:	93 81       	ldd	r25, Z+3	; 0x03
    23ac:	01 97       	sbiw	r24, 0x01	; 1
    23ae:	93 83       	std	Z+3, r25	; 0x03
    23b0:	82 83       	std	Z+2, r24	; 0x02
    23b2:	24 81       	ldd	r18, Z+4	; 0x04
    23b4:	35 81       	ldd	r19, Z+5	; 0x05
    23b6:	46 81       	ldd	r20, Z+6	; 0x06
    23b8:	57 81       	ldd	r21, Z+7	; 0x07
    23ba:	da 01       	movw	r26, r20
    23bc:	c9 01       	movw	r24, r18
    23be:	01 97       	sbiw	r24, 0x01	; 1
    23c0:	a1 09       	sbc	r26, r1
    23c2:	b1 09       	sbc	r27, r1
    23c4:	8f 5f       	subi	r24, 0xFF	; 255
    23c6:	9f 4f       	sbci	r25, 0xFF	; 255
    23c8:	af 4f       	sbci	r26, 0xFF	; 255
    23ca:	bf 43       	sbci	r27, 0x3F	; 63
    23cc:	28 f3       	brcs	.-54     	; 0x2398 <_fpadd_parts+0x1f4>
    23ce:	0b c0       	rjmp	.+22     	; 0x23e6 <_fpadd_parts+0x242>
    23d0:	91 83       	std	Z+1, r25	; 0x01
    23d2:	33 82       	std	Z+3, r3	; 0x03
    23d4:	22 82       	std	Z+2, r2	; 0x02
    23d6:	ea 0c       	add	r14, r10
    23d8:	fb 1c       	adc	r15, r11
    23da:	0c 1d       	adc	r16, r12
    23dc:	1d 1d       	adc	r17, r13
    23de:	e4 82       	std	Z+4, r14	; 0x04
    23e0:	f5 82       	std	Z+5, r15	; 0x05
    23e2:	06 83       	std	Z+6, r16	; 0x06
    23e4:	17 83       	std	Z+7, r17	; 0x07
    23e6:	83 e0       	ldi	r24, 0x03	; 3
    23e8:	80 83       	st	Z, r24
    23ea:	24 81       	ldd	r18, Z+4	; 0x04
    23ec:	35 81       	ldd	r19, Z+5	; 0x05
    23ee:	46 81       	ldd	r20, Z+6	; 0x06
    23f0:	57 81       	ldd	r21, Z+7	; 0x07
    23f2:	57 ff       	sbrs	r21, 7
    23f4:	1a c0       	rjmp	.+52     	; 0x242a <_fpadd_parts+0x286>
    23f6:	c9 01       	movw	r24, r18
    23f8:	aa 27       	eor	r26, r26
    23fa:	97 fd       	sbrc	r25, 7
    23fc:	a0 95       	com	r26
    23fe:	ba 2f       	mov	r27, r26
    2400:	81 70       	andi	r24, 0x01	; 1
    2402:	90 70       	andi	r25, 0x00	; 0
    2404:	a0 70       	andi	r26, 0x00	; 0
    2406:	b0 70       	andi	r27, 0x00	; 0
    2408:	56 95       	lsr	r21
    240a:	47 95       	ror	r20
    240c:	37 95       	ror	r19
    240e:	27 95       	ror	r18
    2410:	82 2b       	or	r24, r18
    2412:	93 2b       	or	r25, r19
    2414:	a4 2b       	or	r26, r20
    2416:	b5 2b       	or	r27, r21
    2418:	84 83       	std	Z+4, r24	; 0x04
    241a:	95 83       	std	Z+5, r25	; 0x05
    241c:	a6 83       	std	Z+6, r26	; 0x06
    241e:	b7 83       	std	Z+7, r27	; 0x07
    2420:	82 81       	ldd	r24, Z+2	; 0x02
    2422:	93 81       	ldd	r25, Z+3	; 0x03
    2424:	01 96       	adiw	r24, 0x01	; 1
    2426:	93 83       	std	Z+3, r25	; 0x03
    2428:	82 83       	std	Z+2, r24	; 0x02
    242a:	df 01       	movw	r26, r30
    242c:	01 c0       	rjmp	.+2      	; 0x2430 <_fpadd_parts+0x28c>
    242e:	d2 01       	movw	r26, r4
    2430:	cd 01       	movw	r24, r26
    2432:	cd b7       	in	r28, 0x3d	; 61
    2434:	de b7       	in	r29, 0x3e	; 62
    2436:	e2 e1       	ldi	r30, 0x12	; 18
    2438:	0c 94 e7 25 	jmp	0x4bce	; 0x4bce <__epilogue_restores__>

0000243c <__subsf3>:
    243c:	a0 e2       	ldi	r26, 0x20	; 32
    243e:	b0 e0       	ldi	r27, 0x00	; 0
    2440:	e4 e2       	ldi	r30, 0x24	; 36
    2442:	f2 e1       	ldi	r31, 0x12	; 18
    2444:	0c 94 d7 25 	jmp	0x4bae	; 0x4bae <__prologue_saves__+0x18>
    2448:	69 83       	std	Y+1, r22	; 0x01
    244a:	7a 83       	std	Y+2, r23	; 0x02
    244c:	8b 83       	std	Y+3, r24	; 0x03
    244e:	9c 83       	std	Y+4, r25	; 0x04
    2450:	2d 83       	std	Y+5, r18	; 0x05
    2452:	3e 83       	std	Y+6, r19	; 0x06
    2454:	4f 83       	std	Y+7, r20	; 0x07
    2456:	58 87       	std	Y+8, r21	; 0x08
    2458:	e9 e0       	ldi	r30, 0x09	; 9
    245a:	ee 2e       	mov	r14, r30
    245c:	f1 2c       	mov	r15, r1
    245e:	ec 0e       	add	r14, r28
    2460:	fd 1e       	adc	r15, r29
    2462:	ce 01       	movw	r24, r28
    2464:	01 96       	adiw	r24, 0x01	; 1
    2466:	b7 01       	movw	r22, r14
    2468:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    246c:	8e 01       	movw	r16, r28
    246e:	0f 5e       	subi	r16, 0xEF	; 239
    2470:	1f 4f       	sbci	r17, 0xFF	; 255
    2472:	ce 01       	movw	r24, r28
    2474:	05 96       	adiw	r24, 0x05	; 5
    2476:	b8 01       	movw	r22, r16
    2478:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    247c:	8a 89       	ldd	r24, Y+18	; 0x12
    247e:	91 e0       	ldi	r25, 0x01	; 1
    2480:	89 27       	eor	r24, r25
    2482:	8a 8b       	std	Y+18, r24	; 0x12
    2484:	c7 01       	movw	r24, r14
    2486:	b8 01       	movw	r22, r16
    2488:	ae 01       	movw	r20, r28
    248a:	47 5e       	subi	r20, 0xE7	; 231
    248c:	5f 4f       	sbci	r21, 0xFF	; 255
    248e:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <_fpadd_parts>
    2492:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <__pack_f>
    2496:	a0 96       	adiw	r28, 0x20	; 32
    2498:	e6 e0       	ldi	r30, 0x06	; 6
    249a:	0c 94 f3 25 	jmp	0x4be6	; 0x4be6 <__epilogue_restores__+0x18>

0000249e <__addsf3>:
    249e:	a0 e2       	ldi	r26, 0x20	; 32
    24a0:	b0 e0       	ldi	r27, 0x00	; 0
    24a2:	e5 e5       	ldi	r30, 0x55	; 85
    24a4:	f2 e1       	ldi	r31, 0x12	; 18
    24a6:	0c 94 d7 25 	jmp	0x4bae	; 0x4bae <__prologue_saves__+0x18>
    24aa:	69 83       	std	Y+1, r22	; 0x01
    24ac:	7a 83       	std	Y+2, r23	; 0x02
    24ae:	8b 83       	std	Y+3, r24	; 0x03
    24b0:	9c 83       	std	Y+4, r25	; 0x04
    24b2:	2d 83       	std	Y+5, r18	; 0x05
    24b4:	3e 83       	std	Y+6, r19	; 0x06
    24b6:	4f 83       	std	Y+7, r20	; 0x07
    24b8:	58 87       	std	Y+8, r21	; 0x08
    24ba:	f9 e0       	ldi	r31, 0x09	; 9
    24bc:	ef 2e       	mov	r14, r31
    24be:	f1 2c       	mov	r15, r1
    24c0:	ec 0e       	add	r14, r28
    24c2:	fd 1e       	adc	r15, r29
    24c4:	ce 01       	movw	r24, r28
    24c6:	01 96       	adiw	r24, 0x01	; 1
    24c8:	b7 01       	movw	r22, r14
    24ca:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    24ce:	8e 01       	movw	r16, r28
    24d0:	0f 5e       	subi	r16, 0xEF	; 239
    24d2:	1f 4f       	sbci	r17, 0xFF	; 255
    24d4:	ce 01       	movw	r24, r28
    24d6:	05 96       	adiw	r24, 0x05	; 5
    24d8:	b8 01       	movw	r22, r16
    24da:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    24de:	c7 01       	movw	r24, r14
    24e0:	b8 01       	movw	r22, r16
    24e2:	ae 01       	movw	r20, r28
    24e4:	47 5e       	subi	r20, 0xE7	; 231
    24e6:	5f 4f       	sbci	r21, 0xFF	; 255
    24e8:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <_fpadd_parts>
    24ec:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <__pack_f>
    24f0:	a0 96       	adiw	r28, 0x20	; 32
    24f2:	e6 e0       	ldi	r30, 0x06	; 6
    24f4:	0c 94 f3 25 	jmp	0x4be6	; 0x4be6 <__epilogue_restores__+0x18>

000024f8 <__mulsf3>:
    24f8:	a0 e2       	ldi	r26, 0x20	; 32
    24fa:	b0 e0       	ldi	r27, 0x00	; 0
    24fc:	e2 e8       	ldi	r30, 0x82	; 130
    24fe:	f2 e1       	ldi	r31, 0x12	; 18
    2500:	0c 94 cb 25 	jmp	0x4b96	; 0x4b96 <__prologue_saves__>
    2504:	69 83       	std	Y+1, r22	; 0x01
    2506:	7a 83       	std	Y+2, r23	; 0x02
    2508:	8b 83       	std	Y+3, r24	; 0x03
    250a:	9c 83       	std	Y+4, r25	; 0x04
    250c:	2d 83       	std	Y+5, r18	; 0x05
    250e:	3e 83       	std	Y+6, r19	; 0x06
    2510:	4f 83       	std	Y+7, r20	; 0x07
    2512:	58 87       	std	Y+8, r21	; 0x08
    2514:	ce 01       	movw	r24, r28
    2516:	01 96       	adiw	r24, 0x01	; 1
    2518:	be 01       	movw	r22, r28
    251a:	67 5f       	subi	r22, 0xF7	; 247
    251c:	7f 4f       	sbci	r23, 0xFF	; 255
    251e:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    2522:	ce 01       	movw	r24, r28
    2524:	05 96       	adiw	r24, 0x05	; 5
    2526:	be 01       	movw	r22, r28
    2528:	6f 5e       	subi	r22, 0xEF	; 239
    252a:	7f 4f       	sbci	r23, 0xFF	; 255
    252c:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    2530:	99 85       	ldd	r25, Y+9	; 0x09
    2532:	92 30       	cpi	r25, 0x02	; 2
    2534:	88 f0       	brcs	.+34     	; 0x2558 <__mulsf3+0x60>
    2536:	89 89       	ldd	r24, Y+17	; 0x11
    2538:	82 30       	cpi	r24, 0x02	; 2
    253a:	c8 f0       	brcs	.+50     	; 0x256e <__mulsf3+0x76>
    253c:	94 30       	cpi	r25, 0x04	; 4
    253e:	19 f4       	brne	.+6      	; 0x2546 <__mulsf3+0x4e>
    2540:	82 30       	cpi	r24, 0x02	; 2
    2542:	51 f4       	brne	.+20     	; 0x2558 <__mulsf3+0x60>
    2544:	04 c0       	rjmp	.+8      	; 0x254e <__mulsf3+0x56>
    2546:	84 30       	cpi	r24, 0x04	; 4
    2548:	29 f4       	brne	.+10     	; 0x2554 <__mulsf3+0x5c>
    254a:	92 30       	cpi	r25, 0x02	; 2
    254c:	81 f4       	brne	.+32     	; 0x256e <__mulsf3+0x76>
    254e:	80 e6       	ldi	r24, 0x60	; 96
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	c6 c0       	rjmp	.+396    	; 0x26e0 <__mulsf3+0x1e8>
    2554:	92 30       	cpi	r25, 0x02	; 2
    2556:	49 f4       	brne	.+18     	; 0x256a <__mulsf3+0x72>
    2558:	20 e0       	ldi	r18, 0x00	; 0
    255a:	9a 85       	ldd	r25, Y+10	; 0x0a
    255c:	8a 89       	ldd	r24, Y+18	; 0x12
    255e:	98 13       	cpse	r25, r24
    2560:	21 e0       	ldi	r18, 0x01	; 1
    2562:	2a 87       	std	Y+10, r18	; 0x0a
    2564:	ce 01       	movw	r24, r28
    2566:	09 96       	adiw	r24, 0x09	; 9
    2568:	bb c0       	rjmp	.+374    	; 0x26e0 <__mulsf3+0x1e8>
    256a:	82 30       	cpi	r24, 0x02	; 2
    256c:	49 f4       	brne	.+18     	; 0x2580 <__mulsf3+0x88>
    256e:	20 e0       	ldi	r18, 0x00	; 0
    2570:	9a 85       	ldd	r25, Y+10	; 0x0a
    2572:	8a 89       	ldd	r24, Y+18	; 0x12
    2574:	98 13       	cpse	r25, r24
    2576:	21 e0       	ldi	r18, 0x01	; 1
    2578:	2a 8b       	std	Y+18, r18	; 0x12
    257a:	ce 01       	movw	r24, r28
    257c:	41 96       	adiw	r24, 0x11	; 17
    257e:	b0 c0       	rjmp	.+352    	; 0x26e0 <__mulsf3+0x1e8>
    2580:	2d 84       	ldd	r2, Y+13	; 0x0d
    2582:	3e 84       	ldd	r3, Y+14	; 0x0e
    2584:	4f 84       	ldd	r4, Y+15	; 0x0f
    2586:	58 88       	ldd	r5, Y+16	; 0x10
    2588:	6d 88       	ldd	r6, Y+21	; 0x15
    258a:	7e 88       	ldd	r7, Y+22	; 0x16
    258c:	8f 88       	ldd	r8, Y+23	; 0x17
    258e:	98 8c       	ldd	r9, Y+24	; 0x18
    2590:	ee 24       	eor	r14, r14
    2592:	ff 24       	eor	r15, r15
    2594:	87 01       	movw	r16, r14
    2596:	aa 24       	eor	r10, r10
    2598:	bb 24       	eor	r11, r11
    259a:	65 01       	movw	r12, r10
    259c:	40 e0       	ldi	r20, 0x00	; 0
    259e:	50 e0       	ldi	r21, 0x00	; 0
    25a0:	60 e0       	ldi	r22, 0x00	; 0
    25a2:	70 e0       	ldi	r23, 0x00	; 0
    25a4:	e0 e0       	ldi	r30, 0x00	; 0
    25a6:	f0 e0       	ldi	r31, 0x00	; 0
    25a8:	c1 01       	movw	r24, r2
    25aa:	81 70       	andi	r24, 0x01	; 1
    25ac:	90 70       	andi	r25, 0x00	; 0
    25ae:	89 2b       	or	r24, r25
    25b0:	e9 f0       	breq	.+58     	; 0x25ec <__mulsf3+0xf4>
    25b2:	e6 0c       	add	r14, r6
    25b4:	f7 1c       	adc	r15, r7
    25b6:	08 1d       	adc	r16, r8
    25b8:	19 1d       	adc	r17, r9
    25ba:	9a 01       	movw	r18, r20
    25bc:	ab 01       	movw	r20, r22
    25be:	2a 0d       	add	r18, r10
    25c0:	3b 1d       	adc	r19, r11
    25c2:	4c 1d       	adc	r20, r12
    25c4:	5d 1d       	adc	r21, r13
    25c6:	80 e0       	ldi	r24, 0x00	; 0
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	a0 e0       	ldi	r26, 0x00	; 0
    25cc:	b0 e0       	ldi	r27, 0x00	; 0
    25ce:	e6 14       	cp	r14, r6
    25d0:	f7 04       	cpc	r15, r7
    25d2:	08 05       	cpc	r16, r8
    25d4:	19 05       	cpc	r17, r9
    25d6:	20 f4       	brcc	.+8      	; 0x25e0 <__mulsf3+0xe8>
    25d8:	81 e0       	ldi	r24, 0x01	; 1
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	a0 e0       	ldi	r26, 0x00	; 0
    25de:	b0 e0       	ldi	r27, 0x00	; 0
    25e0:	ba 01       	movw	r22, r20
    25e2:	a9 01       	movw	r20, r18
    25e4:	48 0f       	add	r20, r24
    25e6:	59 1f       	adc	r21, r25
    25e8:	6a 1f       	adc	r22, r26
    25ea:	7b 1f       	adc	r23, r27
    25ec:	aa 0c       	add	r10, r10
    25ee:	bb 1c       	adc	r11, r11
    25f0:	cc 1c       	adc	r12, r12
    25f2:	dd 1c       	adc	r13, r13
    25f4:	97 fe       	sbrs	r9, 7
    25f6:	08 c0       	rjmp	.+16     	; 0x2608 <__mulsf3+0x110>
    25f8:	81 e0       	ldi	r24, 0x01	; 1
    25fa:	90 e0       	ldi	r25, 0x00	; 0
    25fc:	a0 e0       	ldi	r26, 0x00	; 0
    25fe:	b0 e0       	ldi	r27, 0x00	; 0
    2600:	a8 2a       	or	r10, r24
    2602:	b9 2a       	or	r11, r25
    2604:	ca 2a       	or	r12, r26
    2606:	db 2a       	or	r13, r27
    2608:	31 96       	adiw	r30, 0x01	; 1
    260a:	e0 32       	cpi	r30, 0x20	; 32
    260c:	f1 05       	cpc	r31, r1
    260e:	49 f0       	breq	.+18     	; 0x2622 <__mulsf3+0x12a>
    2610:	66 0c       	add	r6, r6
    2612:	77 1c       	adc	r7, r7
    2614:	88 1c       	adc	r8, r8
    2616:	99 1c       	adc	r9, r9
    2618:	56 94       	lsr	r5
    261a:	47 94       	ror	r4
    261c:	37 94       	ror	r3
    261e:	27 94       	ror	r2
    2620:	c3 cf       	rjmp	.-122    	; 0x25a8 <__mulsf3+0xb0>
    2622:	fa 85       	ldd	r31, Y+10	; 0x0a
    2624:	ea 89       	ldd	r30, Y+18	; 0x12
    2626:	2b 89       	ldd	r18, Y+19	; 0x13
    2628:	3c 89       	ldd	r19, Y+20	; 0x14
    262a:	8b 85       	ldd	r24, Y+11	; 0x0b
    262c:	9c 85       	ldd	r25, Y+12	; 0x0c
    262e:	28 0f       	add	r18, r24
    2630:	39 1f       	adc	r19, r25
    2632:	2e 5f       	subi	r18, 0xFE	; 254
    2634:	3f 4f       	sbci	r19, 0xFF	; 255
    2636:	17 c0       	rjmp	.+46     	; 0x2666 <__mulsf3+0x16e>
    2638:	ca 01       	movw	r24, r20
    263a:	81 70       	andi	r24, 0x01	; 1
    263c:	90 70       	andi	r25, 0x00	; 0
    263e:	89 2b       	or	r24, r25
    2640:	61 f0       	breq	.+24     	; 0x265a <__mulsf3+0x162>
    2642:	16 95       	lsr	r17
    2644:	07 95       	ror	r16
    2646:	f7 94       	ror	r15
    2648:	e7 94       	ror	r14
    264a:	80 e0       	ldi	r24, 0x00	; 0
    264c:	90 e0       	ldi	r25, 0x00	; 0
    264e:	a0 e0       	ldi	r26, 0x00	; 0
    2650:	b0 e8       	ldi	r27, 0x80	; 128
    2652:	e8 2a       	or	r14, r24
    2654:	f9 2a       	or	r15, r25
    2656:	0a 2b       	or	r16, r26
    2658:	1b 2b       	or	r17, r27
    265a:	76 95       	lsr	r23
    265c:	67 95       	ror	r22
    265e:	57 95       	ror	r21
    2660:	47 95       	ror	r20
    2662:	2f 5f       	subi	r18, 0xFF	; 255
    2664:	3f 4f       	sbci	r19, 0xFF	; 255
    2666:	77 fd       	sbrc	r23, 7
    2668:	e7 cf       	rjmp	.-50     	; 0x2638 <__mulsf3+0x140>
    266a:	0c c0       	rjmp	.+24     	; 0x2684 <__mulsf3+0x18c>
    266c:	44 0f       	add	r20, r20
    266e:	55 1f       	adc	r21, r21
    2670:	66 1f       	adc	r22, r22
    2672:	77 1f       	adc	r23, r23
    2674:	17 fd       	sbrc	r17, 7
    2676:	41 60       	ori	r20, 0x01	; 1
    2678:	ee 0c       	add	r14, r14
    267a:	ff 1c       	adc	r15, r15
    267c:	00 1f       	adc	r16, r16
    267e:	11 1f       	adc	r17, r17
    2680:	21 50       	subi	r18, 0x01	; 1
    2682:	30 40       	sbci	r19, 0x00	; 0
    2684:	40 30       	cpi	r20, 0x00	; 0
    2686:	90 e0       	ldi	r25, 0x00	; 0
    2688:	59 07       	cpc	r21, r25
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	69 07       	cpc	r22, r25
    268e:	90 e4       	ldi	r25, 0x40	; 64
    2690:	79 07       	cpc	r23, r25
    2692:	60 f3       	brcs	.-40     	; 0x266c <__mulsf3+0x174>
    2694:	2b 8f       	std	Y+27, r18	; 0x1b
    2696:	3c 8f       	std	Y+28, r19	; 0x1c
    2698:	db 01       	movw	r26, r22
    269a:	ca 01       	movw	r24, r20
    269c:	8f 77       	andi	r24, 0x7F	; 127
    269e:	90 70       	andi	r25, 0x00	; 0
    26a0:	a0 70       	andi	r26, 0x00	; 0
    26a2:	b0 70       	andi	r27, 0x00	; 0
    26a4:	80 34       	cpi	r24, 0x40	; 64
    26a6:	91 05       	cpc	r25, r1
    26a8:	a1 05       	cpc	r26, r1
    26aa:	b1 05       	cpc	r27, r1
    26ac:	61 f4       	brne	.+24     	; 0x26c6 <__mulsf3+0x1ce>
    26ae:	47 fd       	sbrc	r20, 7
    26b0:	0a c0       	rjmp	.+20     	; 0x26c6 <__mulsf3+0x1ce>
    26b2:	e1 14       	cp	r14, r1
    26b4:	f1 04       	cpc	r15, r1
    26b6:	01 05       	cpc	r16, r1
    26b8:	11 05       	cpc	r17, r1
    26ba:	29 f0       	breq	.+10     	; 0x26c6 <__mulsf3+0x1ce>
    26bc:	40 5c       	subi	r20, 0xC0	; 192
    26be:	5f 4f       	sbci	r21, 0xFF	; 255
    26c0:	6f 4f       	sbci	r22, 0xFF	; 255
    26c2:	7f 4f       	sbci	r23, 0xFF	; 255
    26c4:	40 78       	andi	r20, 0x80	; 128
    26c6:	1a 8e       	std	Y+26, r1	; 0x1a
    26c8:	fe 17       	cp	r31, r30
    26ca:	11 f0       	breq	.+4      	; 0x26d0 <__mulsf3+0x1d8>
    26cc:	81 e0       	ldi	r24, 0x01	; 1
    26ce:	8a 8f       	std	Y+26, r24	; 0x1a
    26d0:	4d 8f       	std	Y+29, r20	; 0x1d
    26d2:	5e 8f       	std	Y+30, r21	; 0x1e
    26d4:	6f 8f       	std	Y+31, r22	; 0x1f
    26d6:	78 a3       	std	Y+32, r23	; 0x20
    26d8:	83 e0       	ldi	r24, 0x03	; 3
    26da:	89 8f       	std	Y+25, r24	; 0x19
    26dc:	ce 01       	movw	r24, r28
    26de:	49 96       	adiw	r24, 0x19	; 25
    26e0:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <__pack_f>
    26e4:	a0 96       	adiw	r28, 0x20	; 32
    26e6:	e2 e1       	ldi	r30, 0x12	; 18
    26e8:	0c 94 e7 25 	jmp	0x4bce	; 0x4bce <__epilogue_restores__>

000026ec <__divsf3>:
    26ec:	a8 e1       	ldi	r26, 0x18	; 24
    26ee:	b0 e0       	ldi	r27, 0x00	; 0
    26f0:	ec e7       	ldi	r30, 0x7C	; 124
    26f2:	f3 e1       	ldi	r31, 0x13	; 19
    26f4:	0c 94 d3 25 	jmp	0x4ba6	; 0x4ba6 <__prologue_saves__+0x10>
    26f8:	69 83       	std	Y+1, r22	; 0x01
    26fa:	7a 83       	std	Y+2, r23	; 0x02
    26fc:	8b 83       	std	Y+3, r24	; 0x03
    26fe:	9c 83       	std	Y+4, r25	; 0x04
    2700:	2d 83       	std	Y+5, r18	; 0x05
    2702:	3e 83       	std	Y+6, r19	; 0x06
    2704:	4f 83       	std	Y+7, r20	; 0x07
    2706:	58 87       	std	Y+8, r21	; 0x08
    2708:	b9 e0       	ldi	r27, 0x09	; 9
    270a:	eb 2e       	mov	r14, r27
    270c:	f1 2c       	mov	r15, r1
    270e:	ec 0e       	add	r14, r28
    2710:	fd 1e       	adc	r15, r29
    2712:	ce 01       	movw	r24, r28
    2714:	01 96       	adiw	r24, 0x01	; 1
    2716:	b7 01       	movw	r22, r14
    2718:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    271c:	8e 01       	movw	r16, r28
    271e:	0f 5e       	subi	r16, 0xEF	; 239
    2720:	1f 4f       	sbci	r17, 0xFF	; 255
    2722:	ce 01       	movw	r24, r28
    2724:	05 96       	adiw	r24, 0x05	; 5
    2726:	b8 01       	movw	r22, r16
    2728:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    272c:	29 85       	ldd	r18, Y+9	; 0x09
    272e:	22 30       	cpi	r18, 0x02	; 2
    2730:	08 f4       	brcc	.+2      	; 0x2734 <__divsf3+0x48>
    2732:	7e c0       	rjmp	.+252    	; 0x2830 <__divsf3+0x144>
    2734:	39 89       	ldd	r19, Y+17	; 0x11
    2736:	32 30       	cpi	r19, 0x02	; 2
    2738:	10 f4       	brcc	.+4      	; 0x273e <__divsf3+0x52>
    273a:	b8 01       	movw	r22, r16
    273c:	7c c0       	rjmp	.+248    	; 0x2836 <__divsf3+0x14a>
    273e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2740:	9a 89       	ldd	r25, Y+18	; 0x12
    2742:	89 27       	eor	r24, r25
    2744:	8a 87       	std	Y+10, r24	; 0x0a
    2746:	24 30       	cpi	r18, 0x04	; 4
    2748:	11 f0       	breq	.+4      	; 0x274e <__divsf3+0x62>
    274a:	22 30       	cpi	r18, 0x02	; 2
    274c:	31 f4       	brne	.+12     	; 0x275a <__divsf3+0x6e>
    274e:	23 17       	cp	r18, r19
    2750:	09 f0       	breq	.+2      	; 0x2754 <__divsf3+0x68>
    2752:	6e c0       	rjmp	.+220    	; 0x2830 <__divsf3+0x144>
    2754:	60 e6       	ldi	r22, 0x60	; 96
    2756:	70 e0       	ldi	r23, 0x00	; 0
    2758:	6e c0       	rjmp	.+220    	; 0x2836 <__divsf3+0x14a>
    275a:	34 30       	cpi	r19, 0x04	; 4
    275c:	39 f4       	brne	.+14     	; 0x276c <__divsf3+0x80>
    275e:	1d 86       	std	Y+13, r1	; 0x0d
    2760:	1e 86       	std	Y+14, r1	; 0x0e
    2762:	1f 86       	std	Y+15, r1	; 0x0f
    2764:	18 8a       	std	Y+16, r1	; 0x10
    2766:	1c 86       	std	Y+12, r1	; 0x0c
    2768:	1b 86       	std	Y+11, r1	; 0x0b
    276a:	04 c0       	rjmp	.+8      	; 0x2774 <__divsf3+0x88>
    276c:	32 30       	cpi	r19, 0x02	; 2
    276e:	21 f4       	brne	.+8      	; 0x2778 <__divsf3+0x8c>
    2770:	84 e0       	ldi	r24, 0x04	; 4
    2772:	89 87       	std	Y+9, r24	; 0x09
    2774:	b7 01       	movw	r22, r14
    2776:	5f c0       	rjmp	.+190    	; 0x2836 <__divsf3+0x14a>
    2778:	2b 85       	ldd	r18, Y+11	; 0x0b
    277a:	3c 85       	ldd	r19, Y+12	; 0x0c
    277c:	8b 89       	ldd	r24, Y+19	; 0x13
    277e:	9c 89       	ldd	r25, Y+20	; 0x14
    2780:	28 1b       	sub	r18, r24
    2782:	39 0b       	sbc	r19, r25
    2784:	3c 87       	std	Y+12, r19	; 0x0c
    2786:	2b 87       	std	Y+11, r18	; 0x0b
    2788:	ed 84       	ldd	r14, Y+13	; 0x0d
    278a:	fe 84       	ldd	r15, Y+14	; 0x0e
    278c:	0f 85       	ldd	r16, Y+15	; 0x0f
    278e:	18 89       	ldd	r17, Y+16	; 0x10
    2790:	ad 88       	ldd	r10, Y+21	; 0x15
    2792:	be 88       	ldd	r11, Y+22	; 0x16
    2794:	cf 88       	ldd	r12, Y+23	; 0x17
    2796:	d8 8c       	ldd	r13, Y+24	; 0x18
    2798:	ea 14       	cp	r14, r10
    279a:	fb 04       	cpc	r15, r11
    279c:	0c 05       	cpc	r16, r12
    279e:	1d 05       	cpc	r17, r13
    27a0:	40 f4       	brcc	.+16     	; 0x27b2 <__divsf3+0xc6>
    27a2:	ee 0c       	add	r14, r14
    27a4:	ff 1c       	adc	r15, r15
    27a6:	00 1f       	adc	r16, r16
    27a8:	11 1f       	adc	r17, r17
    27aa:	21 50       	subi	r18, 0x01	; 1
    27ac:	30 40       	sbci	r19, 0x00	; 0
    27ae:	3c 87       	std	Y+12, r19	; 0x0c
    27b0:	2b 87       	std	Y+11, r18	; 0x0b
    27b2:	20 e0       	ldi	r18, 0x00	; 0
    27b4:	30 e0       	ldi	r19, 0x00	; 0
    27b6:	40 e0       	ldi	r20, 0x00	; 0
    27b8:	50 e0       	ldi	r21, 0x00	; 0
    27ba:	80 e0       	ldi	r24, 0x00	; 0
    27bc:	90 e0       	ldi	r25, 0x00	; 0
    27be:	a0 e0       	ldi	r26, 0x00	; 0
    27c0:	b0 e4       	ldi	r27, 0x40	; 64
    27c2:	60 e0       	ldi	r22, 0x00	; 0
    27c4:	70 e0       	ldi	r23, 0x00	; 0
    27c6:	ea 14       	cp	r14, r10
    27c8:	fb 04       	cpc	r15, r11
    27ca:	0c 05       	cpc	r16, r12
    27cc:	1d 05       	cpc	r17, r13
    27ce:	40 f0       	brcs	.+16     	; 0x27e0 <__divsf3+0xf4>
    27d0:	28 2b       	or	r18, r24
    27d2:	39 2b       	or	r19, r25
    27d4:	4a 2b       	or	r20, r26
    27d6:	5b 2b       	or	r21, r27
    27d8:	ea 18       	sub	r14, r10
    27da:	fb 08       	sbc	r15, r11
    27dc:	0c 09       	sbc	r16, r12
    27de:	1d 09       	sbc	r17, r13
    27e0:	b6 95       	lsr	r27
    27e2:	a7 95       	ror	r26
    27e4:	97 95       	ror	r25
    27e6:	87 95       	ror	r24
    27e8:	ee 0c       	add	r14, r14
    27ea:	ff 1c       	adc	r15, r15
    27ec:	00 1f       	adc	r16, r16
    27ee:	11 1f       	adc	r17, r17
    27f0:	6f 5f       	subi	r22, 0xFF	; 255
    27f2:	7f 4f       	sbci	r23, 0xFF	; 255
    27f4:	6f 31       	cpi	r22, 0x1F	; 31
    27f6:	71 05       	cpc	r23, r1
    27f8:	31 f7       	brne	.-52     	; 0x27c6 <__divsf3+0xda>
    27fa:	da 01       	movw	r26, r20
    27fc:	c9 01       	movw	r24, r18
    27fe:	8f 77       	andi	r24, 0x7F	; 127
    2800:	90 70       	andi	r25, 0x00	; 0
    2802:	a0 70       	andi	r26, 0x00	; 0
    2804:	b0 70       	andi	r27, 0x00	; 0
    2806:	80 34       	cpi	r24, 0x40	; 64
    2808:	91 05       	cpc	r25, r1
    280a:	a1 05       	cpc	r26, r1
    280c:	b1 05       	cpc	r27, r1
    280e:	61 f4       	brne	.+24     	; 0x2828 <__divsf3+0x13c>
    2810:	27 fd       	sbrc	r18, 7
    2812:	0a c0       	rjmp	.+20     	; 0x2828 <__divsf3+0x13c>
    2814:	e1 14       	cp	r14, r1
    2816:	f1 04       	cpc	r15, r1
    2818:	01 05       	cpc	r16, r1
    281a:	11 05       	cpc	r17, r1
    281c:	29 f0       	breq	.+10     	; 0x2828 <__divsf3+0x13c>
    281e:	20 5c       	subi	r18, 0xC0	; 192
    2820:	3f 4f       	sbci	r19, 0xFF	; 255
    2822:	4f 4f       	sbci	r20, 0xFF	; 255
    2824:	5f 4f       	sbci	r21, 0xFF	; 255
    2826:	20 78       	andi	r18, 0x80	; 128
    2828:	2d 87       	std	Y+13, r18	; 0x0d
    282a:	3e 87       	std	Y+14, r19	; 0x0e
    282c:	4f 87       	std	Y+15, r20	; 0x0f
    282e:	58 8b       	std	Y+16, r21	; 0x10
    2830:	be 01       	movw	r22, r28
    2832:	67 5f       	subi	r22, 0xF7	; 247
    2834:	7f 4f       	sbci	r23, 0xFF	; 255
    2836:	cb 01       	movw	r24, r22
    2838:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <__pack_f>
    283c:	68 96       	adiw	r28, 0x18	; 24
    283e:	ea e0       	ldi	r30, 0x0A	; 10
    2840:	0c 94 ef 25 	jmp	0x4bde	; 0x4bde <__epilogue_restores__+0x10>

00002844 <__gtsf2>:
    2844:	a8 e1       	ldi	r26, 0x18	; 24
    2846:	b0 e0       	ldi	r27, 0x00	; 0
    2848:	e8 e2       	ldi	r30, 0x28	; 40
    284a:	f4 e1       	ldi	r31, 0x14	; 20
    284c:	0c 94 d7 25 	jmp	0x4bae	; 0x4bae <__prologue_saves__+0x18>
    2850:	69 83       	std	Y+1, r22	; 0x01
    2852:	7a 83       	std	Y+2, r23	; 0x02
    2854:	8b 83       	std	Y+3, r24	; 0x03
    2856:	9c 83       	std	Y+4, r25	; 0x04
    2858:	2d 83       	std	Y+5, r18	; 0x05
    285a:	3e 83       	std	Y+6, r19	; 0x06
    285c:	4f 83       	std	Y+7, r20	; 0x07
    285e:	58 87       	std	Y+8, r21	; 0x08
    2860:	89 e0       	ldi	r24, 0x09	; 9
    2862:	e8 2e       	mov	r14, r24
    2864:	f1 2c       	mov	r15, r1
    2866:	ec 0e       	add	r14, r28
    2868:	fd 1e       	adc	r15, r29
    286a:	ce 01       	movw	r24, r28
    286c:	01 96       	adiw	r24, 0x01	; 1
    286e:	b7 01       	movw	r22, r14
    2870:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    2874:	8e 01       	movw	r16, r28
    2876:	0f 5e       	subi	r16, 0xEF	; 239
    2878:	1f 4f       	sbci	r17, 0xFF	; 255
    287a:	ce 01       	movw	r24, r28
    287c:	05 96       	adiw	r24, 0x05	; 5
    287e:	b8 01       	movw	r22, r16
    2880:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    2884:	89 85       	ldd	r24, Y+9	; 0x09
    2886:	82 30       	cpi	r24, 0x02	; 2
    2888:	40 f0       	brcs	.+16     	; 0x289a <__gtsf2+0x56>
    288a:	89 89       	ldd	r24, Y+17	; 0x11
    288c:	82 30       	cpi	r24, 0x02	; 2
    288e:	28 f0       	brcs	.+10     	; 0x289a <__gtsf2+0x56>
    2890:	c7 01       	movw	r24, r14
    2892:	b8 01       	movw	r22, r16
    2894:	0e 94 53 16 	call	0x2ca6	; 0x2ca6 <__fpcmp_parts_f>
    2898:	01 c0       	rjmp	.+2      	; 0x289c <__gtsf2+0x58>
    289a:	8f ef       	ldi	r24, 0xFF	; 255
    289c:	68 96       	adiw	r28, 0x18	; 24
    289e:	e6 e0       	ldi	r30, 0x06	; 6
    28a0:	0c 94 f3 25 	jmp	0x4be6	; 0x4be6 <__epilogue_restores__+0x18>

000028a4 <__gesf2>:
    28a4:	a8 e1       	ldi	r26, 0x18	; 24
    28a6:	b0 e0       	ldi	r27, 0x00	; 0
    28a8:	e8 e5       	ldi	r30, 0x58	; 88
    28aa:	f4 e1       	ldi	r31, 0x14	; 20
    28ac:	0c 94 d7 25 	jmp	0x4bae	; 0x4bae <__prologue_saves__+0x18>
    28b0:	69 83       	std	Y+1, r22	; 0x01
    28b2:	7a 83       	std	Y+2, r23	; 0x02
    28b4:	8b 83       	std	Y+3, r24	; 0x03
    28b6:	9c 83       	std	Y+4, r25	; 0x04
    28b8:	2d 83       	std	Y+5, r18	; 0x05
    28ba:	3e 83       	std	Y+6, r19	; 0x06
    28bc:	4f 83       	std	Y+7, r20	; 0x07
    28be:	58 87       	std	Y+8, r21	; 0x08
    28c0:	89 e0       	ldi	r24, 0x09	; 9
    28c2:	e8 2e       	mov	r14, r24
    28c4:	f1 2c       	mov	r15, r1
    28c6:	ec 0e       	add	r14, r28
    28c8:	fd 1e       	adc	r15, r29
    28ca:	ce 01       	movw	r24, r28
    28cc:	01 96       	adiw	r24, 0x01	; 1
    28ce:	b7 01       	movw	r22, r14
    28d0:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    28d4:	8e 01       	movw	r16, r28
    28d6:	0f 5e       	subi	r16, 0xEF	; 239
    28d8:	1f 4f       	sbci	r17, 0xFF	; 255
    28da:	ce 01       	movw	r24, r28
    28dc:	05 96       	adiw	r24, 0x05	; 5
    28de:	b8 01       	movw	r22, r16
    28e0:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    28e4:	89 85       	ldd	r24, Y+9	; 0x09
    28e6:	82 30       	cpi	r24, 0x02	; 2
    28e8:	40 f0       	brcs	.+16     	; 0x28fa <__gesf2+0x56>
    28ea:	89 89       	ldd	r24, Y+17	; 0x11
    28ec:	82 30       	cpi	r24, 0x02	; 2
    28ee:	28 f0       	brcs	.+10     	; 0x28fa <__gesf2+0x56>
    28f0:	c7 01       	movw	r24, r14
    28f2:	b8 01       	movw	r22, r16
    28f4:	0e 94 53 16 	call	0x2ca6	; 0x2ca6 <__fpcmp_parts_f>
    28f8:	01 c0       	rjmp	.+2      	; 0x28fc <__gesf2+0x58>
    28fa:	8f ef       	ldi	r24, 0xFF	; 255
    28fc:	68 96       	adiw	r28, 0x18	; 24
    28fe:	e6 e0       	ldi	r30, 0x06	; 6
    2900:	0c 94 f3 25 	jmp	0x4be6	; 0x4be6 <__epilogue_restores__+0x18>

00002904 <__ltsf2>:
    2904:	a8 e1       	ldi	r26, 0x18	; 24
    2906:	b0 e0       	ldi	r27, 0x00	; 0
    2908:	e8 e8       	ldi	r30, 0x88	; 136
    290a:	f4 e1       	ldi	r31, 0x14	; 20
    290c:	0c 94 d7 25 	jmp	0x4bae	; 0x4bae <__prologue_saves__+0x18>
    2910:	69 83       	std	Y+1, r22	; 0x01
    2912:	7a 83       	std	Y+2, r23	; 0x02
    2914:	8b 83       	std	Y+3, r24	; 0x03
    2916:	9c 83       	std	Y+4, r25	; 0x04
    2918:	2d 83       	std	Y+5, r18	; 0x05
    291a:	3e 83       	std	Y+6, r19	; 0x06
    291c:	4f 83       	std	Y+7, r20	; 0x07
    291e:	58 87       	std	Y+8, r21	; 0x08
    2920:	89 e0       	ldi	r24, 0x09	; 9
    2922:	e8 2e       	mov	r14, r24
    2924:	f1 2c       	mov	r15, r1
    2926:	ec 0e       	add	r14, r28
    2928:	fd 1e       	adc	r15, r29
    292a:	ce 01       	movw	r24, r28
    292c:	01 96       	adiw	r24, 0x01	; 1
    292e:	b7 01       	movw	r22, r14
    2930:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    2934:	8e 01       	movw	r16, r28
    2936:	0f 5e       	subi	r16, 0xEF	; 239
    2938:	1f 4f       	sbci	r17, 0xFF	; 255
    293a:	ce 01       	movw	r24, r28
    293c:	05 96       	adiw	r24, 0x05	; 5
    293e:	b8 01       	movw	r22, r16
    2940:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    2944:	89 85       	ldd	r24, Y+9	; 0x09
    2946:	82 30       	cpi	r24, 0x02	; 2
    2948:	40 f0       	brcs	.+16     	; 0x295a <__ltsf2+0x56>
    294a:	89 89       	ldd	r24, Y+17	; 0x11
    294c:	82 30       	cpi	r24, 0x02	; 2
    294e:	28 f0       	brcs	.+10     	; 0x295a <__ltsf2+0x56>
    2950:	c7 01       	movw	r24, r14
    2952:	b8 01       	movw	r22, r16
    2954:	0e 94 53 16 	call	0x2ca6	; 0x2ca6 <__fpcmp_parts_f>
    2958:	01 c0       	rjmp	.+2      	; 0x295c <__ltsf2+0x58>
    295a:	81 e0       	ldi	r24, 0x01	; 1
    295c:	68 96       	adiw	r28, 0x18	; 24
    295e:	e6 e0       	ldi	r30, 0x06	; 6
    2960:	0c 94 f3 25 	jmp	0x4be6	; 0x4be6 <__epilogue_restores__+0x18>

00002964 <__fixsfsi>:
    2964:	ac e0       	ldi	r26, 0x0C	; 12
    2966:	b0 e0       	ldi	r27, 0x00	; 0
    2968:	e8 eb       	ldi	r30, 0xB8	; 184
    296a:	f4 e1       	ldi	r31, 0x14	; 20
    296c:	0c 94 db 25 	jmp	0x4bb6	; 0x4bb6 <__prologue_saves__+0x20>
    2970:	69 83       	std	Y+1, r22	; 0x01
    2972:	7a 83       	std	Y+2, r23	; 0x02
    2974:	8b 83       	std	Y+3, r24	; 0x03
    2976:	9c 83       	std	Y+4, r25	; 0x04
    2978:	ce 01       	movw	r24, r28
    297a:	01 96       	adiw	r24, 0x01	; 1
    297c:	be 01       	movw	r22, r28
    297e:	6b 5f       	subi	r22, 0xFB	; 251
    2980:	7f 4f       	sbci	r23, 0xFF	; 255
    2982:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <__unpack_f>
    2986:	8d 81       	ldd	r24, Y+5	; 0x05
    2988:	82 30       	cpi	r24, 0x02	; 2
    298a:	61 f1       	breq	.+88     	; 0x29e4 <__fixsfsi+0x80>
    298c:	82 30       	cpi	r24, 0x02	; 2
    298e:	50 f1       	brcs	.+84     	; 0x29e4 <__fixsfsi+0x80>
    2990:	84 30       	cpi	r24, 0x04	; 4
    2992:	21 f4       	brne	.+8      	; 0x299c <__fixsfsi+0x38>
    2994:	8e 81       	ldd	r24, Y+6	; 0x06
    2996:	88 23       	and	r24, r24
    2998:	51 f1       	breq	.+84     	; 0x29ee <__fixsfsi+0x8a>
    299a:	2e c0       	rjmp	.+92     	; 0x29f8 <__fixsfsi+0x94>
    299c:	2f 81       	ldd	r18, Y+7	; 0x07
    299e:	38 85       	ldd	r19, Y+8	; 0x08
    29a0:	37 fd       	sbrc	r19, 7
    29a2:	20 c0       	rjmp	.+64     	; 0x29e4 <__fixsfsi+0x80>
    29a4:	6e 81       	ldd	r22, Y+6	; 0x06
    29a6:	2f 31       	cpi	r18, 0x1F	; 31
    29a8:	31 05       	cpc	r19, r1
    29aa:	1c f0       	brlt	.+6      	; 0x29b2 <__fixsfsi+0x4e>
    29ac:	66 23       	and	r22, r22
    29ae:	f9 f0       	breq	.+62     	; 0x29ee <__fixsfsi+0x8a>
    29b0:	23 c0       	rjmp	.+70     	; 0x29f8 <__fixsfsi+0x94>
    29b2:	8e e1       	ldi	r24, 0x1E	; 30
    29b4:	90 e0       	ldi	r25, 0x00	; 0
    29b6:	82 1b       	sub	r24, r18
    29b8:	93 0b       	sbc	r25, r19
    29ba:	29 85       	ldd	r18, Y+9	; 0x09
    29bc:	3a 85       	ldd	r19, Y+10	; 0x0a
    29be:	4b 85       	ldd	r20, Y+11	; 0x0b
    29c0:	5c 85       	ldd	r21, Y+12	; 0x0c
    29c2:	04 c0       	rjmp	.+8      	; 0x29cc <__fixsfsi+0x68>
    29c4:	56 95       	lsr	r21
    29c6:	47 95       	ror	r20
    29c8:	37 95       	ror	r19
    29ca:	27 95       	ror	r18
    29cc:	8a 95       	dec	r24
    29ce:	d2 f7       	brpl	.-12     	; 0x29c4 <__fixsfsi+0x60>
    29d0:	66 23       	and	r22, r22
    29d2:	b1 f0       	breq	.+44     	; 0x2a00 <__fixsfsi+0x9c>
    29d4:	50 95       	com	r21
    29d6:	40 95       	com	r20
    29d8:	30 95       	com	r19
    29da:	21 95       	neg	r18
    29dc:	3f 4f       	sbci	r19, 0xFF	; 255
    29de:	4f 4f       	sbci	r20, 0xFF	; 255
    29e0:	5f 4f       	sbci	r21, 0xFF	; 255
    29e2:	0e c0       	rjmp	.+28     	; 0x2a00 <__fixsfsi+0x9c>
    29e4:	20 e0       	ldi	r18, 0x00	; 0
    29e6:	30 e0       	ldi	r19, 0x00	; 0
    29e8:	40 e0       	ldi	r20, 0x00	; 0
    29ea:	50 e0       	ldi	r21, 0x00	; 0
    29ec:	09 c0       	rjmp	.+18     	; 0x2a00 <__fixsfsi+0x9c>
    29ee:	2f ef       	ldi	r18, 0xFF	; 255
    29f0:	3f ef       	ldi	r19, 0xFF	; 255
    29f2:	4f ef       	ldi	r20, 0xFF	; 255
    29f4:	5f e7       	ldi	r21, 0x7F	; 127
    29f6:	04 c0       	rjmp	.+8      	; 0x2a00 <__fixsfsi+0x9c>
    29f8:	20 e0       	ldi	r18, 0x00	; 0
    29fa:	30 e0       	ldi	r19, 0x00	; 0
    29fc:	40 e0       	ldi	r20, 0x00	; 0
    29fe:	50 e8       	ldi	r21, 0x80	; 128
    2a00:	b9 01       	movw	r22, r18
    2a02:	ca 01       	movw	r24, r20
    2a04:	2c 96       	adiw	r28, 0x0c	; 12
    2a06:	e2 e0       	ldi	r30, 0x02	; 2
    2a08:	0c 94 f7 25 	jmp	0x4bee	; 0x4bee <__epilogue_restores__+0x20>

00002a0c <__pack_f>:
    2a0c:	df 92       	push	r13
    2a0e:	ef 92       	push	r14
    2a10:	ff 92       	push	r15
    2a12:	0f 93       	push	r16
    2a14:	1f 93       	push	r17
    2a16:	fc 01       	movw	r30, r24
    2a18:	e4 80       	ldd	r14, Z+4	; 0x04
    2a1a:	f5 80       	ldd	r15, Z+5	; 0x05
    2a1c:	06 81       	ldd	r16, Z+6	; 0x06
    2a1e:	17 81       	ldd	r17, Z+7	; 0x07
    2a20:	d1 80       	ldd	r13, Z+1	; 0x01
    2a22:	80 81       	ld	r24, Z
    2a24:	82 30       	cpi	r24, 0x02	; 2
    2a26:	48 f4       	brcc	.+18     	; 0x2a3a <__pack_f+0x2e>
    2a28:	80 e0       	ldi	r24, 0x00	; 0
    2a2a:	90 e0       	ldi	r25, 0x00	; 0
    2a2c:	a0 e1       	ldi	r26, 0x10	; 16
    2a2e:	b0 e0       	ldi	r27, 0x00	; 0
    2a30:	e8 2a       	or	r14, r24
    2a32:	f9 2a       	or	r15, r25
    2a34:	0a 2b       	or	r16, r26
    2a36:	1b 2b       	or	r17, r27
    2a38:	a5 c0       	rjmp	.+330    	; 0x2b84 <__pack_f+0x178>
    2a3a:	84 30       	cpi	r24, 0x04	; 4
    2a3c:	09 f4       	brne	.+2      	; 0x2a40 <__pack_f+0x34>
    2a3e:	9f c0       	rjmp	.+318    	; 0x2b7e <__pack_f+0x172>
    2a40:	82 30       	cpi	r24, 0x02	; 2
    2a42:	21 f4       	brne	.+8      	; 0x2a4c <__pack_f+0x40>
    2a44:	ee 24       	eor	r14, r14
    2a46:	ff 24       	eor	r15, r15
    2a48:	87 01       	movw	r16, r14
    2a4a:	05 c0       	rjmp	.+10     	; 0x2a56 <__pack_f+0x4a>
    2a4c:	e1 14       	cp	r14, r1
    2a4e:	f1 04       	cpc	r15, r1
    2a50:	01 05       	cpc	r16, r1
    2a52:	11 05       	cpc	r17, r1
    2a54:	19 f4       	brne	.+6      	; 0x2a5c <__pack_f+0x50>
    2a56:	e0 e0       	ldi	r30, 0x00	; 0
    2a58:	f0 e0       	ldi	r31, 0x00	; 0
    2a5a:	96 c0       	rjmp	.+300    	; 0x2b88 <__pack_f+0x17c>
    2a5c:	62 81       	ldd	r22, Z+2	; 0x02
    2a5e:	73 81       	ldd	r23, Z+3	; 0x03
    2a60:	9f ef       	ldi	r25, 0xFF	; 255
    2a62:	62 38       	cpi	r22, 0x82	; 130
    2a64:	79 07       	cpc	r23, r25
    2a66:	0c f0       	brlt	.+2      	; 0x2a6a <__pack_f+0x5e>
    2a68:	5b c0       	rjmp	.+182    	; 0x2b20 <__pack_f+0x114>
    2a6a:	22 e8       	ldi	r18, 0x82	; 130
    2a6c:	3f ef       	ldi	r19, 0xFF	; 255
    2a6e:	26 1b       	sub	r18, r22
    2a70:	37 0b       	sbc	r19, r23
    2a72:	2a 31       	cpi	r18, 0x1A	; 26
    2a74:	31 05       	cpc	r19, r1
    2a76:	2c f0       	brlt	.+10     	; 0x2a82 <__pack_f+0x76>
    2a78:	20 e0       	ldi	r18, 0x00	; 0
    2a7a:	30 e0       	ldi	r19, 0x00	; 0
    2a7c:	40 e0       	ldi	r20, 0x00	; 0
    2a7e:	50 e0       	ldi	r21, 0x00	; 0
    2a80:	2a c0       	rjmp	.+84     	; 0x2ad6 <__pack_f+0xca>
    2a82:	b8 01       	movw	r22, r16
    2a84:	a7 01       	movw	r20, r14
    2a86:	02 2e       	mov	r0, r18
    2a88:	04 c0       	rjmp	.+8      	; 0x2a92 <__pack_f+0x86>
    2a8a:	76 95       	lsr	r23
    2a8c:	67 95       	ror	r22
    2a8e:	57 95       	ror	r21
    2a90:	47 95       	ror	r20
    2a92:	0a 94       	dec	r0
    2a94:	d2 f7       	brpl	.-12     	; 0x2a8a <__pack_f+0x7e>
    2a96:	81 e0       	ldi	r24, 0x01	; 1
    2a98:	90 e0       	ldi	r25, 0x00	; 0
    2a9a:	a0 e0       	ldi	r26, 0x00	; 0
    2a9c:	b0 e0       	ldi	r27, 0x00	; 0
    2a9e:	04 c0       	rjmp	.+8      	; 0x2aa8 <__pack_f+0x9c>
    2aa0:	88 0f       	add	r24, r24
    2aa2:	99 1f       	adc	r25, r25
    2aa4:	aa 1f       	adc	r26, r26
    2aa6:	bb 1f       	adc	r27, r27
    2aa8:	2a 95       	dec	r18
    2aaa:	d2 f7       	brpl	.-12     	; 0x2aa0 <__pack_f+0x94>
    2aac:	01 97       	sbiw	r24, 0x01	; 1
    2aae:	a1 09       	sbc	r26, r1
    2ab0:	b1 09       	sbc	r27, r1
    2ab2:	8e 21       	and	r24, r14
    2ab4:	9f 21       	and	r25, r15
    2ab6:	a0 23       	and	r26, r16
    2ab8:	b1 23       	and	r27, r17
    2aba:	00 97       	sbiw	r24, 0x00	; 0
    2abc:	a1 05       	cpc	r26, r1
    2abe:	b1 05       	cpc	r27, r1
    2ac0:	21 f0       	breq	.+8      	; 0x2aca <__pack_f+0xbe>
    2ac2:	81 e0       	ldi	r24, 0x01	; 1
    2ac4:	90 e0       	ldi	r25, 0x00	; 0
    2ac6:	a0 e0       	ldi	r26, 0x00	; 0
    2ac8:	b0 e0       	ldi	r27, 0x00	; 0
    2aca:	9a 01       	movw	r18, r20
    2acc:	ab 01       	movw	r20, r22
    2ace:	28 2b       	or	r18, r24
    2ad0:	39 2b       	or	r19, r25
    2ad2:	4a 2b       	or	r20, r26
    2ad4:	5b 2b       	or	r21, r27
    2ad6:	da 01       	movw	r26, r20
    2ad8:	c9 01       	movw	r24, r18
    2ada:	8f 77       	andi	r24, 0x7F	; 127
    2adc:	90 70       	andi	r25, 0x00	; 0
    2ade:	a0 70       	andi	r26, 0x00	; 0
    2ae0:	b0 70       	andi	r27, 0x00	; 0
    2ae2:	80 34       	cpi	r24, 0x40	; 64
    2ae4:	91 05       	cpc	r25, r1
    2ae6:	a1 05       	cpc	r26, r1
    2ae8:	b1 05       	cpc	r27, r1
    2aea:	39 f4       	brne	.+14     	; 0x2afa <__pack_f+0xee>
    2aec:	27 ff       	sbrs	r18, 7
    2aee:	09 c0       	rjmp	.+18     	; 0x2b02 <__pack_f+0xf6>
    2af0:	20 5c       	subi	r18, 0xC0	; 192
    2af2:	3f 4f       	sbci	r19, 0xFF	; 255
    2af4:	4f 4f       	sbci	r20, 0xFF	; 255
    2af6:	5f 4f       	sbci	r21, 0xFF	; 255
    2af8:	04 c0       	rjmp	.+8      	; 0x2b02 <__pack_f+0xf6>
    2afa:	21 5c       	subi	r18, 0xC1	; 193
    2afc:	3f 4f       	sbci	r19, 0xFF	; 255
    2afe:	4f 4f       	sbci	r20, 0xFF	; 255
    2b00:	5f 4f       	sbci	r21, 0xFF	; 255
    2b02:	e0 e0       	ldi	r30, 0x00	; 0
    2b04:	f0 e0       	ldi	r31, 0x00	; 0
    2b06:	20 30       	cpi	r18, 0x00	; 0
    2b08:	a0 e0       	ldi	r26, 0x00	; 0
    2b0a:	3a 07       	cpc	r19, r26
    2b0c:	a0 e0       	ldi	r26, 0x00	; 0
    2b0e:	4a 07       	cpc	r20, r26
    2b10:	a0 e4       	ldi	r26, 0x40	; 64
    2b12:	5a 07       	cpc	r21, r26
    2b14:	10 f0       	brcs	.+4      	; 0x2b1a <__pack_f+0x10e>
    2b16:	e1 e0       	ldi	r30, 0x01	; 1
    2b18:	f0 e0       	ldi	r31, 0x00	; 0
    2b1a:	79 01       	movw	r14, r18
    2b1c:	8a 01       	movw	r16, r20
    2b1e:	27 c0       	rjmp	.+78     	; 0x2b6e <__pack_f+0x162>
    2b20:	60 38       	cpi	r22, 0x80	; 128
    2b22:	71 05       	cpc	r23, r1
    2b24:	64 f5       	brge	.+88     	; 0x2b7e <__pack_f+0x172>
    2b26:	fb 01       	movw	r30, r22
    2b28:	e1 58       	subi	r30, 0x81	; 129
    2b2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2c:	d8 01       	movw	r26, r16
    2b2e:	c7 01       	movw	r24, r14
    2b30:	8f 77       	andi	r24, 0x7F	; 127
    2b32:	90 70       	andi	r25, 0x00	; 0
    2b34:	a0 70       	andi	r26, 0x00	; 0
    2b36:	b0 70       	andi	r27, 0x00	; 0
    2b38:	80 34       	cpi	r24, 0x40	; 64
    2b3a:	91 05       	cpc	r25, r1
    2b3c:	a1 05       	cpc	r26, r1
    2b3e:	b1 05       	cpc	r27, r1
    2b40:	39 f4       	brne	.+14     	; 0x2b50 <__pack_f+0x144>
    2b42:	e7 fe       	sbrs	r14, 7
    2b44:	0d c0       	rjmp	.+26     	; 0x2b60 <__pack_f+0x154>
    2b46:	80 e4       	ldi	r24, 0x40	; 64
    2b48:	90 e0       	ldi	r25, 0x00	; 0
    2b4a:	a0 e0       	ldi	r26, 0x00	; 0
    2b4c:	b0 e0       	ldi	r27, 0x00	; 0
    2b4e:	04 c0       	rjmp	.+8      	; 0x2b58 <__pack_f+0x14c>
    2b50:	8f e3       	ldi	r24, 0x3F	; 63
    2b52:	90 e0       	ldi	r25, 0x00	; 0
    2b54:	a0 e0       	ldi	r26, 0x00	; 0
    2b56:	b0 e0       	ldi	r27, 0x00	; 0
    2b58:	e8 0e       	add	r14, r24
    2b5a:	f9 1e       	adc	r15, r25
    2b5c:	0a 1f       	adc	r16, r26
    2b5e:	1b 1f       	adc	r17, r27
    2b60:	17 ff       	sbrs	r17, 7
    2b62:	05 c0       	rjmp	.+10     	; 0x2b6e <__pack_f+0x162>
    2b64:	16 95       	lsr	r17
    2b66:	07 95       	ror	r16
    2b68:	f7 94       	ror	r15
    2b6a:	e7 94       	ror	r14
    2b6c:	31 96       	adiw	r30, 0x01	; 1
    2b6e:	87 e0       	ldi	r24, 0x07	; 7
    2b70:	16 95       	lsr	r17
    2b72:	07 95       	ror	r16
    2b74:	f7 94       	ror	r15
    2b76:	e7 94       	ror	r14
    2b78:	8a 95       	dec	r24
    2b7a:	d1 f7       	brne	.-12     	; 0x2b70 <__pack_f+0x164>
    2b7c:	05 c0       	rjmp	.+10     	; 0x2b88 <__pack_f+0x17c>
    2b7e:	ee 24       	eor	r14, r14
    2b80:	ff 24       	eor	r15, r15
    2b82:	87 01       	movw	r16, r14
    2b84:	ef ef       	ldi	r30, 0xFF	; 255
    2b86:	f0 e0       	ldi	r31, 0x00	; 0
    2b88:	6e 2f       	mov	r22, r30
    2b8a:	67 95       	ror	r22
    2b8c:	66 27       	eor	r22, r22
    2b8e:	67 95       	ror	r22
    2b90:	90 2f       	mov	r25, r16
    2b92:	9f 77       	andi	r25, 0x7F	; 127
    2b94:	d7 94       	ror	r13
    2b96:	dd 24       	eor	r13, r13
    2b98:	d7 94       	ror	r13
    2b9a:	8e 2f       	mov	r24, r30
    2b9c:	86 95       	lsr	r24
    2b9e:	49 2f       	mov	r20, r25
    2ba0:	46 2b       	or	r20, r22
    2ba2:	58 2f       	mov	r21, r24
    2ba4:	5d 29       	or	r21, r13
    2ba6:	b7 01       	movw	r22, r14
    2ba8:	ca 01       	movw	r24, r20
    2baa:	1f 91       	pop	r17
    2bac:	0f 91       	pop	r16
    2bae:	ff 90       	pop	r15
    2bb0:	ef 90       	pop	r14
    2bb2:	df 90       	pop	r13
    2bb4:	08 95       	ret

00002bb6 <__unpack_f>:
    2bb6:	fc 01       	movw	r30, r24
    2bb8:	db 01       	movw	r26, r22
    2bba:	40 81       	ld	r20, Z
    2bbc:	51 81       	ldd	r21, Z+1	; 0x01
    2bbe:	22 81       	ldd	r18, Z+2	; 0x02
    2bc0:	62 2f       	mov	r22, r18
    2bc2:	6f 77       	andi	r22, 0x7F	; 127
    2bc4:	70 e0       	ldi	r23, 0x00	; 0
    2bc6:	22 1f       	adc	r18, r18
    2bc8:	22 27       	eor	r18, r18
    2bca:	22 1f       	adc	r18, r18
    2bcc:	93 81       	ldd	r25, Z+3	; 0x03
    2bce:	89 2f       	mov	r24, r25
    2bd0:	88 0f       	add	r24, r24
    2bd2:	82 2b       	or	r24, r18
    2bd4:	28 2f       	mov	r18, r24
    2bd6:	30 e0       	ldi	r19, 0x00	; 0
    2bd8:	99 1f       	adc	r25, r25
    2bda:	99 27       	eor	r25, r25
    2bdc:	99 1f       	adc	r25, r25
    2bde:	11 96       	adiw	r26, 0x01	; 1
    2be0:	9c 93       	st	X, r25
    2be2:	11 97       	sbiw	r26, 0x01	; 1
    2be4:	21 15       	cp	r18, r1
    2be6:	31 05       	cpc	r19, r1
    2be8:	a9 f5       	brne	.+106    	; 0x2c54 <__unpack_f+0x9e>
    2bea:	41 15       	cp	r20, r1
    2bec:	51 05       	cpc	r21, r1
    2bee:	61 05       	cpc	r22, r1
    2bf0:	71 05       	cpc	r23, r1
    2bf2:	11 f4       	brne	.+4      	; 0x2bf8 <__unpack_f+0x42>
    2bf4:	82 e0       	ldi	r24, 0x02	; 2
    2bf6:	37 c0       	rjmp	.+110    	; 0x2c66 <__unpack_f+0xb0>
    2bf8:	82 e8       	ldi	r24, 0x82	; 130
    2bfa:	9f ef       	ldi	r25, 0xFF	; 255
    2bfc:	13 96       	adiw	r26, 0x03	; 3
    2bfe:	9c 93       	st	X, r25
    2c00:	8e 93       	st	-X, r24
    2c02:	12 97       	sbiw	r26, 0x02	; 2
    2c04:	9a 01       	movw	r18, r20
    2c06:	ab 01       	movw	r20, r22
    2c08:	67 e0       	ldi	r22, 0x07	; 7
    2c0a:	22 0f       	add	r18, r18
    2c0c:	33 1f       	adc	r19, r19
    2c0e:	44 1f       	adc	r20, r20
    2c10:	55 1f       	adc	r21, r21
    2c12:	6a 95       	dec	r22
    2c14:	d1 f7       	brne	.-12     	; 0x2c0a <__unpack_f+0x54>
    2c16:	83 e0       	ldi	r24, 0x03	; 3
    2c18:	8c 93       	st	X, r24
    2c1a:	0d c0       	rjmp	.+26     	; 0x2c36 <__unpack_f+0x80>
    2c1c:	22 0f       	add	r18, r18
    2c1e:	33 1f       	adc	r19, r19
    2c20:	44 1f       	adc	r20, r20
    2c22:	55 1f       	adc	r21, r21
    2c24:	12 96       	adiw	r26, 0x02	; 2
    2c26:	8d 91       	ld	r24, X+
    2c28:	9c 91       	ld	r25, X
    2c2a:	13 97       	sbiw	r26, 0x03	; 3
    2c2c:	01 97       	sbiw	r24, 0x01	; 1
    2c2e:	13 96       	adiw	r26, 0x03	; 3
    2c30:	9c 93       	st	X, r25
    2c32:	8e 93       	st	-X, r24
    2c34:	12 97       	sbiw	r26, 0x02	; 2
    2c36:	20 30       	cpi	r18, 0x00	; 0
    2c38:	80 e0       	ldi	r24, 0x00	; 0
    2c3a:	38 07       	cpc	r19, r24
    2c3c:	80 e0       	ldi	r24, 0x00	; 0
    2c3e:	48 07       	cpc	r20, r24
    2c40:	80 e4       	ldi	r24, 0x40	; 64
    2c42:	58 07       	cpc	r21, r24
    2c44:	58 f3       	brcs	.-42     	; 0x2c1c <__unpack_f+0x66>
    2c46:	14 96       	adiw	r26, 0x04	; 4
    2c48:	2d 93       	st	X+, r18
    2c4a:	3d 93       	st	X+, r19
    2c4c:	4d 93       	st	X+, r20
    2c4e:	5c 93       	st	X, r21
    2c50:	17 97       	sbiw	r26, 0x07	; 7
    2c52:	08 95       	ret
    2c54:	2f 3f       	cpi	r18, 0xFF	; 255
    2c56:	31 05       	cpc	r19, r1
    2c58:	79 f4       	brne	.+30     	; 0x2c78 <__unpack_f+0xc2>
    2c5a:	41 15       	cp	r20, r1
    2c5c:	51 05       	cpc	r21, r1
    2c5e:	61 05       	cpc	r22, r1
    2c60:	71 05       	cpc	r23, r1
    2c62:	19 f4       	brne	.+6      	; 0x2c6a <__unpack_f+0xb4>
    2c64:	84 e0       	ldi	r24, 0x04	; 4
    2c66:	8c 93       	st	X, r24
    2c68:	08 95       	ret
    2c6a:	64 ff       	sbrs	r22, 4
    2c6c:	03 c0       	rjmp	.+6      	; 0x2c74 <__unpack_f+0xbe>
    2c6e:	81 e0       	ldi	r24, 0x01	; 1
    2c70:	8c 93       	st	X, r24
    2c72:	12 c0       	rjmp	.+36     	; 0x2c98 <__unpack_f+0xe2>
    2c74:	1c 92       	st	X, r1
    2c76:	10 c0       	rjmp	.+32     	; 0x2c98 <__unpack_f+0xe2>
    2c78:	2f 57       	subi	r18, 0x7F	; 127
    2c7a:	30 40       	sbci	r19, 0x00	; 0
    2c7c:	13 96       	adiw	r26, 0x03	; 3
    2c7e:	3c 93       	st	X, r19
    2c80:	2e 93       	st	-X, r18
    2c82:	12 97       	sbiw	r26, 0x02	; 2
    2c84:	83 e0       	ldi	r24, 0x03	; 3
    2c86:	8c 93       	st	X, r24
    2c88:	87 e0       	ldi	r24, 0x07	; 7
    2c8a:	44 0f       	add	r20, r20
    2c8c:	55 1f       	adc	r21, r21
    2c8e:	66 1f       	adc	r22, r22
    2c90:	77 1f       	adc	r23, r23
    2c92:	8a 95       	dec	r24
    2c94:	d1 f7       	brne	.-12     	; 0x2c8a <__unpack_f+0xd4>
    2c96:	70 64       	ori	r23, 0x40	; 64
    2c98:	14 96       	adiw	r26, 0x04	; 4
    2c9a:	4d 93       	st	X+, r20
    2c9c:	5d 93       	st	X+, r21
    2c9e:	6d 93       	st	X+, r22
    2ca0:	7c 93       	st	X, r23
    2ca2:	17 97       	sbiw	r26, 0x07	; 7
    2ca4:	08 95       	ret

00002ca6 <__fpcmp_parts_f>:
    2ca6:	1f 93       	push	r17
    2ca8:	dc 01       	movw	r26, r24
    2caa:	fb 01       	movw	r30, r22
    2cac:	9c 91       	ld	r25, X
    2cae:	92 30       	cpi	r25, 0x02	; 2
    2cb0:	08 f4       	brcc	.+2      	; 0x2cb4 <__fpcmp_parts_f+0xe>
    2cb2:	47 c0       	rjmp	.+142    	; 0x2d42 <__fpcmp_parts_f+0x9c>
    2cb4:	80 81       	ld	r24, Z
    2cb6:	82 30       	cpi	r24, 0x02	; 2
    2cb8:	08 f4       	brcc	.+2      	; 0x2cbc <__fpcmp_parts_f+0x16>
    2cba:	43 c0       	rjmp	.+134    	; 0x2d42 <__fpcmp_parts_f+0x9c>
    2cbc:	94 30       	cpi	r25, 0x04	; 4
    2cbe:	51 f4       	brne	.+20     	; 0x2cd4 <__fpcmp_parts_f+0x2e>
    2cc0:	11 96       	adiw	r26, 0x01	; 1
    2cc2:	1c 91       	ld	r17, X
    2cc4:	84 30       	cpi	r24, 0x04	; 4
    2cc6:	99 f5       	brne	.+102    	; 0x2d2e <__fpcmp_parts_f+0x88>
    2cc8:	81 81       	ldd	r24, Z+1	; 0x01
    2cca:	68 2f       	mov	r22, r24
    2ccc:	70 e0       	ldi	r23, 0x00	; 0
    2cce:	61 1b       	sub	r22, r17
    2cd0:	71 09       	sbc	r23, r1
    2cd2:	3f c0       	rjmp	.+126    	; 0x2d52 <__fpcmp_parts_f+0xac>
    2cd4:	84 30       	cpi	r24, 0x04	; 4
    2cd6:	21 f0       	breq	.+8      	; 0x2ce0 <__fpcmp_parts_f+0x3a>
    2cd8:	92 30       	cpi	r25, 0x02	; 2
    2cda:	31 f4       	brne	.+12     	; 0x2ce8 <__fpcmp_parts_f+0x42>
    2cdc:	82 30       	cpi	r24, 0x02	; 2
    2cde:	b9 f1       	breq	.+110    	; 0x2d4e <__fpcmp_parts_f+0xa8>
    2ce0:	81 81       	ldd	r24, Z+1	; 0x01
    2ce2:	88 23       	and	r24, r24
    2ce4:	89 f1       	breq	.+98     	; 0x2d48 <__fpcmp_parts_f+0xa2>
    2ce6:	2d c0       	rjmp	.+90     	; 0x2d42 <__fpcmp_parts_f+0x9c>
    2ce8:	11 96       	adiw	r26, 0x01	; 1
    2cea:	1c 91       	ld	r17, X
    2cec:	11 97       	sbiw	r26, 0x01	; 1
    2cee:	82 30       	cpi	r24, 0x02	; 2
    2cf0:	f1 f0       	breq	.+60     	; 0x2d2e <__fpcmp_parts_f+0x88>
    2cf2:	81 81       	ldd	r24, Z+1	; 0x01
    2cf4:	18 17       	cp	r17, r24
    2cf6:	d9 f4       	brne	.+54     	; 0x2d2e <__fpcmp_parts_f+0x88>
    2cf8:	12 96       	adiw	r26, 0x02	; 2
    2cfa:	2d 91       	ld	r18, X+
    2cfc:	3c 91       	ld	r19, X
    2cfe:	13 97       	sbiw	r26, 0x03	; 3
    2d00:	82 81       	ldd	r24, Z+2	; 0x02
    2d02:	93 81       	ldd	r25, Z+3	; 0x03
    2d04:	82 17       	cp	r24, r18
    2d06:	93 07       	cpc	r25, r19
    2d08:	94 f0       	brlt	.+36     	; 0x2d2e <__fpcmp_parts_f+0x88>
    2d0a:	28 17       	cp	r18, r24
    2d0c:	39 07       	cpc	r19, r25
    2d0e:	bc f0       	brlt	.+46     	; 0x2d3e <__fpcmp_parts_f+0x98>
    2d10:	14 96       	adiw	r26, 0x04	; 4
    2d12:	8d 91       	ld	r24, X+
    2d14:	9d 91       	ld	r25, X+
    2d16:	0d 90       	ld	r0, X+
    2d18:	bc 91       	ld	r27, X
    2d1a:	a0 2d       	mov	r26, r0
    2d1c:	24 81       	ldd	r18, Z+4	; 0x04
    2d1e:	35 81       	ldd	r19, Z+5	; 0x05
    2d20:	46 81       	ldd	r20, Z+6	; 0x06
    2d22:	57 81       	ldd	r21, Z+7	; 0x07
    2d24:	28 17       	cp	r18, r24
    2d26:	39 07       	cpc	r19, r25
    2d28:	4a 07       	cpc	r20, r26
    2d2a:	5b 07       	cpc	r21, r27
    2d2c:	18 f4       	brcc	.+6      	; 0x2d34 <__fpcmp_parts_f+0x8e>
    2d2e:	11 23       	and	r17, r17
    2d30:	41 f0       	breq	.+16     	; 0x2d42 <__fpcmp_parts_f+0x9c>
    2d32:	0a c0       	rjmp	.+20     	; 0x2d48 <__fpcmp_parts_f+0xa2>
    2d34:	82 17       	cp	r24, r18
    2d36:	93 07       	cpc	r25, r19
    2d38:	a4 07       	cpc	r26, r20
    2d3a:	b5 07       	cpc	r27, r21
    2d3c:	40 f4       	brcc	.+16     	; 0x2d4e <__fpcmp_parts_f+0xa8>
    2d3e:	11 23       	and	r17, r17
    2d40:	19 f0       	breq	.+6      	; 0x2d48 <__fpcmp_parts_f+0xa2>
    2d42:	61 e0       	ldi	r22, 0x01	; 1
    2d44:	70 e0       	ldi	r23, 0x00	; 0
    2d46:	05 c0       	rjmp	.+10     	; 0x2d52 <__fpcmp_parts_f+0xac>
    2d48:	6f ef       	ldi	r22, 0xFF	; 255
    2d4a:	7f ef       	ldi	r23, 0xFF	; 255
    2d4c:	02 c0       	rjmp	.+4      	; 0x2d52 <__fpcmp_parts_f+0xac>
    2d4e:	60 e0       	ldi	r22, 0x00	; 0
    2d50:	70 e0       	ldi	r23, 0x00	; 0
    2d52:	cb 01       	movw	r24, r22
    2d54:	1f 91       	pop	r17
    2d56:	08 95       	ret

00002d58 <DIO_setPinDirection>:
/* MCAL */
#include "DIO_interface.h"
#include "DIO_private.h"

void DIO_setPinDirection(u8 PortId, u8 PinId, u8 PinDirection)
{
    2d58:	df 93       	push	r29
    2d5a:	cf 93       	push	r28
    2d5c:	00 d0       	rcall	.+0      	; 0x2d5e <DIO_setPinDirection+0x6>
    2d5e:	00 d0       	rcall	.+0      	; 0x2d60 <DIO_setPinDirection+0x8>
    2d60:	0f 92       	push	r0
    2d62:	cd b7       	in	r28, 0x3d	; 61
    2d64:	de b7       	in	r29, 0x3e	; 62
    2d66:	89 83       	std	Y+1, r24	; 0x01
    2d68:	6a 83       	std	Y+2, r22	; 0x02
    2d6a:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && ((PinDirection==DIO_PIN_OUTPUT)||(PinDirection==DIO_PIN_INPUT)))
    2d6c:	89 81       	ldd	r24, Y+1	; 0x01
    2d6e:	84 30       	cpi	r24, 0x04	; 4
    2d70:	08 f0       	brcs	.+2      	; 0x2d74 <DIO_setPinDirection+0x1c>
    2d72:	dc c0       	rjmp	.+440    	; 0x2f2c <DIO_setPinDirection+0x1d4>
    2d74:	8a 81       	ldd	r24, Y+2	; 0x02
    2d76:	88 30       	cpi	r24, 0x08	; 8
    2d78:	08 f0       	brcs	.+2      	; 0x2d7c <DIO_setPinDirection+0x24>
    2d7a:	d8 c0       	rjmp	.+432    	; 0x2f2c <DIO_setPinDirection+0x1d4>
    2d7c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d7e:	81 30       	cpi	r24, 0x01	; 1
    2d80:	21 f0       	breq	.+8      	; 0x2d8a <DIO_setPinDirection+0x32>
    2d82:	8b 81       	ldd	r24, Y+3	; 0x03
    2d84:	88 23       	and	r24, r24
    2d86:	09 f0       	breq	.+2      	; 0x2d8a <DIO_setPinDirection+0x32>
    2d88:	d1 c0       	rjmp	.+418    	; 0x2f2c <DIO_setPinDirection+0x1d4>
	{
		switch(PortId)
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
    2d8c:	28 2f       	mov	r18, r24
    2d8e:	30 e0       	ldi	r19, 0x00	; 0
    2d90:	3d 83       	std	Y+5, r19	; 0x05
    2d92:	2c 83       	std	Y+4, r18	; 0x04
    2d94:	8c 81       	ldd	r24, Y+4	; 0x04
    2d96:	9d 81       	ldd	r25, Y+5	; 0x05
    2d98:	81 30       	cpi	r24, 0x01	; 1
    2d9a:	91 05       	cpc	r25, r1
    2d9c:	09 f4       	brne	.+2      	; 0x2da0 <DIO_setPinDirection+0x48>
    2d9e:	43 c0       	rjmp	.+134    	; 0x2e26 <DIO_setPinDirection+0xce>
    2da0:	2c 81       	ldd	r18, Y+4	; 0x04
    2da2:	3d 81       	ldd	r19, Y+5	; 0x05
    2da4:	22 30       	cpi	r18, 0x02	; 2
    2da6:	31 05       	cpc	r19, r1
    2da8:	2c f4       	brge	.+10     	; 0x2db4 <DIO_setPinDirection+0x5c>
    2daa:	8c 81       	ldd	r24, Y+4	; 0x04
    2dac:	9d 81       	ldd	r25, Y+5	; 0x05
    2dae:	00 97       	sbiw	r24, 0x00	; 0
    2db0:	71 f0       	breq	.+28     	; 0x2dce <DIO_setPinDirection+0x76>
    2db2:	bc c0       	rjmp	.+376    	; 0x2f2c <DIO_setPinDirection+0x1d4>
    2db4:	2c 81       	ldd	r18, Y+4	; 0x04
    2db6:	3d 81       	ldd	r19, Y+5	; 0x05
    2db8:	22 30       	cpi	r18, 0x02	; 2
    2dba:	31 05       	cpc	r19, r1
    2dbc:	09 f4       	brne	.+2      	; 0x2dc0 <DIO_setPinDirection+0x68>
    2dbe:	5f c0       	rjmp	.+190    	; 0x2e7e <DIO_setPinDirection+0x126>
    2dc0:	8c 81       	ldd	r24, Y+4	; 0x04
    2dc2:	9d 81       	ldd	r25, Y+5	; 0x05
    2dc4:	83 30       	cpi	r24, 0x03	; 3
    2dc6:	91 05       	cpc	r25, r1
    2dc8:	09 f4       	brne	.+2      	; 0x2dcc <DIO_setPinDirection+0x74>
    2dca:	85 c0       	rjmp	.+266    	; 0x2ed6 <DIO_setPinDirection+0x17e>
    2dcc:	af c0       	rjmp	.+350    	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    {
	    	case DIO_PORTA: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
    2dce:	8b 81       	ldd	r24, Y+3	; 0x03
    2dd0:	81 30       	cpi	r24, 0x01	; 1
    2dd2:	a1 f4       	brne	.+40     	; 0x2dfc <DIO_setPinDirection+0xa4>
	    	{
	    		SET_BIT(DDRA,PinId);
    2dd4:	aa e3       	ldi	r26, 0x3A	; 58
    2dd6:	b0 e0       	ldi	r27, 0x00	; 0
    2dd8:	ea e3       	ldi	r30, 0x3A	; 58
    2dda:	f0 e0       	ldi	r31, 0x00	; 0
    2ddc:	80 81       	ld	r24, Z
    2dde:	48 2f       	mov	r20, r24
    2de0:	8a 81       	ldd	r24, Y+2	; 0x02
    2de2:	28 2f       	mov	r18, r24
    2de4:	30 e0       	ldi	r19, 0x00	; 0
    2de6:	81 e0       	ldi	r24, 0x01	; 1
    2de8:	90 e0       	ldi	r25, 0x00	; 0
    2dea:	02 2e       	mov	r0, r18
    2dec:	02 c0       	rjmp	.+4      	; 0x2df2 <DIO_setPinDirection+0x9a>
    2dee:	88 0f       	add	r24, r24
    2df0:	99 1f       	adc	r25, r25
    2df2:	0a 94       	dec	r0
    2df4:	e2 f7       	brpl	.-8      	; 0x2dee <DIO_setPinDirection+0x96>
    2df6:	84 2b       	or	r24, r20
    2df8:	8c 93       	st	X, r24
    2dfa:	98 c0       	rjmp	.+304    	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRA,PinId);
    2dfc:	aa e3       	ldi	r26, 0x3A	; 58
    2dfe:	b0 e0       	ldi	r27, 0x00	; 0
    2e00:	ea e3       	ldi	r30, 0x3A	; 58
    2e02:	f0 e0       	ldi	r31, 0x00	; 0
    2e04:	80 81       	ld	r24, Z
    2e06:	48 2f       	mov	r20, r24
    2e08:	8a 81       	ldd	r24, Y+2	; 0x02
    2e0a:	28 2f       	mov	r18, r24
    2e0c:	30 e0       	ldi	r19, 0x00	; 0
    2e0e:	81 e0       	ldi	r24, 0x01	; 1
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	02 2e       	mov	r0, r18
    2e14:	02 c0       	rjmp	.+4      	; 0x2e1a <DIO_setPinDirection+0xc2>
    2e16:	88 0f       	add	r24, r24
    2e18:	99 1f       	adc	r25, r25
    2e1a:	0a 94       	dec	r0
    2e1c:	e2 f7       	brpl	.-8      	; 0x2e16 <DIO_setPinDirection+0xbe>
    2e1e:	80 95       	com	r24
    2e20:	84 23       	and	r24, r20
    2e22:	8c 93       	st	X, r24
    2e24:	83 c0       	rjmp	.+262    	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTB: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
    2e26:	8b 81       	ldd	r24, Y+3	; 0x03
    2e28:	81 30       	cpi	r24, 0x01	; 1
    2e2a:	a1 f4       	brne	.+40     	; 0x2e54 <DIO_setPinDirection+0xfc>
	    	{
	    		SET_BIT(DDRB,PinId);
    2e2c:	a7 e3       	ldi	r26, 0x37	; 55
    2e2e:	b0 e0       	ldi	r27, 0x00	; 0
    2e30:	e7 e3       	ldi	r30, 0x37	; 55
    2e32:	f0 e0       	ldi	r31, 0x00	; 0
    2e34:	80 81       	ld	r24, Z
    2e36:	48 2f       	mov	r20, r24
    2e38:	8a 81       	ldd	r24, Y+2	; 0x02
    2e3a:	28 2f       	mov	r18, r24
    2e3c:	30 e0       	ldi	r19, 0x00	; 0
    2e3e:	81 e0       	ldi	r24, 0x01	; 1
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	02 2e       	mov	r0, r18
    2e44:	02 c0       	rjmp	.+4      	; 0x2e4a <DIO_setPinDirection+0xf2>
    2e46:	88 0f       	add	r24, r24
    2e48:	99 1f       	adc	r25, r25
    2e4a:	0a 94       	dec	r0
    2e4c:	e2 f7       	brpl	.-8      	; 0x2e46 <DIO_setPinDirection+0xee>
    2e4e:	84 2b       	or	r24, r20
    2e50:	8c 93       	st	X, r24
    2e52:	6c c0       	rjmp	.+216    	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRB,PinId);
    2e54:	a7 e3       	ldi	r26, 0x37	; 55
    2e56:	b0 e0       	ldi	r27, 0x00	; 0
    2e58:	e7 e3       	ldi	r30, 0x37	; 55
    2e5a:	f0 e0       	ldi	r31, 0x00	; 0
    2e5c:	80 81       	ld	r24, Z
    2e5e:	48 2f       	mov	r20, r24
    2e60:	8a 81       	ldd	r24, Y+2	; 0x02
    2e62:	28 2f       	mov	r18, r24
    2e64:	30 e0       	ldi	r19, 0x00	; 0
    2e66:	81 e0       	ldi	r24, 0x01	; 1
    2e68:	90 e0       	ldi	r25, 0x00	; 0
    2e6a:	02 2e       	mov	r0, r18
    2e6c:	02 c0       	rjmp	.+4      	; 0x2e72 <DIO_setPinDirection+0x11a>
    2e6e:	88 0f       	add	r24, r24
    2e70:	99 1f       	adc	r25, r25
    2e72:	0a 94       	dec	r0
    2e74:	e2 f7       	brpl	.-8      	; 0x2e6e <DIO_setPinDirection+0x116>
    2e76:	80 95       	com	r24
    2e78:	84 23       	and	r24, r20
    2e7a:	8c 93       	st	X, r24
    2e7c:	57 c0       	rjmp	.+174    	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTC: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
    2e7e:	8b 81       	ldd	r24, Y+3	; 0x03
    2e80:	81 30       	cpi	r24, 0x01	; 1
    2e82:	a1 f4       	brne	.+40     	; 0x2eac <DIO_setPinDirection+0x154>
	    	{
	    		SET_BIT(DDRC,PinId);
    2e84:	a4 e3       	ldi	r26, 0x34	; 52
    2e86:	b0 e0       	ldi	r27, 0x00	; 0
    2e88:	e4 e3       	ldi	r30, 0x34	; 52
    2e8a:	f0 e0       	ldi	r31, 0x00	; 0
    2e8c:	80 81       	ld	r24, Z
    2e8e:	48 2f       	mov	r20, r24
    2e90:	8a 81       	ldd	r24, Y+2	; 0x02
    2e92:	28 2f       	mov	r18, r24
    2e94:	30 e0       	ldi	r19, 0x00	; 0
    2e96:	81 e0       	ldi	r24, 0x01	; 1
    2e98:	90 e0       	ldi	r25, 0x00	; 0
    2e9a:	02 2e       	mov	r0, r18
    2e9c:	02 c0       	rjmp	.+4      	; 0x2ea2 <DIO_setPinDirection+0x14a>
    2e9e:	88 0f       	add	r24, r24
    2ea0:	99 1f       	adc	r25, r25
    2ea2:	0a 94       	dec	r0
    2ea4:	e2 f7       	brpl	.-8      	; 0x2e9e <DIO_setPinDirection+0x146>
    2ea6:	84 2b       	or	r24, r20
    2ea8:	8c 93       	st	X, r24
    2eaa:	40 c0       	rjmp	.+128    	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRC,PinId);
    2eac:	a4 e3       	ldi	r26, 0x34	; 52
    2eae:	b0 e0       	ldi	r27, 0x00	; 0
    2eb0:	e4 e3       	ldi	r30, 0x34	; 52
    2eb2:	f0 e0       	ldi	r31, 0x00	; 0
    2eb4:	80 81       	ld	r24, Z
    2eb6:	48 2f       	mov	r20, r24
    2eb8:	8a 81       	ldd	r24, Y+2	; 0x02
    2eba:	28 2f       	mov	r18, r24
    2ebc:	30 e0       	ldi	r19, 0x00	; 0
    2ebe:	81 e0       	ldi	r24, 0x01	; 1
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	02 2e       	mov	r0, r18
    2ec4:	02 c0       	rjmp	.+4      	; 0x2eca <DIO_setPinDirection+0x172>
    2ec6:	88 0f       	add	r24, r24
    2ec8:	99 1f       	adc	r25, r25
    2eca:	0a 94       	dec	r0
    2ecc:	e2 f7       	brpl	.-8      	; 0x2ec6 <DIO_setPinDirection+0x16e>
    2ece:	80 95       	com	r24
    2ed0:	84 23       	and	r24, r20
    2ed2:	8c 93       	st	X, r24
    2ed4:	2b c0       	rjmp	.+86     	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTD: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
    2ed6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed8:	81 30       	cpi	r24, 0x01	; 1
    2eda:	a1 f4       	brne	.+40     	; 0x2f04 <DIO_setPinDirection+0x1ac>
	    	{
	    		SET_BIT(DDRD,PinId);
    2edc:	a1 e3       	ldi	r26, 0x31	; 49
    2ede:	b0 e0       	ldi	r27, 0x00	; 0
    2ee0:	e1 e3       	ldi	r30, 0x31	; 49
    2ee2:	f0 e0       	ldi	r31, 0x00	; 0
    2ee4:	80 81       	ld	r24, Z
    2ee6:	48 2f       	mov	r20, r24
    2ee8:	8a 81       	ldd	r24, Y+2	; 0x02
    2eea:	28 2f       	mov	r18, r24
    2eec:	30 e0       	ldi	r19, 0x00	; 0
    2eee:	81 e0       	ldi	r24, 0x01	; 1
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	02 2e       	mov	r0, r18
    2ef4:	02 c0       	rjmp	.+4      	; 0x2efa <DIO_setPinDirection+0x1a2>
    2ef6:	88 0f       	add	r24, r24
    2ef8:	99 1f       	adc	r25, r25
    2efa:	0a 94       	dec	r0
    2efc:	e2 f7       	brpl	.-8      	; 0x2ef6 <DIO_setPinDirection+0x19e>
    2efe:	84 2b       	or	r24, r20
    2f00:	8c 93       	st	X, r24
    2f02:	14 c0       	rjmp	.+40     	; 0x2f2c <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRD,PinId);
    2f04:	a1 e3       	ldi	r26, 0x31	; 49
    2f06:	b0 e0       	ldi	r27, 0x00	; 0
    2f08:	e1 e3       	ldi	r30, 0x31	; 49
    2f0a:	f0 e0       	ldi	r31, 0x00	; 0
    2f0c:	80 81       	ld	r24, Z
    2f0e:	48 2f       	mov	r20, r24
    2f10:	8a 81       	ldd	r24, Y+2	; 0x02
    2f12:	28 2f       	mov	r18, r24
    2f14:	30 e0       	ldi	r19, 0x00	; 0
    2f16:	81 e0       	ldi	r24, 0x01	; 1
    2f18:	90 e0       	ldi	r25, 0x00	; 0
    2f1a:	02 2e       	mov	r0, r18
    2f1c:	02 c0       	rjmp	.+4      	; 0x2f22 <DIO_setPinDirection+0x1ca>
    2f1e:	88 0f       	add	r24, r24
    2f20:	99 1f       	adc	r25, r25
    2f22:	0a 94       	dec	r0
    2f24:	e2 f7       	brpl	.-8      	; 0x2f1e <DIO_setPinDirection+0x1c6>
    2f26:	80 95       	com	r24
    2f28:	84 23       	and	r24, r20
    2f2a:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
    2f2c:	0f 90       	pop	r0
    2f2e:	0f 90       	pop	r0
    2f30:	0f 90       	pop	r0
    2f32:	0f 90       	pop	r0
    2f34:	0f 90       	pop	r0
    2f36:	cf 91       	pop	r28
    2f38:	df 91       	pop	r29
    2f3a:	08 95       	ret

00002f3c <DIO_setPinValue>:


void DIO_setPinValue(u8 PortId, u8 PinId, u8 PinValue)
{
    2f3c:	df 93       	push	r29
    2f3e:	cf 93       	push	r28
    2f40:	00 d0       	rcall	.+0      	; 0x2f42 <DIO_setPinValue+0x6>
    2f42:	00 d0       	rcall	.+0      	; 0x2f44 <DIO_setPinValue+0x8>
    2f44:	0f 92       	push	r0
    2f46:	cd b7       	in	r28, 0x3d	; 61
    2f48:	de b7       	in	r29, 0x3e	; 62
    2f4a:	89 83       	std	Y+1, r24	; 0x01
    2f4c:	6a 83       	std	Y+2, r22	; 0x02
    2f4e:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && ((PinValue==DIO_PIN_HIGH)||(PinValue==DIO_PIN_LOW)))
    2f50:	89 81       	ldd	r24, Y+1	; 0x01
    2f52:	84 30       	cpi	r24, 0x04	; 4
    2f54:	08 f0       	brcs	.+2      	; 0x2f58 <DIO_setPinValue+0x1c>
    2f56:	dc c0       	rjmp	.+440    	; 0x3110 <DIO_setPinValue+0x1d4>
    2f58:	8a 81       	ldd	r24, Y+2	; 0x02
    2f5a:	88 30       	cpi	r24, 0x08	; 8
    2f5c:	08 f0       	brcs	.+2      	; 0x2f60 <DIO_setPinValue+0x24>
    2f5e:	d8 c0       	rjmp	.+432    	; 0x3110 <DIO_setPinValue+0x1d4>
    2f60:	8b 81       	ldd	r24, Y+3	; 0x03
    2f62:	81 30       	cpi	r24, 0x01	; 1
    2f64:	21 f0       	breq	.+8      	; 0x2f6e <DIO_setPinValue+0x32>
    2f66:	8b 81       	ldd	r24, Y+3	; 0x03
    2f68:	88 23       	and	r24, r24
    2f6a:	09 f0       	breq	.+2      	; 0x2f6e <DIO_setPinValue+0x32>
    2f6c:	d1 c0       	rjmp	.+418    	; 0x3110 <DIO_setPinValue+0x1d4>
	{
		switch(PortId)
    2f6e:	89 81       	ldd	r24, Y+1	; 0x01
    2f70:	28 2f       	mov	r18, r24
    2f72:	30 e0       	ldi	r19, 0x00	; 0
    2f74:	3d 83       	std	Y+5, r19	; 0x05
    2f76:	2c 83       	std	Y+4, r18	; 0x04
    2f78:	8c 81       	ldd	r24, Y+4	; 0x04
    2f7a:	9d 81       	ldd	r25, Y+5	; 0x05
    2f7c:	81 30       	cpi	r24, 0x01	; 1
    2f7e:	91 05       	cpc	r25, r1
    2f80:	09 f4       	brne	.+2      	; 0x2f84 <DIO_setPinValue+0x48>
    2f82:	43 c0       	rjmp	.+134    	; 0x300a <DIO_setPinValue+0xce>
    2f84:	2c 81       	ldd	r18, Y+4	; 0x04
    2f86:	3d 81       	ldd	r19, Y+5	; 0x05
    2f88:	22 30       	cpi	r18, 0x02	; 2
    2f8a:	31 05       	cpc	r19, r1
    2f8c:	2c f4       	brge	.+10     	; 0x2f98 <DIO_setPinValue+0x5c>
    2f8e:	8c 81       	ldd	r24, Y+4	; 0x04
    2f90:	9d 81       	ldd	r25, Y+5	; 0x05
    2f92:	00 97       	sbiw	r24, 0x00	; 0
    2f94:	71 f0       	breq	.+28     	; 0x2fb2 <DIO_setPinValue+0x76>
    2f96:	bc c0       	rjmp	.+376    	; 0x3110 <DIO_setPinValue+0x1d4>
    2f98:	2c 81       	ldd	r18, Y+4	; 0x04
    2f9a:	3d 81       	ldd	r19, Y+5	; 0x05
    2f9c:	22 30       	cpi	r18, 0x02	; 2
    2f9e:	31 05       	cpc	r19, r1
    2fa0:	09 f4       	brne	.+2      	; 0x2fa4 <DIO_setPinValue+0x68>
    2fa2:	5f c0       	rjmp	.+190    	; 0x3062 <DIO_setPinValue+0x126>
    2fa4:	8c 81       	ldd	r24, Y+4	; 0x04
    2fa6:	9d 81       	ldd	r25, Y+5	; 0x05
    2fa8:	83 30       	cpi	r24, 0x03	; 3
    2faa:	91 05       	cpc	r25, r1
    2fac:	09 f4       	brne	.+2      	; 0x2fb0 <DIO_setPinValue+0x74>
    2fae:	85 c0       	rjmp	.+266    	; 0x30ba <DIO_setPinValue+0x17e>
    2fb0:	af c0       	rjmp	.+350    	; 0x3110 <DIO_setPinValue+0x1d4>
	    {
	    	case DIO_PORTA:
	    	if(DIO_PIN_HIGH == PinValue)
    2fb2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fb4:	81 30       	cpi	r24, 0x01	; 1
    2fb6:	a1 f4       	brne	.+40     	; 0x2fe0 <DIO_setPinValue+0xa4>
	    	{
	    		SET_BIT(PORTA,PinId);
    2fb8:	ab e3       	ldi	r26, 0x3B	; 59
    2fba:	b0 e0       	ldi	r27, 0x00	; 0
    2fbc:	eb e3       	ldi	r30, 0x3B	; 59
    2fbe:	f0 e0       	ldi	r31, 0x00	; 0
    2fc0:	80 81       	ld	r24, Z
    2fc2:	48 2f       	mov	r20, r24
    2fc4:	8a 81       	ldd	r24, Y+2	; 0x02
    2fc6:	28 2f       	mov	r18, r24
    2fc8:	30 e0       	ldi	r19, 0x00	; 0
    2fca:	81 e0       	ldi	r24, 0x01	; 1
    2fcc:	90 e0       	ldi	r25, 0x00	; 0
    2fce:	02 2e       	mov	r0, r18
    2fd0:	02 c0       	rjmp	.+4      	; 0x2fd6 <DIO_setPinValue+0x9a>
    2fd2:	88 0f       	add	r24, r24
    2fd4:	99 1f       	adc	r25, r25
    2fd6:	0a 94       	dec	r0
    2fd8:	e2 f7       	brpl	.-8      	; 0x2fd2 <DIO_setPinValue+0x96>
    2fda:	84 2b       	or	r24, r20
    2fdc:	8c 93       	st	X, r24
    2fde:	98 c0       	rjmp	.+304    	; 0x3110 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTA,PinId);
    2fe0:	ab e3       	ldi	r26, 0x3B	; 59
    2fe2:	b0 e0       	ldi	r27, 0x00	; 0
    2fe4:	eb e3       	ldi	r30, 0x3B	; 59
    2fe6:	f0 e0       	ldi	r31, 0x00	; 0
    2fe8:	80 81       	ld	r24, Z
    2fea:	48 2f       	mov	r20, r24
    2fec:	8a 81       	ldd	r24, Y+2	; 0x02
    2fee:	28 2f       	mov	r18, r24
    2ff0:	30 e0       	ldi	r19, 0x00	; 0
    2ff2:	81 e0       	ldi	r24, 0x01	; 1
    2ff4:	90 e0       	ldi	r25, 0x00	; 0
    2ff6:	02 2e       	mov	r0, r18
    2ff8:	02 c0       	rjmp	.+4      	; 0x2ffe <DIO_setPinValue+0xc2>
    2ffa:	88 0f       	add	r24, r24
    2ffc:	99 1f       	adc	r25, r25
    2ffe:	0a 94       	dec	r0
    3000:	e2 f7       	brpl	.-8      	; 0x2ffa <DIO_setPinValue+0xbe>
    3002:	80 95       	com	r24
    3004:	84 23       	and	r24, r20
    3006:	8c 93       	st	X, r24
    3008:	83 c0       	rjmp	.+262    	; 0x3110 <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTB:
	    	if(DIO_PIN_HIGH == PinValue)
    300a:	8b 81       	ldd	r24, Y+3	; 0x03
    300c:	81 30       	cpi	r24, 0x01	; 1
    300e:	a1 f4       	brne	.+40     	; 0x3038 <DIO_setPinValue+0xfc>
	    	{
	    		SET_BIT(PORTB,PinId);
    3010:	a8 e3       	ldi	r26, 0x38	; 56
    3012:	b0 e0       	ldi	r27, 0x00	; 0
    3014:	e8 e3       	ldi	r30, 0x38	; 56
    3016:	f0 e0       	ldi	r31, 0x00	; 0
    3018:	80 81       	ld	r24, Z
    301a:	48 2f       	mov	r20, r24
    301c:	8a 81       	ldd	r24, Y+2	; 0x02
    301e:	28 2f       	mov	r18, r24
    3020:	30 e0       	ldi	r19, 0x00	; 0
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	90 e0       	ldi	r25, 0x00	; 0
    3026:	02 2e       	mov	r0, r18
    3028:	02 c0       	rjmp	.+4      	; 0x302e <DIO_setPinValue+0xf2>
    302a:	88 0f       	add	r24, r24
    302c:	99 1f       	adc	r25, r25
    302e:	0a 94       	dec	r0
    3030:	e2 f7       	brpl	.-8      	; 0x302a <DIO_setPinValue+0xee>
    3032:	84 2b       	or	r24, r20
    3034:	8c 93       	st	X, r24
    3036:	6c c0       	rjmp	.+216    	; 0x3110 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTB,PinId);
    3038:	a8 e3       	ldi	r26, 0x38	; 56
    303a:	b0 e0       	ldi	r27, 0x00	; 0
    303c:	e8 e3       	ldi	r30, 0x38	; 56
    303e:	f0 e0       	ldi	r31, 0x00	; 0
    3040:	80 81       	ld	r24, Z
    3042:	48 2f       	mov	r20, r24
    3044:	8a 81       	ldd	r24, Y+2	; 0x02
    3046:	28 2f       	mov	r18, r24
    3048:	30 e0       	ldi	r19, 0x00	; 0
    304a:	81 e0       	ldi	r24, 0x01	; 1
    304c:	90 e0       	ldi	r25, 0x00	; 0
    304e:	02 2e       	mov	r0, r18
    3050:	02 c0       	rjmp	.+4      	; 0x3056 <DIO_setPinValue+0x11a>
    3052:	88 0f       	add	r24, r24
    3054:	99 1f       	adc	r25, r25
    3056:	0a 94       	dec	r0
    3058:	e2 f7       	brpl	.-8      	; 0x3052 <DIO_setPinValue+0x116>
    305a:	80 95       	com	r24
    305c:	84 23       	and	r24, r20
    305e:	8c 93       	st	X, r24
    3060:	57 c0       	rjmp	.+174    	; 0x3110 <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTC:
	    	if(DIO_PIN_HIGH == PinValue)
    3062:	8b 81       	ldd	r24, Y+3	; 0x03
    3064:	81 30       	cpi	r24, 0x01	; 1
    3066:	a1 f4       	brne	.+40     	; 0x3090 <DIO_setPinValue+0x154>
	    	{
	    		SET_BIT(PORTC,PinId);
    3068:	a5 e3       	ldi	r26, 0x35	; 53
    306a:	b0 e0       	ldi	r27, 0x00	; 0
    306c:	e5 e3       	ldi	r30, 0x35	; 53
    306e:	f0 e0       	ldi	r31, 0x00	; 0
    3070:	80 81       	ld	r24, Z
    3072:	48 2f       	mov	r20, r24
    3074:	8a 81       	ldd	r24, Y+2	; 0x02
    3076:	28 2f       	mov	r18, r24
    3078:	30 e0       	ldi	r19, 0x00	; 0
    307a:	81 e0       	ldi	r24, 0x01	; 1
    307c:	90 e0       	ldi	r25, 0x00	; 0
    307e:	02 2e       	mov	r0, r18
    3080:	02 c0       	rjmp	.+4      	; 0x3086 <DIO_setPinValue+0x14a>
    3082:	88 0f       	add	r24, r24
    3084:	99 1f       	adc	r25, r25
    3086:	0a 94       	dec	r0
    3088:	e2 f7       	brpl	.-8      	; 0x3082 <DIO_setPinValue+0x146>
    308a:	84 2b       	or	r24, r20
    308c:	8c 93       	st	X, r24
    308e:	40 c0       	rjmp	.+128    	; 0x3110 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTC,PinId);
    3090:	a5 e3       	ldi	r26, 0x35	; 53
    3092:	b0 e0       	ldi	r27, 0x00	; 0
    3094:	e5 e3       	ldi	r30, 0x35	; 53
    3096:	f0 e0       	ldi	r31, 0x00	; 0
    3098:	80 81       	ld	r24, Z
    309a:	48 2f       	mov	r20, r24
    309c:	8a 81       	ldd	r24, Y+2	; 0x02
    309e:	28 2f       	mov	r18, r24
    30a0:	30 e0       	ldi	r19, 0x00	; 0
    30a2:	81 e0       	ldi	r24, 0x01	; 1
    30a4:	90 e0       	ldi	r25, 0x00	; 0
    30a6:	02 2e       	mov	r0, r18
    30a8:	02 c0       	rjmp	.+4      	; 0x30ae <DIO_setPinValue+0x172>
    30aa:	88 0f       	add	r24, r24
    30ac:	99 1f       	adc	r25, r25
    30ae:	0a 94       	dec	r0
    30b0:	e2 f7       	brpl	.-8      	; 0x30aa <DIO_setPinValue+0x16e>
    30b2:	80 95       	com	r24
    30b4:	84 23       	and	r24, r20
    30b6:	8c 93       	st	X, r24
    30b8:	2b c0       	rjmp	.+86     	; 0x3110 <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTD:
	    	if(DIO_PIN_HIGH == PinValue)
    30ba:	8b 81       	ldd	r24, Y+3	; 0x03
    30bc:	81 30       	cpi	r24, 0x01	; 1
    30be:	a1 f4       	brne	.+40     	; 0x30e8 <DIO_setPinValue+0x1ac>
	    	{
	    		SET_BIT(PORTD,PinId);
    30c0:	a2 e3       	ldi	r26, 0x32	; 50
    30c2:	b0 e0       	ldi	r27, 0x00	; 0
    30c4:	e2 e3       	ldi	r30, 0x32	; 50
    30c6:	f0 e0       	ldi	r31, 0x00	; 0
    30c8:	80 81       	ld	r24, Z
    30ca:	48 2f       	mov	r20, r24
    30cc:	8a 81       	ldd	r24, Y+2	; 0x02
    30ce:	28 2f       	mov	r18, r24
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	81 e0       	ldi	r24, 0x01	; 1
    30d4:	90 e0       	ldi	r25, 0x00	; 0
    30d6:	02 2e       	mov	r0, r18
    30d8:	02 c0       	rjmp	.+4      	; 0x30de <DIO_setPinValue+0x1a2>
    30da:	88 0f       	add	r24, r24
    30dc:	99 1f       	adc	r25, r25
    30de:	0a 94       	dec	r0
    30e0:	e2 f7       	brpl	.-8      	; 0x30da <DIO_setPinValue+0x19e>
    30e2:	84 2b       	or	r24, r20
    30e4:	8c 93       	st	X, r24
    30e6:	14 c0       	rjmp	.+40     	; 0x3110 <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTD,PinId);
    30e8:	a2 e3       	ldi	r26, 0x32	; 50
    30ea:	b0 e0       	ldi	r27, 0x00	; 0
    30ec:	e2 e3       	ldi	r30, 0x32	; 50
    30ee:	f0 e0       	ldi	r31, 0x00	; 0
    30f0:	80 81       	ld	r24, Z
    30f2:	48 2f       	mov	r20, r24
    30f4:	8a 81       	ldd	r24, Y+2	; 0x02
    30f6:	28 2f       	mov	r18, r24
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	81 e0       	ldi	r24, 0x01	; 1
    30fc:	90 e0       	ldi	r25, 0x00	; 0
    30fe:	02 2e       	mov	r0, r18
    3100:	02 c0       	rjmp	.+4      	; 0x3106 <DIO_setPinValue+0x1ca>
    3102:	88 0f       	add	r24, r24
    3104:	99 1f       	adc	r25, r25
    3106:	0a 94       	dec	r0
    3108:	e2 f7       	brpl	.-8      	; 0x3102 <DIO_setPinValue+0x1c6>
    310a:	80 95       	com	r24
    310c:	84 23       	and	r24, r20
    310e:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
    3110:	0f 90       	pop	r0
    3112:	0f 90       	pop	r0
    3114:	0f 90       	pop	r0
    3116:	0f 90       	pop	r0
    3118:	0f 90       	pop	r0
    311a:	cf 91       	pop	r28
    311c:	df 91       	pop	r29
    311e:	08 95       	ret

00003120 <DIO_togglePinValue>:


void DIO_togglePinValue(u8 PortId, u8 PinId)
{
    3120:	df 93       	push	r29
    3122:	cf 93       	push	r28
    3124:	00 d0       	rcall	.+0      	; 0x3126 <DIO_togglePinValue+0x6>
    3126:	00 d0       	rcall	.+0      	; 0x3128 <DIO_togglePinValue+0x8>
    3128:	cd b7       	in	r28, 0x3d	; 61
    312a:	de b7       	in	r29, 0x3e	; 62
    312c:	89 83       	std	Y+1, r24	; 0x01
    312e:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && (PinId<=7))
    3130:	89 81       	ldd	r24, Y+1	; 0x01
    3132:	84 30       	cpi	r24, 0x04	; 4
    3134:	08 f0       	brcs	.+2      	; 0x3138 <DIO_togglePinValue+0x18>
    3136:	72 c0       	rjmp	.+228    	; 0x321c <DIO_togglePinValue+0xfc>
    3138:	8a 81       	ldd	r24, Y+2	; 0x02
    313a:	88 30       	cpi	r24, 0x08	; 8
    313c:	08 f0       	brcs	.+2      	; 0x3140 <DIO_togglePinValue+0x20>
    313e:	6e c0       	rjmp	.+220    	; 0x321c <DIO_togglePinValue+0xfc>
	{
		switch(PortId)
    3140:	89 81       	ldd	r24, Y+1	; 0x01
    3142:	28 2f       	mov	r18, r24
    3144:	30 e0       	ldi	r19, 0x00	; 0
    3146:	3c 83       	std	Y+4, r19	; 0x04
    3148:	2b 83       	std	Y+3, r18	; 0x03
    314a:	8b 81       	ldd	r24, Y+3	; 0x03
    314c:	9c 81       	ldd	r25, Y+4	; 0x04
    314e:	81 30       	cpi	r24, 0x01	; 1
    3150:	91 05       	cpc	r25, r1
    3152:	49 f1       	breq	.+82     	; 0x31a6 <DIO_togglePinValue+0x86>
    3154:	2b 81       	ldd	r18, Y+3	; 0x03
    3156:	3c 81       	ldd	r19, Y+4	; 0x04
    3158:	22 30       	cpi	r18, 0x02	; 2
    315a:	31 05       	cpc	r19, r1
    315c:	2c f4       	brge	.+10     	; 0x3168 <DIO_togglePinValue+0x48>
    315e:	8b 81       	ldd	r24, Y+3	; 0x03
    3160:	9c 81       	ldd	r25, Y+4	; 0x04
    3162:	00 97       	sbiw	r24, 0x00	; 0
    3164:	61 f0       	breq	.+24     	; 0x317e <DIO_togglePinValue+0x5e>
    3166:	5a c0       	rjmp	.+180    	; 0x321c <DIO_togglePinValue+0xfc>
    3168:	2b 81       	ldd	r18, Y+3	; 0x03
    316a:	3c 81       	ldd	r19, Y+4	; 0x04
    316c:	22 30       	cpi	r18, 0x02	; 2
    316e:	31 05       	cpc	r19, r1
    3170:	71 f1       	breq	.+92     	; 0x31ce <DIO_togglePinValue+0xae>
    3172:	8b 81       	ldd	r24, Y+3	; 0x03
    3174:	9c 81       	ldd	r25, Y+4	; 0x04
    3176:	83 30       	cpi	r24, 0x03	; 3
    3178:	91 05       	cpc	r25, r1
    317a:	e9 f1       	breq	.+122    	; 0x31f6 <DIO_togglePinValue+0xd6>
    317c:	4f c0       	rjmp	.+158    	; 0x321c <DIO_togglePinValue+0xfc>
		{
			case DIO_PORTA:
			TOG_BIT(PORTA,PinId);
    317e:	ab e3       	ldi	r26, 0x3B	; 59
    3180:	b0 e0       	ldi	r27, 0x00	; 0
    3182:	eb e3       	ldi	r30, 0x3B	; 59
    3184:	f0 e0       	ldi	r31, 0x00	; 0
    3186:	80 81       	ld	r24, Z
    3188:	48 2f       	mov	r20, r24
    318a:	8a 81       	ldd	r24, Y+2	; 0x02
    318c:	28 2f       	mov	r18, r24
    318e:	30 e0       	ldi	r19, 0x00	; 0
    3190:	81 e0       	ldi	r24, 0x01	; 1
    3192:	90 e0       	ldi	r25, 0x00	; 0
    3194:	02 2e       	mov	r0, r18
    3196:	02 c0       	rjmp	.+4      	; 0x319c <DIO_togglePinValue+0x7c>
    3198:	88 0f       	add	r24, r24
    319a:	99 1f       	adc	r25, r25
    319c:	0a 94       	dec	r0
    319e:	e2 f7       	brpl	.-8      	; 0x3198 <DIO_togglePinValue+0x78>
    31a0:	84 27       	eor	r24, r20
    31a2:	8c 93       	st	X, r24
    31a4:	3b c0       	rjmp	.+118    	; 0x321c <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTB:
			TOG_BIT(PORTB,PinId);
    31a6:	a8 e3       	ldi	r26, 0x38	; 56
    31a8:	b0 e0       	ldi	r27, 0x00	; 0
    31aa:	e8 e3       	ldi	r30, 0x38	; 56
    31ac:	f0 e0       	ldi	r31, 0x00	; 0
    31ae:	80 81       	ld	r24, Z
    31b0:	48 2f       	mov	r20, r24
    31b2:	8a 81       	ldd	r24, Y+2	; 0x02
    31b4:	28 2f       	mov	r18, r24
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	81 e0       	ldi	r24, 0x01	; 1
    31ba:	90 e0       	ldi	r25, 0x00	; 0
    31bc:	02 2e       	mov	r0, r18
    31be:	02 c0       	rjmp	.+4      	; 0x31c4 <DIO_togglePinValue+0xa4>
    31c0:	88 0f       	add	r24, r24
    31c2:	99 1f       	adc	r25, r25
    31c4:	0a 94       	dec	r0
    31c6:	e2 f7       	brpl	.-8      	; 0x31c0 <DIO_togglePinValue+0xa0>
    31c8:	84 27       	eor	r24, r20
    31ca:	8c 93       	st	X, r24
    31cc:	27 c0       	rjmp	.+78     	; 0x321c <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTC:
			TOG_BIT(PORTC,PinId);
    31ce:	a5 e3       	ldi	r26, 0x35	; 53
    31d0:	b0 e0       	ldi	r27, 0x00	; 0
    31d2:	e5 e3       	ldi	r30, 0x35	; 53
    31d4:	f0 e0       	ldi	r31, 0x00	; 0
    31d6:	80 81       	ld	r24, Z
    31d8:	48 2f       	mov	r20, r24
    31da:	8a 81       	ldd	r24, Y+2	; 0x02
    31dc:	28 2f       	mov	r18, r24
    31de:	30 e0       	ldi	r19, 0x00	; 0
    31e0:	81 e0       	ldi	r24, 0x01	; 1
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	02 2e       	mov	r0, r18
    31e6:	02 c0       	rjmp	.+4      	; 0x31ec <DIO_togglePinValue+0xcc>
    31e8:	88 0f       	add	r24, r24
    31ea:	99 1f       	adc	r25, r25
    31ec:	0a 94       	dec	r0
    31ee:	e2 f7       	brpl	.-8      	; 0x31e8 <DIO_togglePinValue+0xc8>
    31f0:	84 27       	eor	r24, r20
    31f2:	8c 93       	st	X, r24
    31f4:	13 c0       	rjmp	.+38     	; 0x321c <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTD:
			TOG_BIT(PORTD,PinId);
    31f6:	a2 e3       	ldi	r26, 0x32	; 50
    31f8:	b0 e0       	ldi	r27, 0x00	; 0
    31fa:	e2 e3       	ldi	r30, 0x32	; 50
    31fc:	f0 e0       	ldi	r31, 0x00	; 0
    31fe:	80 81       	ld	r24, Z
    3200:	48 2f       	mov	r20, r24
    3202:	8a 81       	ldd	r24, Y+2	; 0x02
    3204:	28 2f       	mov	r18, r24
    3206:	30 e0       	ldi	r19, 0x00	; 0
    3208:	81 e0       	ldi	r24, 0x01	; 1
    320a:	90 e0       	ldi	r25, 0x00	; 0
    320c:	02 2e       	mov	r0, r18
    320e:	02 c0       	rjmp	.+4      	; 0x3214 <DIO_togglePinValue+0xf4>
    3210:	88 0f       	add	r24, r24
    3212:	99 1f       	adc	r25, r25
    3214:	0a 94       	dec	r0
    3216:	e2 f7       	brpl	.-8      	; 0x3210 <DIO_togglePinValue+0xf0>
    3218:	84 27       	eor	r24, r20
    321a:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
    321c:	0f 90       	pop	r0
    321e:	0f 90       	pop	r0
    3220:	0f 90       	pop	r0
    3222:	0f 90       	pop	r0
    3224:	cf 91       	pop	r28
    3226:	df 91       	pop	r29
    3228:	08 95       	ret

0000322a <DIO_getPinValue>:


void DIO_getPinValue(u8 PortId, u8 PinId, u8* PinValue)
{
    322a:	df 93       	push	r29
    322c:	cf 93       	push	r28
    322e:	00 d0       	rcall	.+0      	; 0x3230 <DIO_getPinValue+0x6>
    3230:	00 d0       	rcall	.+0      	; 0x3232 <DIO_getPinValue+0x8>
    3232:	00 d0       	rcall	.+0      	; 0x3234 <DIO_getPinValue+0xa>
    3234:	cd b7       	in	r28, 0x3d	; 61
    3236:	de b7       	in	r29, 0x3e	; 62
    3238:	89 83       	std	Y+1, r24	; 0x01
    323a:	6a 83       	std	Y+2, r22	; 0x02
    323c:	5c 83       	std	Y+4, r21	; 0x04
    323e:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && (PinValue!= NULL))
    3240:	89 81       	ldd	r24, Y+1	; 0x01
    3242:	84 30       	cpi	r24, 0x04	; 4
    3244:	08 f0       	brcs	.+2      	; 0x3248 <DIO_getPinValue+0x1e>
    3246:	79 c0       	rjmp	.+242    	; 0x333a <DIO_getPinValue+0x110>
    3248:	8a 81       	ldd	r24, Y+2	; 0x02
    324a:	88 30       	cpi	r24, 0x08	; 8
    324c:	08 f0       	brcs	.+2      	; 0x3250 <DIO_getPinValue+0x26>
    324e:	75 c0       	rjmp	.+234    	; 0x333a <DIO_getPinValue+0x110>
    3250:	8b 81       	ldd	r24, Y+3	; 0x03
    3252:	9c 81       	ldd	r25, Y+4	; 0x04
    3254:	00 97       	sbiw	r24, 0x00	; 0
    3256:	09 f4       	brne	.+2      	; 0x325a <DIO_getPinValue+0x30>
    3258:	70 c0       	rjmp	.+224    	; 0x333a <DIO_getPinValue+0x110>
	{
		switch(PortId)
    325a:	89 81       	ldd	r24, Y+1	; 0x01
    325c:	28 2f       	mov	r18, r24
    325e:	30 e0       	ldi	r19, 0x00	; 0
    3260:	3e 83       	std	Y+6, r19	; 0x06
    3262:	2d 83       	std	Y+5, r18	; 0x05
    3264:	4d 81       	ldd	r20, Y+5	; 0x05
    3266:	5e 81       	ldd	r21, Y+6	; 0x06
    3268:	41 30       	cpi	r20, 0x01	; 1
    326a:	51 05       	cpc	r21, r1
    326c:	59 f1       	breq	.+86     	; 0x32c4 <DIO_getPinValue+0x9a>
    326e:	8d 81       	ldd	r24, Y+5	; 0x05
    3270:	9e 81       	ldd	r25, Y+6	; 0x06
    3272:	82 30       	cpi	r24, 0x02	; 2
    3274:	91 05       	cpc	r25, r1
    3276:	34 f4       	brge	.+12     	; 0x3284 <DIO_getPinValue+0x5a>
    3278:	2d 81       	ldd	r18, Y+5	; 0x05
    327a:	3e 81       	ldd	r19, Y+6	; 0x06
    327c:	21 15       	cp	r18, r1
    327e:	31 05       	cpc	r19, r1
    3280:	69 f0       	breq	.+26     	; 0x329c <DIO_getPinValue+0x72>
    3282:	5b c0       	rjmp	.+182    	; 0x333a <DIO_getPinValue+0x110>
    3284:	4d 81       	ldd	r20, Y+5	; 0x05
    3286:	5e 81       	ldd	r21, Y+6	; 0x06
    3288:	42 30       	cpi	r20, 0x02	; 2
    328a:	51 05       	cpc	r21, r1
    328c:	79 f1       	breq	.+94     	; 0x32ec <DIO_getPinValue+0xc2>
    328e:	8d 81       	ldd	r24, Y+5	; 0x05
    3290:	9e 81       	ldd	r25, Y+6	; 0x06
    3292:	83 30       	cpi	r24, 0x03	; 3
    3294:	91 05       	cpc	r25, r1
    3296:	09 f4       	brne	.+2      	; 0x329a <DIO_getPinValue+0x70>
    3298:	3d c0       	rjmp	.+122    	; 0x3314 <DIO_getPinValue+0xea>
    329a:	4f c0       	rjmp	.+158    	; 0x333a <DIO_getPinValue+0x110>
		{
			case DIO_PORTA:
			*PinValue = GET_BIT(PINA,PinId);
    329c:	e9 e3       	ldi	r30, 0x39	; 57
    329e:	f0 e0       	ldi	r31, 0x00	; 0
    32a0:	80 81       	ld	r24, Z
    32a2:	28 2f       	mov	r18, r24
    32a4:	30 e0       	ldi	r19, 0x00	; 0
    32a6:	8a 81       	ldd	r24, Y+2	; 0x02
    32a8:	88 2f       	mov	r24, r24
    32aa:	90 e0       	ldi	r25, 0x00	; 0
    32ac:	a9 01       	movw	r20, r18
    32ae:	02 c0       	rjmp	.+4      	; 0x32b4 <DIO_getPinValue+0x8a>
    32b0:	55 95       	asr	r21
    32b2:	47 95       	ror	r20
    32b4:	8a 95       	dec	r24
    32b6:	e2 f7       	brpl	.-8      	; 0x32b0 <DIO_getPinValue+0x86>
    32b8:	ca 01       	movw	r24, r20
    32ba:	81 70       	andi	r24, 0x01	; 1
    32bc:	eb 81       	ldd	r30, Y+3	; 0x03
    32be:	fc 81       	ldd	r31, Y+4	; 0x04
    32c0:	80 83       	st	Z, r24
    32c2:	3b c0       	rjmp	.+118    	; 0x333a <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTB:
			*PinValue = GET_BIT(PINB,PinId);
    32c4:	e6 e3       	ldi	r30, 0x36	; 54
    32c6:	f0 e0       	ldi	r31, 0x00	; 0
    32c8:	80 81       	ld	r24, Z
    32ca:	28 2f       	mov	r18, r24
    32cc:	30 e0       	ldi	r19, 0x00	; 0
    32ce:	8a 81       	ldd	r24, Y+2	; 0x02
    32d0:	88 2f       	mov	r24, r24
    32d2:	90 e0       	ldi	r25, 0x00	; 0
    32d4:	a9 01       	movw	r20, r18
    32d6:	02 c0       	rjmp	.+4      	; 0x32dc <DIO_getPinValue+0xb2>
    32d8:	55 95       	asr	r21
    32da:	47 95       	ror	r20
    32dc:	8a 95       	dec	r24
    32de:	e2 f7       	brpl	.-8      	; 0x32d8 <DIO_getPinValue+0xae>
    32e0:	ca 01       	movw	r24, r20
    32e2:	81 70       	andi	r24, 0x01	; 1
    32e4:	eb 81       	ldd	r30, Y+3	; 0x03
    32e6:	fc 81       	ldd	r31, Y+4	; 0x04
    32e8:	80 83       	st	Z, r24
    32ea:	27 c0       	rjmp	.+78     	; 0x333a <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTC:
			*PinValue = GET_BIT(PINC,PinId);
    32ec:	e3 e3       	ldi	r30, 0x33	; 51
    32ee:	f0 e0       	ldi	r31, 0x00	; 0
    32f0:	80 81       	ld	r24, Z
    32f2:	28 2f       	mov	r18, r24
    32f4:	30 e0       	ldi	r19, 0x00	; 0
    32f6:	8a 81       	ldd	r24, Y+2	; 0x02
    32f8:	88 2f       	mov	r24, r24
    32fa:	90 e0       	ldi	r25, 0x00	; 0
    32fc:	a9 01       	movw	r20, r18
    32fe:	02 c0       	rjmp	.+4      	; 0x3304 <DIO_getPinValue+0xda>
    3300:	55 95       	asr	r21
    3302:	47 95       	ror	r20
    3304:	8a 95       	dec	r24
    3306:	e2 f7       	brpl	.-8      	; 0x3300 <DIO_getPinValue+0xd6>
    3308:	ca 01       	movw	r24, r20
    330a:	81 70       	andi	r24, 0x01	; 1
    330c:	eb 81       	ldd	r30, Y+3	; 0x03
    330e:	fc 81       	ldd	r31, Y+4	; 0x04
    3310:	80 83       	st	Z, r24
    3312:	13 c0       	rjmp	.+38     	; 0x333a <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTD:
			*PinValue = GET_BIT(PIND,PinId);
    3314:	e0 e3       	ldi	r30, 0x30	; 48
    3316:	f0 e0       	ldi	r31, 0x00	; 0
    3318:	80 81       	ld	r24, Z
    331a:	28 2f       	mov	r18, r24
    331c:	30 e0       	ldi	r19, 0x00	; 0
    331e:	8a 81       	ldd	r24, Y+2	; 0x02
    3320:	88 2f       	mov	r24, r24
    3322:	90 e0       	ldi	r25, 0x00	; 0
    3324:	a9 01       	movw	r20, r18
    3326:	02 c0       	rjmp	.+4      	; 0x332c <DIO_getPinValue+0x102>
    3328:	55 95       	asr	r21
    332a:	47 95       	ror	r20
    332c:	8a 95       	dec	r24
    332e:	e2 f7       	brpl	.-8      	; 0x3328 <DIO_getPinValue+0xfe>
    3330:	ca 01       	movw	r24, r20
    3332:	81 70       	andi	r24, 0x01	; 1
    3334:	eb 81       	ldd	r30, Y+3	; 0x03
    3336:	fc 81       	ldd	r31, Y+4	; 0x04
    3338:	80 83       	st	Z, r24
	}
	else
	{
		// DO Nothing
	}
}
    333a:	26 96       	adiw	r28, 0x06	; 6
    333c:	0f b6       	in	r0, 0x3f	; 63
    333e:	f8 94       	cli
    3340:	de bf       	out	0x3e, r29	; 62
    3342:	0f be       	out	0x3f, r0	; 63
    3344:	cd bf       	out	0x3d, r28	; 61
    3346:	cf 91       	pop	r28
    3348:	df 91       	pop	r29
    334a:	08 95       	ret

0000334c <DIO_activePinInPullUpResistance>:


void DIO_activePinInPullUpResistance(u8 PortId, u8 PinId)
{
    334c:	df 93       	push	r29
    334e:	cf 93       	push	r28
    3350:	00 d0       	rcall	.+0      	; 0x3352 <DIO_activePinInPullUpResistance+0x6>
    3352:	00 d0       	rcall	.+0      	; 0x3354 <DIO_activePinInPullUpResistance+0x8>
    3354:	cd b7       	in	r28, 0x3d	; 61
    3356:	de b7       	in	r29, 0x3e	; 62
    3358:	89 83       	std	Y+1, r24	; 0x01
    335a:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && (PinId<=7))
    335c:	89 81       	ldd	r24, Y+1	; 0x01
    335e:	84 30       	cpi	r24, 0x04	; 4
    3360:	08 f0       	brcs	.+2      	; 0x3364 <DIO_activePinInPullUpResistance+0x18>
    3362:	72 c0       	rjmp	.+228    	; 0x3448 <DIO_activePinInPullUpResistance+0xfc>
    3364:	8a 81       	ldd	r24, Y+2	; 0x02
    3366:	88 30       	cpi	r24, 0x08	; 8
    3368:	08 f0       	brcs	.+2      	; 0x336c <DIO_activePinInPullUpResistance+0x20>
    336a:	6e c0       	rjmp	.+220    	; 0x3448 <DIO_activePinInPullUpResistance+0xfc>
	{
		switch(PortId)
    336c:	89 81       	ldd	r24, Y+1	; 0x01
    336e:	28 2f       	mov	r18, r24
    3370:	30 e0       	ldi	r19, 0x00	; 0
    3372:	3c 83       	std	Y+4, r19	; 0x04
    3374:	2b 83       	std	Y+3, r18	; 0x03
    3376:	8b 81       	ldd	r24, Y+3	; 0x03
    3378:	9c 81       	ldd	r25, Y+4	; 0x04
    337a:	81 30       	cpi	r24, 0x01	; 1
    337c:	91 05       	cpc	r25, r1
    337e:	49 f1       	breq	.+82     	; 0x33d2 <DIO_activePinInPullUpResistance+0x86>
    3380:	2b 81       	ldd	r18, Y+3	; 0x03
    3382:	3c 81       	ldd	r19, Y+4	; 0x04
    3384:	22 30       	cpi	r18, 0x02	; 2
    3386:	31 05       	cpc	r19, r1
    3388:	2c f4       	brge	.+10     	; 0x3394 <DIO_activePinInPullUpResistance+0x48>
    338a:	8b 81       	ldd	r24, Y+3	; 0x03
    338c:	9c 81       	ldd	r25, Y+4	; 0x04
    338e:	00 97       	sbiw	r24, 0x00	; 0
    3390:	61 f0       	breq	.+24     	; 0x33aa <DIO_activePinInPullUpResistance+0x5e>
    3392:	5a c0       	rjmp	.+180    	; 0x3448 <DIO_activePinInPullUpResistance+0xfc>
    3394:	2b 81       	ldd	r18, Y+3	; 0x03
    3396:	3c 81       	ldd	r19, Y+4	; 0x04
    3398:	22 30       	cpi	r18, 0x02	; 2
    339a:	31 05       	cpc	r19, r1
    339c:	71 f1       	breq	.+92     	; 0x33fa <DIO_activePinInPullUpResistance+0xae>
    339e:	8b 81       	ldd	r24, Y+3	; 0x03
    33a0:	9c 81       	ldd	r25, Y+4	; 0x04
    33a2:	83 30       	cpi	r24, 0x03	; 3
    33a4:	91 05       	cpc	r25, r1
    33a6:	e9 f1       	breq	.+122    	; 0x3422 <DIO_activePinInPullUpResistance+0xd6>
    33a8:	4f c0       	rjmp	.+158    	; 0x3448 <DIO_activePinInPullUpResistance+0xfc>
		{
			case DIO_PORTA:
			SET_BIT(PORTA,PinId);
    33aa:	ab e3       	ldi	r26, 0x3B	; 59
    33ac:	b0 e0       	ldi	r27, 0x00	; 0
    33ae:	eb e3       	ldi	r30, 0x3B	; 59
    33b0:	f0 e0       	ldi	r31, 0x00	; 0
    33b2:	80 81       	ld	r24, Z
    33b4:	48 2f       	mov	r20, r24
    33b6:	8a 81       	ldd	r24, Y+2	; 0x02
    33b8:	28 2f       	mov	r18, r24
    33ba:	30 e0       	ldi	r19, 0x00	; 0
    33bc:	81 e0       	ldi	r24, 0x01	; 1
    33be:	90 e0       	ldi	r25, 0x00	; 0
    33c0:	02 2e       	mov	r0, r18
    33c2:	02 c0       	rjmp	.+4      	; 0x33c8 <DIO_activePinInPullUpResistance+0x7c>
    33c4:	88 0f       	add	r24, r24
    33c6:	99 1f       	adc	r25, r25
    33c8:	0a 94       	dec	r0
    33ca:	e2 f7       	brpl	.-8      	; 0x33c4 <DIO_activePinInPullUpResistance+0x78>
    33cc:	84 2b       	or	r24, r20
    33ce:	8c 93       	st	X, r24
    33d0:	3b c0       	rjmp	.+118    	; 0x3448 <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTB:
			SET_BIT(PORTB,PinId);
    33d2:	a8 e3       	ldi	r26, 0x38	; 56
    33d4:	b0 e0       	ldi	r27, 0x00	; 0
    33d6:	e8 e3       	ldi	r30, 0x38	; 56
    33d8:	f0 e0       	ldi	r31, 0x00	; 0
    33da:	80 81       	ld	r24, Z
    33dc:	48 2f       	mov	r20, r24
    33de:	8a 81       	ldd	r24, Y+2	; 0x02
    33e0:	28 2f       	mov	r18, r24
    33e2:	30 e0       	ldi	r19, 0x00	; 0
    33e4:	81 e0       	ldi	r24, 0x01	; 1
    33e6:	90 e0       	ldi	r25, 0x00	; 0
    33e8:	02 2e       	mov	r0, r18
    33ea:	02 c0       	rjmp	.+4      	; 0x33f0 <DIO_activePinInPullUpResistance+0xa4>
    33ec:	88 0f       	add	r24, r24
    33ee:	99 1f       	adc	r25, r25
    33f0:	0a 94       	dec	r0
    33f2:	e2 f7       	brpl	.-8      	; 0x33ec <DIO_activePinInPullUpResistance+0xa0>
    33f4:	84 2b       	or	r24, r20
    33f6:	8c 93       	st	X, r24
    33f8:	27 c0       	rjmp	.+78     	; 0x3448 <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTC:
			SET_BIT(PORTC,PinId);
    33fa:	a5 e3       	ldi	r26, 0x35	; 53
    33fc:	b0 e0       	ldi	r27, 0x00	; 0
    33fe:	e5 e3       	ldi	r30, 0x35	; 53
    3400:	f0 e0       	ldi	r31, 0x00	; 0
    3402:	80 81       	ld	r24, Z
    3404:	48 2f       	mov	r20, r24
    3406:	8a 81       	ldd	r24, Y+2	; 0x02
    3408:	28 2f       	mov	r18, r24
    340a:	30 e0       	ldi	r19, 0x00	; 0
    340c:	81 e0       	ldi	r24, 0x01	; 1
    340e:	90 e0       	ldi	r25, 0x00	; 0
    3410:	02 2e       	mov	r0, r18
    3412:	02 c0       	rjmp	.+4      	; 0x3418 <DIO_activePinInPullUpResistance+0xcc>
    3414:	88 0f       	add	r24, r24
    3416:	99 1f       	adc	r25, r25
    3418:	0a 94       	dec	r0
    341a:	e2 f7       	brpl	.-8      	; 0x3414 <DIO_activePinInPullUpResistance+0xc8>
    341c:	84 2b       	or	r24, r20
    341e:	8c 93       	st	X, r24
    3420:	13 c0       	rjmp	.+38     	; 0x3448 <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTD:
			SET_BIT(PORTD,PinId);
    3422:	a2 e3       	ldi	r26, 0x32	; 50
    3424:	b0 e0       	ldi	r27, 0x00	; 0
    3426:	e2 e3       	ldi	r30, 0x32	; 50
    3428:	f0 e0       	ldi	r31, 0x00	; 0
    342a:	80 81       	ld	r24, Z
    342c:	48 2f       	mov	r20, r24
    342e:	8a 81       	ldd	r24, Y+2	; 0x02
    3430:	28 2f       	mov	r18, r24
    3432:	30 e0       	ldi	r19, 0x00	; 0
    3434:	81 e0       	ldi	r24, 0x01	; 1
    3436:	90 e0       	ldi	r25, 0x00	; 0
    3438:	02 2e       	mov	r0, r18
    343a:	02 c0       	rjmp	.+4      	; 0x3440 <DIO_activePinInPullUpResistance+0xf4>
    343c:	88 0f       	add	r24, r24
    343e:	99 1f       	adc	r25, r25
    3440:	0a 94       	dec	r0
    3442:	e2 f7       	brpl	.-8      	; 0x343c <DIO_activePinInPullUpResistance+0xf0>
    3444:	84 2b       	or	r24, r20
    3446:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
    3448:	0f 90       	pop	r0
    344a:	0f 90       	pop	r0
    344c:	0f 90       	pop	r0
    344e:	0f 90       	pop	r0
    3450:	cf 91       	pop	r28
    3452:	df 91       	pop	r29
    3454:	08 95       	ret

00003456 <DIO_setPortDirection>:



/* Port Apis */
void DIO_setPortDirection(u8 PortId, u8 PortDirection)
{
    3456:	df 93       	push	r29
    3458:	cf 93       	push	r28
    345a:	00 d0       	rcall	.+0      	; 0x345c <DIO_setPortDirection+0x6>
    345c:	00 d0       	rcall	.+0      	; 0x345e <DIO_setPortDirection+0x8>
    345e:	cd b7       	in	r28, 0x3d	; 61
    3460:	de b7       	in	r29, 0x3e	; 62
    3462:	89 83       	std	Y+1, r24	; 0x01
    3464:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && ((DIO_PORT_OUTPUT == PortDirection) || (DIO_PORT_INPUT == PortDirection)))
    3466:	89 81       	ldd	r24, Y+1	; 0x01
    3468:	84 30       	cpi	r24, 0x04	; 4
    346a:	08 f0       	brcs	.+2      	; 0x346e <DIO_setPortDirection+0x18>
    346c:	55 c0       	rjmp	.+170    	; 0x3518 <DIO_setPortDirection+0xc2>
    346e:	8a 81       	ldd	r24, Y+2	; 0x02
    3470:	8f 3f       	cpi	r24, 0xFF	; 255
    3472:	21 f0       	breq	.+8      	; 0x347c <DIO_setPortDirection+0x26>
    3474:	8a 81       	ldd	r24, Y+2	; 0x02
    3476:	88 23       	and	r24, r24
    3478:	09 f0       	breq	.+2      	; 0x347c <DIO_setPortDirection+0x26>
    347a:	4e c0       	rjmp	.+156    	; 0x3518 <DIO_setPortDirection+0xc2>
	{
		switch(PortId)
    347c:	89 81       	ldd	r24, Y+1	; 0x01
    347e:	28 2f       	mov	r18, r24
    3480:	30 e0       	ldi	r19, 0x00	; 0
    3482:	3c 83       	std	Y+4, r19	; 0x04
    3484:	2b 83       	std	Y+3, r18	; 0x03
    3486:	8b 81       	ldd	r24, Y+3	; 0x03
    3488:	9c 81       	ldd	r25, Y+4	; 0x04
    348a:	81 30       	cpi	r24, 0x01	; 1
    348c:	91 05       	cpc	r25, r1
    348e:	09 f1       	breq	.+66     	; 0x34d2 <DIO_setPortDirection+0x7c>
    3490:	2b 81       	ldd	r18, Y+3	; 0x03
    3492:	3c 81       	ldd	r19, Y+4	; 0x04
    3494:	22 30       	cpi	r18, 0x02	; 2
    3496:	31 05       	cpc	r19, r1
    3498:	2c f4       	brge	.+10     	; 0x34a4 <DIO_setPortDirection+0x4e>
    349a:	8b 81       	ldd	r24, Y+3	; 0x03
    349c:	9c 81       	ldd	r25, Y+4	; 0x04
    349e:	00 97       	sbiw	r24, 0x00	; 0
    34a0:	61 f0       	breq	.+24     	; 0x34ba <DIO_setPortDirection+0x64>
    34a2:	3a c0       	rjmp	.+116    	; 0x3518 <DIO_setPortDirection+0xc2>
    34a4:	2b 81       	ldd	r18, Y+3	; 0x03
    34a6:	3c 81       	ldd	r19, Y+4	; 0x04
    34a8:	22 30       	cpi	r18, 0x02	; 2
    34aa:	31 05       	cpc	r19, r1
    34ac:	f1 f0       	breq	.+60     	; 0x34ea <DIO_setPortDirection+0x94>
    34ae:	8b 81       	ldd	r24, Y+3	; 0x03
    34b0:	9c 81       	ldd	r25, Y+4	; 0x04
    34b2:	83 30       	cpi	r24, 0x03	; 3
    34b4:	91 05       	cpc	r25, r1
    34b6:	29 f1       	breq	.+74     	; 0x3502 <DIO_setPortDirection+0xac>
    34b8:	2f c0       	rjmp	.+94     	; 0x3518 <DIO_setPortDirection+0xc2>
		{
		case 0:
			if(DIO_PORT_OUTPUT == PortDirection)
    34ba:	8a 81       	ldd	r24, Y+2	; 0x02
    34bc:	8f 3f       	cpi	r24, 0xFF	; 255
    34be:	29 f4       	brne	.+10     	; 0x34ca <DIO_setPortDirection+0x74>
			{
				DDRA = 0xff;
    34c0:	ea e3       	ldi	r30, 0x3A	; 58
    34c2:	f0 e0       	ldi	r31, 0x00	; 0
    34c4:	8f ef       	ldi	r24, 0xFF	; 255
    34c6:	80 83       	st	Z, r24
    34c8:	27 c0       	rjmp	.+78     	; 0x3518 <DIO_setPortDirection+0xc2>
			}
			else
			{
				DDRA = 0x00;
    34ca:	ea e3       	ldi	r30, 0x3A	; 58
    34cc:	f0 e0       	ldi	r31, 0x00	; 0
    34ce:	10 82       	st	Z, r1
    34d0:	23 c0       	rjmp	.+70     	; 0x3518 <DIO_setPortDirection+0xc2>
			}
			break;

		case 1:
			if(DIO_PORT_OUTPUT == PortDirection)
    34d2:	8a 81       	ldd	r24, Y+2	; 0x02
    34d4:	8f 3f       	cpi	r24, 0xFF	; 255
    34d6:	29 f4       	brne	.+10     	; 0x34e2 <DIO_setPortDirection+0x8c>
			{
				DDRB = 0xff;
    34d8:	e7 e3       	ldi	r30, 0x37	; 55
    34da:	f0 e0       	ldi	r31, 0x00	; 0
    34dc:	8f ef       	ldi	r24, 0xFF	; 255
    34de:	80 83       	st	Z, r24
    34e0:	1b c0       	rjmp	.+54     	; 0x3518 <DIO_setPortDirection+0xc2>
			}
			else
			{
				DDRB = 0x00;
    34e2:	e7 e3       	ldi	r30, 0x37	; 55
    34e4:	f0 e0       	ldi	r31, 0x00	; 0
    34e6:	10 82       	st	Z, r1
    34e8:	17 c0       	rjmp	.+46     	; 0x3518 <DIO_setPortDirection+0xc2>
			}
			break;

		case 2:
			if(DIO_PORT_OUTPUT == PortDirection)
    34ea:	8a 81       	ldd	r24, Y+2	; 0x02
    34ec:	8f 3f       	cpi	r24, 0xFF	; 255
    34ee:	29 f4       	brne	.+10     	; 0x34fa <DIO_setPortDirection+0xa4>
			{
				DDRC = 0xff;
    34f0:	e4 e3       	ldi	r30, 0x34	; 52
    34f2:	f0 e0       	ldi	r31, 0x00	; 0
    34f4:	8f ef       	ldi	r24, 0xFF	; 255
    34f6:	80 83       	st	Z, r24
    34f8:	0f c0       	rjmp	.+30     	; 0x3518 <DIO_setPortDirection+0xc2>
			}
			else
			{
				DDRC = 0x00;
    34fa:	e4 e3       	ldi	r30, 0x34	; 52
    34fc:	f0 e0       	ldi	r31, 0x00	; 0
    34fe:	10 82       	st	Z, r1
    3500:	0b c0       	rjmp	.+22     	; 0x3518 <DIO_setPortDirection+0xc2>
			}
			break;

		case 3:
			if(DIO_PORT_OUTPUT == PortDirection)
    3502:	8a 81       	ldd	r24, Y+2	; 0x02
    3504:	8f 3f       	cpi	r24, 0xFF	; 255
    3506:	29 f4       	brne	.+10     	; 0x3512 <DIO_setPortDirection+0xbc>
			{
				DDRD = 0xff;
    3508:	e1 e3       	ldi	r30, 0x31	; 49
    350a:	f0 e0       	ldi	r31, 0x00	; 0
    350c:	8f ef       	ldi	r24, 0xFF	; 255
    350e:	80 83       	st	Z, r24
    3510:	03 c0       	rjmp	.+6      	; 0x3518 <DIO_setPortDirection+0xc2>
			}
			else
			{
				DDRD = 0x00;
    3512:	e1 e3       	ldi	r30, 0x31	; 49
    3514:	f0 e0       	ldi	r31, 0x00	; 0
    3516:	10 82       	st	Z, r1
			}
			break;
		}
	}
}
    3518:	0f 90       	pop	r0
    351a:	0f 90       	pop	r0
    351c:	0f 90       	pop	r0
    351e:	0f 90       	pop	r0
    3520:	cf 91       	pop	r28
    3522:	df 91       	pop	r29
    3524:	08 95       	ret

00003526 <DIO_setPortValue>:


void DIO_setPortValue(u8 PortId, u8 PortValue)
{
    3526:	df 93       	push	r29
    3528:	cf 93       	push	r28
    352a:	00 d0       	rcall	.+0      	; 0x352c <DIO_setPortValue+0x6>
    352c:	00 d0       	rcall	.+0      	; 0x352e <DIO_setPortValue+0x8>
    352e:	cd b7       	in	r28, 0x3d	; 61
    3530:	de b7       	in	r29, 0x3e	; 62
    3532:	89 83       	std	Y+1, r24	; 0x01
    3534:	6a 83       	std	Y+2, r22	; 0x02
	if(PortId<=3)
    3536:	89 81       	ldd	r24, Y+1	; 0x01
    3538:	84 30       	cpi	r24, 0x04	; 4
    353a:	90 f5       	brcc	.+100    	; 0x35a0 <DIO_setPortValue+0x7a>
	{
		switch(PortId)
    353c:	89 81       	ldd	r24, Y+1	; 0x01
    353e:	28 2f       	mov	r18, r24
    3540:	30 e0       	ldi	r19, 0x00	; 0
    3542:	3c 83       	std	Y+4, r19	; 0x04
    3544:	2b 83       	std	Y+3, r18	; 0x03
    3546:	8b 81       	ldd	r24, Y+3	; 0x03
    3548:	9c 81       	ldd	r25, Y+4	; 0x04
    354a:	81 30       	cpi	r24, 0x01	; 1
    354c:	91 05       	cpc	r25, r1
    354e:	d1 f0       	breq	.+52     	; 0x3584 <DIO_setPortValue+0x5e>
    3550:	2b 81       	ldd	r18, Y+3	; 0x03
    3552:	3c 81       	ldd	r19, Y+4	; 0x04
    3554:	22 30       	cpi	r18, 0x02	; 2
    3556:	31 05       	cpc	r19, r1
    3558:	2c f4       	brge	.+10     	; 0x3564 <DIO_setPortValue+0x3e>
    355a:	8b 81       	ldd	r24, Y+3	; 0x03
    355c:	9c 81       	ldd	r25, Y+4	; 0x04
    355e:	00 97       	sbiw	r24, 0x00	; 0
    3560:	61 f0       	breq	.+24     	; 0x357a <DIO_setPortValue+0x54>
    3562:	1e c0       	rjmp	.+60     	; 0x35a0 <DIO_setPortValue+0x7a>
    3564:	2b 81       	ldd	r18, Y+3	; 0x03
    3566:	3c 81       	ldd	r19, Y+4	; 0x04
    3568:	22 30       	cpi	r18, 0x02	; 2
    356a:	31 05       	cpc	r19, r1
    356c:	81 f0       	breq	.+32     	; 0x358e <DIO_setPortValue+0x68>
    356e:	8b 81       	ldd	r24, Y+3	; 0x03
    3570:	9c 81       	ldd	r25, Y+4	; 0x04
    3572:	83 30       	cpi	r24, 0x03	; 3
    3574:	91 05       	cpc	r25, r1
    3576:	81 f0       	breq	.+32     	; 0x3598 <DIO_setPortValue+0x72>
    3578:	13 c0       	rjmp	.+38     	; 0x35a0 <DIO_setPortValue+0x7a>
		{
		case 0:
			PORTA = PortValue;
    357a:	eb e3       	ldi	r30, 0x3B	; 59
    357c:	f0 e0       	ldi	r31, 0x00	; 0
    357e:	8a 81       	ldd	r24, Y+2	; 0x02
    3580:	80 83       	st	Z, r24
    3582:	0e c0       	rjmp	.+28     	; 0x35a0 <DIO_setPortValue+0x7a>
			break;

		case 1:
			PORTB = PortValue;
    3584:	e8 e3       	ldi	r30, 0x38	; 56
    3586:	f0 e0       	ldi	r31, 0x00	; 0
    3588:	8a 81       	ldd	r24, Y+2	; 0x02
    358a:	80 83       	st	Z, r24
    358c:	09 c0       	rjmp	.+18     	; 0x35a0 <DIO_setPortValue+0x7a>
			break;

		case 2:
			PORTC = PortValue;
    358e:	e5 e3       	ldi	r30, 0x35	; 53
    3590:	f0 e0       	ldi	r31, 0x00	; 0
    3592:	8a 81       	ldd	r24, Y+2	; 0x02
    3594:	80 83       	st	Z, r24
    3596:	04 c0       	rjmp	.+8      	; 0x35a0 <DIO_setPortValue+0x7a>
			break;

		case 3:
			PORTD = PortValue;
    3598:	e2 e3       	ldi	r30, 0x32	; 50
    359a:	f0 e0       	ldi	r31, 0x00	; 0
    359c:	8a 81       	ldd	r24, Y+2	; 0x02
    359e:	80 83       	st	Z, r24
			break;
		}
	}
}
    35a0:	0f 90       	pop	r0
    35a2:	0f 90       	pop	r0
    35a4:	0f 90       	pop	r0
    35a6:	0f 90       	pop	r0
    35a8:	cf 91       	pop	r28
    35aa:	df 91       	pop	r29
    35ac:	08 95       	ret

000035ae <DIO_getPortValue>:


void DIO_getPortValue(u8 PortId, u8* PortValue)
{
    35ae:	df 93       	push	r29
    35b0:	cf 93       	push	r28
    35b2:	00 d0       	rcall	.+0      	; 0x35b4 <DIO_getPortValue+0x6>
    35b4:	00 d0       	rcall	.+0      	; 0x35b6 <DIO_getPortValue+0x8>
    35b6:	0f 92       	push	r0
    35b8:	cd b7       	in	r28, 0x3d	; 61
    35ba:	de b7       	in	r29, 0x3e	; 62
    35bc:	89 83       	std	Y+1, r24	; 0x01
    35be:	7b 83       	std	Y+3, r23	; 0x03
    35c0:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && (PortValue != 0))
    35c2:	89 81       	ldd	r24, Y+1	; 0x01
    35c4:	84 30       	cpi	r24, 0x04	; 4
    35c6:	08 f0       	brcs	.+2      	; 0x35ca <DIO_getPortValue+0x1c>
    35c8:	3e c0       	rjmp	.+124    	; 0x3646 <DIO_getPortValue+0x98>
    35ca:	8a 81       	ldd	r24, Y+2	; 0x02
    35cc:	9b 81       	ldd	r25, Y+3	; 0x03
    35ce:	00 97       	sbiw	r24, 0x00	; 0
    35d0:	d1 f1       	breq	.+116    	; 0x3646 <DIO_getPortValue+0x98>
	{
		switch(PortId)
    35d2:	89 81       	ldd	r24, Y+1	; 0x01
    35d4:	28 2f       	mov	r18, r24
    35d6:	30 e0       	ldi	r19, 0x00	; 0
    35d8:	3d 83       	std	Y+5, r19	; 0x05
    35da:	2c 83       	std	Y+4, r18	; 0x04
    35dc:	8c 81       	ldd	r24, Y+4	; 0x04
    35de:	9d 81       	ldd	r25, Y+5	; 0x05
    35e0:	81 30       	cpi	r24, 0x01	; 1
    35e2:	91 05       	cpc	r25, r1
    35e4:	e1 f0       	breq	.+56     	; 0x361e <DIO_getPortValue+0x70>
    35e6:	2c 81       	ldd	r18, Y+4	; 0x04
    35e8:	3d 81       	ldd	r19, Y+5	; 0x05
    35ea:	22 30       	cpi	r18, 0x02	; 2
    35ec:	31 05       	cpc	r19, r1
    35ee:	2c f4       	brge	.+10     	; 0x35fa <DIO_getPortValue+0x4c>
    35f0:	8c 81       	ldd	r24, Y+4	; 0x04
    35f2:	9d 81       	ldd	r25, Y+5	; 0x05
    35f4:	00 97       	sbiw	r24, 0x00	; 0
    35f6:	61 f0       	breq	.+24     	; 0x3610 <DIO_getPortValue+0x62>
    35f8:	26 c0       	rjmp	.+76     	; 0x3646 <DIO_getPortValue+0x98>
    35fa:	2c 81       	ldd	r18, Y+4	; 0x04
    35fc:	3d 81       	ldd	r19, Y+5	; 0x05
    35fe:	22 30       	cpi	r18, 0x02	; 2
    3600:	31 05       	cpc	r19, r1
    3602:	a1 f0       	breq	.+40     	; 0x362c <DIO_getPortValue+0x7e>
    3604:	8c 81       	ldd	r24, Y+4	; 0x04
    3606:	9d 81       	ldd	r25, Y+5	; 0x05
    3608:	83 30       	cpi	r24, 0x03	; 3
    360a:	91 05       	cpc	r25, r1
    360c:	b1 f0       	breq	.+44     	; 0x363a <DIO_getPortValue+0x8c>
    360e:	1b c0       	rjmp	.+54     	; 0x3646 <DIO_getPortValue+0x98>
		{
		case 0:
			*PortValue = PINA;
    3610:	e9 e3       	ldi	r30, 0x39	; 57
    3612:	f0 e0       	ldi	r31, 0x00	; 0
    3614:	80 81       	ld	r24, Z
    3616:	ea 81       	ldd	r30, Y+2	; 0x02
    3618:	fb 81       	ldd	r31, Y+3	; 0x03
    361a:	80 83       	st	Z, r24
    361c:	14 c0       	rjmp	.+40     	; 0x3646 <DIO_getPortValue+0x98>
			break;

		case 1:
			*PortValue = PINB;
    361e:	e6 e3       	ldi	r30, 0x36	; 54
    3620:	f0 e0       	ldi	r31, 0x00	; 0
    3622:	80 81       	ld	r24, Z
    3624:	ea 81       	ldd	r30, Y+2	; 0x02
    3626:	fb 81       	ldd	r31, Y+3	; 0x03
    3628:	80 83       	st	Z, r24
    362a:	0d c0       	rjmp	.+26     	; 0x3646 <DIO_getPortValue+0x98>
			break;

		case 2:
			*PortValue = PINC;
    362c:	e3 e3       	ldi	r30, 0x33	; 51
    362e:	f0 e0       	ldi	r31, 0x00	; 0
    3630:	80 81       	ld	r24, Z
    3632:	ea 81       	ldd	r30, Y+2	; 0x02
    3634:	fb 81       	ldd	r31, Y+3	; 0x03
    3636:	80 83       	st	Z, r24
    3638:	06 c0       	rjmp	.+12     	; 0x3646 <DIO_getPortValue+0x98>
			break;

		case 3:
			*PortValue = PIND;
    363a:	e0 e3       	ldi	r30, 0x30	; 48
    363c:	f0 e0       	ldi	r31, 0x00	; 0
    363e:	80 81       	ld	r24, Z
    3640:	ea 81       	ldd	r30, Y+2	; 0x02
    3642:	fb 81       	ldd	r31, Y+3	; 0x03
    3644:	80 83       	st	Z, r24
			break;
		}
	}
}
    3646:	0f 90       	pop	r0
    3648:	0f 90       	pop	r0
    364a:	0f 90       	pop	r0
    364c:	0f 90       	pop	r0
    364e:	0f 90       	pop	r0
    3650:	cf 91       	pop	r28
    3652:	df 91       	pop	r29
    3654:	08 95       	ret

00003656 <DIO_togglePortValue>:


void DIO_togglePortValue(u8 PortId)
{
    3656:	df 93       	push	r29
    3658:	cf 93       	push	r28
    365a:	00 d0       	rcall	.+0      	; 0x365c <DIO_togglePortValue+0x6>
    365c:	0f 92       	push	r0
    365e:	cd b7       	in	r28, 0x3d	; 61
    3660:	de b7       	in	r29, 0x3e	; 62
    3662:	89 83       	std	Y+1, r24	; 0x01
	if(PortId<=3)
    3664:	89 81       	ldd	r24, Y+1	; 0x01
    3666:	84 30       	cpi	r24, 0x04	; 4
    3668:	08 f0       	brcs	.+2      	; 0x366c <DIO_togglePortValue+0x16>
    366a:	3e c0       	rjmp	.+124    	; 0x36e8 <DIO_togglePortValue+0x92>
	{
		switch(PortId)
    366c:	89 81       	ldd	r24, Y+1	; 0x01
    366e:	28 2f       	mov	r18, r24
    3670:	30 e0       	ldi	r19, 0x00	; 0
    3672:	3b 83       	std	Y+3, r19	; 0x03
    3674:	2a 83       	std	Y+2, r18	; 0x02
    3676:	8a 81       	ldd	r24, Y+2	; 0x02
    3678:	9b 81       	ldd	r25, Y+3	; 0x03
    367a:	81 30       	cpi	r24, 0x01	; 1
    367c:	91 05       	cpc	r25, r1
    367e:	e9 f0       	breq	.+58     	; 0x36ba <DIO_togglePortValue+0x64>
    3680:	2a 81       	ldd	r18, Y+2	; 0x02
    3682:	3b 81       	ldd	r19, Y+3	; 0x03
    3684:	22 30       	cpi	r18, 0x02	; 2
    3686:	31 05       	cpc	r19, r1
    3688:	2c f4       	brge	.+10     	; 0x3694 <DIO_togglePortValue+0x3e>
    368a:	8a 81       	ldd	r24, Y+2	; 0x02
    368c:	9b 81       	ldd	r25, Y+3	; 0x03
    368e:	00 97       	sbiw	r24, 0x00	; 0
    3690:	61 f0       	breq	.+24     	; 0x36aa <DIO_togglePortValue+0x54>
    3692:	2a c0       	rjmp	.+84     	; 0x36e8 <DIO_togglePortValue+0x92>
    3694:	2a 81       	ldd	r18, Y+2	; 0x02
    3696:	3b 81       	ldd	r19, Y+3	; 0x03
    3698:	22 30       	cpi	r18, 0x02	; 2
    369a:	31 05       	cpc	r19, r1
    369c:	b1 f0       	breq	.+44     	; 0x36ca <DIO_togglePortValue+0x74>
    369e:	8a 81       	ldd	r24, Y+2	; 0x02
    36a0:	9b 81       	ldd	r25, Y+3	; 0x03
    36a2:	83 30       	cpi	r24, 0x03	; 3
    36a4:	91 05       	cpc	r25, r1
    36a6:	c9 f0       	breq	.+50     	; 0x36da <DIO_togglePortValue+0x84>
    36a8:	1f c0       	rjmp	.+62     	; 0x36e8 <DIO_togglePortValue+0x92>
		{
		case 0:
			PORTA = ~PORTA;
    36aa:	ab e3       	ldi	r26, 0x3B	; 59
    36ac:	b0 e0       	ldi	r27, 0x00	; 0
    36ae:	eb e3       	ldi	r30, 0x3B	; 59
    36b0:	f0 e0       	ldi	r31, 0x00	; 0
    36b2:	80 81       	ld	r24, Z
    36b4:	80 95       	com	r24
    36b6:	8c 93       	st	X, r24
    36b8:	17 c0       	rjmp	.+46     	; 0x36e8 <DIO_togglePortValue+0x92>
			break;

		case 1:
			PORTB = ~PORTB;
    36ba:	a8 e3       	ldi	r26, 0x38	; 56
    36bc:	b0 e0       	ldi	r27, 0x00	; 0
    36be:	e8 e3       	ldi	r30, 0x38	; 56
    36c0:	f0 e0       	ldi	r31, 0x00	; 0
    36c2:	80 81       	ld	r24, Z
    36c4:	80 95       	com	r24
    36c6:	8c 93       	st	X, r24
    36c8:	0f c0       	rjmp	.+30     	; 0x36e8 <DIO_togglePortValue+0x92>
			break;

		case 2:
			PORTC = ~PORTC;
    36ca:	a5 e3       	ldi	r26, 0x35	; 53
    36cc:	b0 e0       	ldi	r27, 0x00	; 0
    36ce:	e5 e3       	ldi	r30, 0x35	; 53
    36d0:	f0 e0       	ldi	r31, 0x00	; 0
    36d2:	80 81       	ld	r24, Z
    36d4:	80 95       	com	r24
    36d6:	8c 93       	st	X, r24
    36d8:	07 c0       	rjmp	.+14     	; 0x36e8 <DIO_togglePortValue+0x92>
			break;

		case 3:
			PORTD = ~PORTD;
    36da:	a2 e3       	ldi	r26, 0x32	; 50
    36dc:	b0 e0       	ldi	r27, 0x00	; 0
    36de:	e2 e3       	ldi	r30, 0x32	; 50
    36e0:	f0 e0       	ldi	r31, 0x00	; 0
    36e2:	80 81       	ld	r24, Z
    36e4:	80 95       	com	r24
    36e6:	8c 93       	st	X, r24
			break;
		}
	}
}
    36e8:	0f 90       	pop	r0
    36ea:	0f 90       	pop	r0
    36ec:	0f 90       	pop	r0
    36ee:	cf 91       	pop	r28
    36f0:	df 91       	pop	r29
    36f2:	08 95       	ret

000036f4 <DIO_activePortInPullUpResistance>:


void DIO_activePortInPullUpResistance(u8 PortId)
{
    36f4:	df 93       	push	r29
    36f6:	cf 93       	push	r28
    36f8:	00 d0       	rcall	.+0      	; 0x36fa <DIO_activePortInPullUpResistance+0x6>
    36fa:	0f 92       	push	r0
    36fc:	cd b7       	in	r28, 0x3d	; 61
    36fe:	de b7       	in	r29, 0x3e	; 62
    3700:	89 83       	std	Y+1, r24	; 0x01
	if(PortId<=3)
    3702:	89 81       	ldd	r24, Y+1	; 0x01
    3704:	84 30       	cpi	r24, 0x04	; 4
    3706:	90 f5       	brcc	.+100    	; 0x376c <DIO_activePortInPullUpResistance+0x78>
	{
		switch(PortId)
    3708:	89 81       	ldd	r24, Y+1	; 0x01
    370a:	28 2f       	mov	r18, r24
    370c:	30 e0       	ldi	r19, 0x00	; 0
    370e:	3b 83       	std	Y+3, r19	; 0x03
    3710:	2a 83       	std	Y+2, r18	; 0x02
    3712:	8a 81       	ldd	r24, Y+2	; 0x02
    3714:	9b 81       	ldd	r25, Y+3	; 0x03
    3716:	81 30       	cpi	r24, 0x01	; 1
    3718:	91 05       	cpc	r25, r1
    371a:	d1 f0       	breq	.+52     	; 0x3750 <DIO_activePortInPullUpResistance+0x5c>
    371c:	2a 81       	ldd	r18, Y+2	; 0x02
    371e:	3b 81       	ldd	r19, Y+3	; 0x03
    3720:	22 30       	cpi	r18, 0x02	; 2
    3722:	31 05       	cpc	r19, r1
    3724:	2c f4       	brge	.+10     	; 0x3730 <DIO_activePortInPullUpResistance+0x3c>
    3726:	8a 81       	ldd	r24, Y+2	; 0x02
    3728:	9b 81       	ldd	r25, Y+3	; 0x03
    372a:	00 97       	sbiw	r24, 0x00	; 0
    372c:	61 f0       	breq	.+24     	; 0x3746 <DIO_activePortInPullUpResistance+0x52>
    372e:	1e c0       	rjmp	.+60     	; 0x376c <DIO_activePortInPullUpResistance+0x78>
    3730:	2a 81       	ldd	r18, Y+2	; 0x02
    3732:	3b 81       	ldd	r19, Y+3	; 0x03
    3734:	22 30       	cpi	r18, 0x02	; 2
    3736:	31 05       	cpc	r19, r1
    3738:	81 f0       	breq	.+32     	; 0x375a <DIO_activePortInPullUpResistance+0x66>
    373a:	8a 81       	ldd	r24, Y+2	; 0x02
    373c:	9b 81       	ldd	r25, Y+3	; 0x03
    373e:	83 30       	cpi	r24, 0x03	; 3
    3740:	91 05       	cpc	r25, r1
    3742:	81 f0       	breq	.+32     	; 0x3764 <DIO_activePortInPullUpResistance+0x70>
    3744:	13 c0       	rjmp	.+38     	; 0x376c <DIO_activePortInPullUpResistance+0x78>
		{
		case 0:
			PORTA = 0xff;
    3746:	eb e3       	ldi	r30, 0x3B	; 59
    3748:	f0 e0       	ldi	r31, 0x00	; 0
    374a:	8f ef       	ldi	r24, 0xFF	; 255
    374c:	80 83       	st	Z, r24
    374e:	0e c0       	rjmp	.+28     	; 0x376c <DIO_activePortInPullUpResistance+0x78>
			break;

		case 1:
			PORTB = 0xff;
    3750:	e8 e3       	ldi	r30, 0x38	; 56
    3752:	f0 e0       	ldi	r31, 0x00	; 0
    3754:	8f ef       	ldi	r24, 0xFF	; 255
    3756:	80 83       	st	Z, r24
    3758:	09 c0       	rjmp	.+18     	; 0x376c <DIO_activePortInPullUpResistance+0x78>
			break;

		case 2:
			PORTC = 0xff;
    375a:	e5 e3       	ldi	r30, 0x35	; 53
    375c:	f0 e0       	ldi	r31, 0x00	; 0
    375e:	8f ef       	ldi	r24, 0xFF	; 255
    3760:	80 83       	st	Z, r24
    3762:	04 c0       	rjmp	.+8      	; 0x376c <DIO_activePortInPullUpResistance+0x78>
			break;

		case 3:
			PORTD = 0xff;
    3764:	e2 e3       	ldi	r30, 0x32	; 50
    3766:	f0 e0       	ldi	r31, 0x00	; 0
    3768:	8f ef       	ldi	r24, 0xFF	; 255
    376a:	80 83       	st	Z, r24
			break;
		}
	}
    376c:	0f 90       	pop	r0
    376e:	0f 90       	pop	r0
    3770:	0f 90       	pop	r0
    3772:	cf 91       	pop	r28
    3774:	df 91       	pop	r29
    3776:	08 95       	ret

00003778 <LCD_init>:
#include "LCD_config.h"
#include "LCD_private.h"


void LCD_init(void)
{
    3778:	0f 93       	push	r16
    377a:	1f 93       	push	r17
    377c:	df 93       	push	r29
    377e:	cf 93       	push	r28
    3780:	cd b7       	in	r28, 0x3d	; 61
    3782:	de b7       	in	r29, 0x3e	; 62
    3784:	ca 55       	subi	r28, 0x5A	; 90
    3786:	d0 40       	sbci	r29, 0x00	; 0
    3788:	0f b6       	in	r0, 0x3f	; 63
    378a:	f8 94       	cli
    378c:	de bf       	out	0x3e, r29	; 62
    378e:	0f be       	out	0x3f, r0	; 63
    3790:	cd bf       	out	0x3d, r28	; 61
	// Intialize LCD pins As OutPut Pins
	DIO_setPinDirection(LCD_RS_PORT, LCD_RS_PIN, DIO_PIN_OUTPUT);
    3792:	81 e0       	ldi	r24, 0x01	; 1
    3794:	61 e0       	ldi	r22, 0x01	; 1
    3796:	41 e0       	ldi	r20, 0x01	; 1
    3798:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
	DIO_setPinDirection(LCD_RW_PORT, LCD_RW_PIN, DIO_PIN_OUTPUT);
    379c:	81 e0       	ldi	r24, 0x01	; 1
    379e:	62 e0       	ldi	r22, 0x02	; 2
    37a0:	41 e0       	ldi	r20, 0x01	; 1
    37a2:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
	DIO_setPinDirection(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_OUTPUT);
    37a6:	81 e0       	ldi	r24, 0x01	; 1
    37a8:	63 e0       	ldi	r22, 0x03	; 3
    37aa:	41 e0       	ldi	r20, 0x01	; 1
    37ac:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
	DIO_setPinDirection(LCD_D4_PORT, LCD_D4_PIN, DIO_PIN_OUTPUT);
    37b0:	80 e0       	ldi	r24, 0x00	; 0
    37b2:	64 e0       	ldi	r22, 0x04	; 4
    37b4:	41 e0       	ldi	r20, 0x01	; 1
    37b6:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
	DIO_setPinDirection(LCD_D5_PORT, LCD_D5_PIN, DIO_PIN_OUTPUT);
    37ba:	80 e0       	ldi	r24, 0x00	; 0
    37bc:	65 e0       	ldi	r22, 0x05	; 5
    37be:	41 e0       	ldi	r20, 0x01	; 1
    37c0:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
	DIO_setPinDirection(LCD_D6_PORT, LCD_D6_PIN, DIO_PIN_OUTPUT);
    37c4:	80 e0       	ldi	r24, 0x00	; 0
    37c6:	66 e0       	ldi	r22, 0x06	; 6
    37c8:	41 e0       	ldi	r20, 0x01	; 1
    37ca:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
	DIO_setPinDirection(LCD_D7_PORT, LCD_D7_PIN, DIO_PIN_OUTPUT);
    37ce:	80 e0       	ldi	r24, 0x00	; 0
    37d0:	67 e0       	ldi	r22, 0x07	; 7
    37d2:	41 e0       	ldi	r20, 0x01	; 1
    37d4:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
    37d8:	fe 01       	movw	r30, r28
    37da:	e9 5a       	subi	r30, 0xA9	; 169
    37dc:	ff 4f       	sbci	r31, 0xFF	; 255
    37de:	80 e0       	ldi	r24, 0x00	; 0
    37e0:	90 e0       	ldi	r25, 0x00	; 0
    37e2:	ac e0       	ldi	r26, 0x0C	; 12
    37e4:	b2 e4       	ldi	r27, 0x42	; 66
    37e6:	80 83       	st	Z, r24
    37e8:	91 83       	std	Z+1, r25	; 0x01
    37ea:	a2 83       	std	Z+2, r26	; 0x02
    37ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37ee:	8e 01       	movw	r16, r28
    37f0:	0d 5a       	subi	r16, 0xAD	; 173
    37f2:	1f 4f       	sbci	r17, 0xFF	; 255
    37f4:	fe 01       	movw	r30, r28
    37f6:	e9 5a       	subi	r30, 0xA9	; 169
    37f8:	ff 4f       	sbci	r31, 0xFF	; 255
    37fa:	60 81       	ld	r22, Z
    37fc:	71 81       	ldd	r23, Z+1	; 0x01
    37fe:	82 81       	ldd	r24, Z+2	; 0x02
    3800:	93 81       	ldd	r25, Z+3	; 0x03
    3802:	20 e0       	ldi	r18, 0x00	; 0
    3804:	30 e0       	ldi	r19, 0x00	; 0
    3806:	4a e7       	ldi	r20, 0x7A	; 122
    3808:	55 e4       	ldi	r21, 0x45	; 69
    380a:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    380e:	dc 01       	movw	r26, r24
    3810:	cb 01       	movw	r24, r22
    3812:	f8 01       	movw	r30, r16
    3814:	80 83       	st	Z, r24
    3816:	91 83       	std	Z+1, r25	; 0x01
    3818:	a2 83       	std	Z+2, r26	; 0x02
    381a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    381c:	fe 01       	movw	r30, r28
    381e:	ed 5a       	subi	r30, 0xAD	; 173
    3820:	ff 4f       	sbci	r31, 0xFF	; 255
    3822:	60 81       	ld	r22, Z
    3824:	71 81       	ldd	r23, Z+1	; 0x01
    3826:	82 81       	ldd	r24, Z+2	; 0x02
    3828:	93 81       	ldd	r25, Z+3	; 0x03
    382a:	20 e0       	ldi	r18, 0x00	; 0
    382c:	30 e0       	ldi	r19, 0x00	; 0
    382e:	40 e8       	ldi	r20, 0x80	; 128
    3830:	5f e3       	ldi	r21, 0x3F	; 63
    3832:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    3836:	88 23       	and	r24, r24
    3838:	44 f4       	brge	.+16     	; 0x384a <LCD_init+0xd2>
		__ticks = 1;
    383a:	fe 01       	movw	r30, r28
    383c:	ef 5a       	subi	r30, 0xAF	; 175
    383e:	ff 4f       	sbci	r31, 0xFF	; 255
    3840:	81 e0       	ldi	r24, 0x01	; 1
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	91 83       	std	Z+1, r25	; 0x01
    3846:	80 83       	st	Z, r24
    3848:	64 c0       	rjmp	.+200    	; 0x3912 <LCD_init+0x19a>
	else if (__tmp > 65535)
    384a:	fe 01       	movw	r30, r28
    384c:	ed 5a       	subi	r30, 0xAD	; 173
    384e:	ff 4f       	sbci	r31, 0xFF	; 255
    3850:	60 81       	ld	r22, Z
    3852:	71 81       	ldd	r23, Z+1	; 0x01
    3854:	82 81       	ldd	r24, Z+2	; 0x02
    3856:	93 81       	ldd	r25, Z+3	; 0x03
    3858:	20 e0       	ldi	r18, 0x00	; 0
    385a:	3f ef       	ldi	r19, 0xFF	; 255
    385c:	4f e7       	ldi	r20, 0x7F	; 127
    385e:	57 e4       	ldi	r21, 0x47	; 71
    3860:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    3864:	18 16       	cp	r1, r24
    3866:	0c f0       	brlt	.+2      	; 0x386a <LCD_init+0xf2>
    3868:	43 c0       	rjmp	.+134    	; 0x38f0 <LCD_init+0x178>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    386a:	fe 01       	movw	r30, r28
    386c:	e9 5a       	subi	r30, 0xA9	; 169
    386e:	ff 4f       	sbci	r31, 0xFF	; 255
    3870:	60 81       	ld	r22, Z
    3872:	71 81       	ldd	r23, Z+1	; 0x01
    3874:	82 81       	ldd	r24, Z+2	; 0x02
    3876:	93 81       	ldd	r25, Z+3	; 0x03
    3878:	20 e0       	ldi	r18, 0x00	; 0
    387a:	30 e0       	ldi	r19, 0x00	; 0
    387c:	40 e2       	ldi	r20, 0x20	; 32
    387e:	51 e4       	ldi	r21, 0x41	; 65
    3880:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3884:	dc 01       	movw	r26, r24
    3886:	cb 01       	movw	r24, r22
    3888:	8e 01       	movw	r16, r28
    388a:	0f 5a       	subi	r16, 0xAF	; 175
    388c:	1f 4f       	sbci	r17, 0xFF	; 255
    388e:	bc 01       	movw	r22, r24
    3890:	cd 01       	movw	r24, r26
    3892:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3896:	dc 01       	movw	r26, r24
    3898:	cb 01       	movw	r24, r22
    389a:	f8 01       	movw	r30, r16
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
    38a0:	1f c0       	rjmp	.+62     	; 0x38e0 <LCD_init+0x168>
    38a2:	fe 01       	movw	r30, r28
    38a4:	e1 5b       	subi	r30, 0xB1	; 177
    38a6:	ff 4f       	sbci	r31, 0xFF	; 255
    38a8:	80 e9       	ldi	r24, 0x90	; 144
    38aa:	91 e0       	ldi	r25, 0x01	; 1
    38ac:	91 83       	std	Z+1, r25	; 0x01
    38ae:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    38b0:	fe 01       	movw	r30, r28
    38b2:	e1 5b       	subi	r30, 0xB1	; 177
    38b4:	ff 4f       	sbci	r31, 0xFF	; 255
    38b6:	80 81       	ld	r24, Z
    38b8:	91 81       	ldd	r25, Z+1	; 0x01
    38ba:	01 97       	sbiw	r24, 0x01	; 1
    38bc:	f1 f7       	brne	.-4      	; 0x38ba <LCD_init+0x142>
    38be:	fe 01       	movw	r30, r28
    38c0:	e1 5b       	subi	r30, 0xB1	; 177
    38c2:	ff 4f       	sbci	r31, 0xFF	; 255
    38c4:	91 83       	std	Z+1, r25	; 0x01
    38c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38c8:	de 01       	movw	r26, r28
    38ca:	af 5a       	subi	r26, 0xAF	; 175
    38cc:	bf 4f       	sbci	r27, 0xFF	; 255
    38ce:	fe 01       	movw	r30, r28
    38d0:	ef 5a       	subi	r30, 0xAF	; 175
    38d2:	ff 4f       	sbci	r31, 0xFF	; 255
    38d4:	80 81       	ld	r24, Z
    38d6:	91 81       	ldd	r25, Z+1	; 0x01
    38d8:	01 97       	sbiw	r24, 0x01	; 1
    38da:	11 96       	adiw	r26, 0x01	; 1
    38dc:	9c 93       	st	X, r25
    38de:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38e0:	fe 01       	movw	r30, r28
    38e2:	ef 5a       	subi	r30, 0xAF	; 175
    38e4:	ff 4f       	sbci	r31, 0xFF	; 255
    38e6:	80 81       	ld	r24, Z
    38e8:	91 81       	ldd	r25, Z+1	; 0x01
    38ea:	00 97       	sbiw	r24, 0x00	; 0
    38ec:	d1 f6       	brne	.-76     	; 0x38a2 <LCD_init+0x12a>
    38ee:	27 c0       	rjmp	.+78     	; 0x393e <LCD_init+0x1c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38f0:	8e 01       	movw	r16, r28
    38f2:	0f 5a       	subi	r16, 0xAF	; 175
    38f4:	1f 4f       	sbci	r17, 0xFF	; 255
    38f6:	fe 01       	movw	r30, r28
    38f8:	ed 5a       	subi	r30, 0xAD	; 173
    38fa:	ff 4f       	sbci	r31, 0xFF	; 255
    38fc:	60 81       	ld	r22, Z
    38fe:	71 81       	ldd	r23, Z+1	; 0x01
    3900:	82 81       	ldd	r24, Z+2	; 0x02
    3902:	93 81       	ldd	r25, Z+3	; 0x03
    3904:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3908:	dc 01       	movw	r26, r24
    390a:	cb 01       	movw	r24, r22
    390c:	f8 01       	movw	r30, r16
    390e:	91 83       	std	Z+1, r25	; 0x01
    3910:	80 83       	st	Z, r24
    3912:	de 01       	movw	r26, r28
    3914:	a3 5b       	subi	r26, 0xB3	; 179
    3916:	bf 4f       	sbci	r27, 0xFF	; 255
    3918:	fe 01       	movw	r30, r28
    391a:	ef 5a       	subi	r30, 0xAF	; 175
    391c:	ff 4f       	sbci	r31, 0xFF	; 255
    391e:	80 81       	ld	r24, Z
    3920:	91 81       	ldd	r25, Z+1	; 0x01
    3922:	8d 93       	st	X+, r24
    3924:	9c 93       	st	X, r25
    3926:	fe 01       	movw	r30, r28
    3928:	e3 5b       	subi	r30, 0xB3	; 179
    392a:	ff 4f       	sbci	r31, 0xFF	; 255
    392c:	80 81       	ld	r24, Z
    392e:	91 81       	ldd	r25, Z+1	; 0x01
    3930:	01 97       	sbiw	r24, 0x01	; 1
    3932:	f1 f7       	brne	.-4      	; 0x3930 <LCD_init+0x1b8>
    3934:	fe 01       	movw	r30, r28
    3936:	e3 5b       	subi	r30, 0xB3	; 179
    3938:	ff 4f       	sbci	r31, 0xFF	; 255
    393a:	91 83       	std	Z+1, r25	; 0x01
    393c:	80 83       	st	Z, r24

	_delay_ms(35);

	// set Rs pin = 0 (write command)
	DIO_setPinValue(LCD_RS_PORT, LCD_RS_PIN, DIO_PIN_LOW);
    393e:	81 e0       	ldi	r24, 0x01	; 1
    3940:	61 e0       	ldi	r22, 0x01	; 1
    3942:	40 e0       	ldi	r20, 0x00	; 0
    3944:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
	// set Rw pin = 0 (write)
	DIO_setPinValue(LCD_RW_PORT, LCD_RW_PIN, DIO_PIN_LOW);
    3948:	81 e0       	ldi	r24, 0x01	; 1
    394a:	62 e0       	ldi	r22, 0x02	; 2
    394c:	40 e0       	ldi	r20, 0x00	; 0
    394e:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
	private_writeHalfPort(0b0010);
    3952:	82 e0       	ldi	r24, 0x02	; 2
    3954:	0e 94 59 22 	call	0x44b2	; 0x44b2 <private_writeHalfPort>
	/* Enable Pulse *//* H => L */
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_HIGH);
    3958:	81 e0       	ldi	r24, 0x01	; 1
    395a:	63 e0       	ldi	r22, 0x03	; 3
    395c:	41 e0       	ldi	r20, 0x01	; 1
    395e:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    3962:	fe 01       	movw	r30, r28
    3964:	e7 5b       	subi	r30, 0xB7	; 183
    3966:	ff 4f       	sbci	r31, 0xFF	; 255
    3968:	80 e0       	ldi	r24, 0x00	; 0
    396a:	90 e0       	ldi	r25, 0x00	; 0
    396c:	a0 e8       	ldi	r26, 0x80	; 128
    396e:	bf e3       	ldi	r27, 0x3F	; 63
    3970:	80 83       	st	Z, r24
    3972:	91 83       	std	Z+1, r25	; 0x01
    3974:	a2 83       	std	Z+2, r26	; 0x02
    3976:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3978:	8e 01       	movw	r16, r28
    397a:	0b 5b       	subi	r16, 0xBB	; 187
    397c:	1f 4f       	sbci	r17, 0xFF	; 255
    397e:	fe 01       	movw	r30, r28
    3980:	e7 5b       	subi	r30, 0xB7	; 183
    3982:	ff 4f       	sbci	r31, 0xFF	; 255
    3984:	60 81       	ld	r22, Z
    3986:	71 81       	ldd	r23, Z+1	; 0x01
    3988:	82 81       	ldd	r24, Z+2	; 0x02
    398a:	93 81       	ldd	r25, Z+3	; 0x03
    398c:	20 e0       	ldi	r18, 0x00	; 0
    398e:	30 e0       	ldi	r19, 0x00	; 0
    3990:	4a e7       	ldi	r20, 0x7A	; 122
    3992:	55 e4       	ldi	r21, 0x45	; 69
    3994:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3998:	dc 01       	movw	r26, r24
    399a:	cb 01       	movw	r24, r22
    399c:	f8 01       	movw	r30, r16
    399e:	80 83       	st	Z, r24
    39a0:	91 83       	std	Z+1, r25	; 0x01
    39a2:	a2 83       	std	Z+2, r26	; 0x02
    39a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39a6:	fe 01       	movw	r30, r28
    39a8:	eb 5b       	subi	r30, 0xBB	; 187
    39aa:	ff 4f       	sbci	r31, 0xFF	; 255
    39ac:	60 81       	ld	r22, Z
    39ae:	71 81       	ldd	r23, Z+1	; 0x01
    39b0:	82 81       	ldd	r24, Z+2	; 0x02
    39b2:	93 81       	ldd	r25, Z+3	; 0x03
    39b4:	20 e0       	ldi	r18, 0x00	; 0
    39b6:	30 e0       	ldi	r19, 0x00	; 0
    39b8:	40 e8       	ldi	r20, 0x80	; 128
    39ba:	5f e3       	ldi	r21, 0x3F	; 63
    39bc:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    39c0:	88 23       	and	r24, r24
    39c2:	44 f4       	brge	.+16     	; 0x39d4 <LCD_init+0x25c>
		__ticks = 1;
    39c4:	fe 01       	movw	r30, r28
    39c6:	ed 5b       	subi	r30, 0xBD	; 189
    39c8:	ff 4f       	sbci	r31, 0xFF	; 255
    39ca:	81 e0       	ldi	r24, 0x01	; 1
    39cc:	90 e0       	ldi	r25, 0x00	; 0
    39ce:	91 83       	std	Z+1, r25	; 0x01
    39d0:	80 83       	st	Z, r24
    39d2:	64 c0       	rjmp	.+200    	; 0x3a9c <LCD_init+0x324>
	else if (__tmp > 65535)
    39d4:	fe 01       	movw	r30, r28
    39d6:	eb 5b       	subi	r30, 0xBB	; 187
    39d8:	ff 4f       	sbci	r31, 0xFF	; 255
    39da:	60 81       	ld	r22, Z
    39dc:	71 81       	ldd	r23, Z+1	; 0x01
    39de:	82 81       	ldd	r24, Z+2	; 0x02
    39e0:	93 81       	ldd	r25, Z+3	; 0x03
    39e2:	20 e0       	ldi	r18, 0x00	; 0
    39e4:	3f ef       	ldi	r19, 0xFF	; 255
    39e6:	4f e7       	ldi	r20, 0x7F	; 127
    39e8:	57 e4       	ldi	r21, 0x47	; 71
    39ea:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    39ee:	18 16       	cp	r1, r24
    39f0:	0c f0       	brlt	.+2      	; 0x39f4 <LCD_init+0x27c>
    39f2:	43 c0       	rjmp	.+134    	; 0x3a7a <LCD_init+0x302>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39f4:	fe 01       	movw	r30, r28
    39f6:	e7 5b       	subi	r30, 0xB7	; 183
    39f8:	ff 4f       	sbci	r31, 0xFF	; 255
    39fa:	60 81       	ld	r22, Z
    39fc:	71 81       	ldd	r23, Z+1	; 0x01
    39fe:	82 81       	ldd	r24, Z+2	; 0x02
    3a00:	93 81       	ldd	r25, Z+3	; 0x03
    3a02:	20 e0       	ldi	r18, 0x00	; 0
    3a04:	30 e0       	ldi	r19, 0x00	; 0
    3a06:	40 e2       	ldi	r20, 0x20	; 32
    3a08:	51 e4       	ldi	r21, 0x41	; 65
    3a0a:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3a0e:	dc 01       	movw	r26, r24
    3a10:	cb 01       	movw	r24, r22
    3a12:	8e 01       	movw	r16, r28
    3a14:	0d 5b       	subi	r16, 0xBD	; 189
    3a16:	1f 4f       	sbci	r17, 0xFF	; 255
    3a18:	bc 01       	movw	r22, r24
    3a1a:	cd 01       	movw	r24, r26
    3a1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a20:	dc 01       	movw	r26, r24
    3a22:	cb 01       	movw	r24, r22
    3a24:	f8 01       	movw	r30, r16
    3a26:	91 83       	std	Z+1, r25	; 0x01
    3a28:	80 83       	st	Z, r24
    3a2a:	1f c0       	rjmp	.+62     	; 0x3a6a <LCD_init+0x2f2>
    3a2c:	fe 01       	movw	r30, r28
    3a2e:	ef 5b       	subi	r30, 0xBF	; 191
    3a30:	ff 4f       	sbci	r31, 0xFF	; 255
    3a32:	80 e9       	ldi	r24, 0x90	; 144
    3a34:	91 e0       	ldi	r25, 0x01	; 1
    3a36:	91 83       	std	Z+1, r25	; 0x01
    3a38:	80 83       	st	Z, r24
    3a3a:	fe 01       	movw	r30, r28
    3a3c:	ef 5b       	subi	r30, 0xBF	; 191
    3a3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a40:	80 81       	ld	r24, Z
    3a42:	91 81       	ldd	r25, Z+1	; 0x01
    3a44:	01 97       	sbiw	r24, 0x01	; 1
    3a46:	f1 f7       	brne	.-4      	; 0x3a44 <LCD_init+0x2cc>
    3a48:	fe 01       	movw	r30, r28
    3a4a:	ef 5b       	subi	r30, 0xBF	; 191
    3a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a4e:	91 83       	std	Z+1, r25	; 0x01
    3a50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a52:	de 01       	movw	r26, r28
    3a54:	ad 5b       	subi	r26, 0xBD	; 189
    3a56:	bf 4f       	sbci	r27, 0xFF	; 255
    3a58:	fe 01       	movw	r30, r28
    3a5a:	ed 5b       	subi	r30, 0xBD	; 189
    3a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a5e:	80 81       	ld	r24, Z
    3a60:	91 81       	ldd	r25, Z+1	; 0x01
    3a62:	01 97       	sbiw	r24, 0x01	; 1
    3a64:	11 96       	adiw	r26, 0x01	; 1
    3a66:	9c 93       	st	X, r25
    3a68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a6a:	fe 01       	movw	r30, r28
    3a6c:	ed 5b       	subi	r30, 0xBD	; 189
    3a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a70:	80 81       	ld	r24, Z
    3a72:	91 81       	ldd	r25, Z+1	; 0x01
    3a74:	00 97       	sbiw	r24, 0x00	; 0
    3a76:	d1 f6       	brne	.-76     	; 0x3a2c <LCD_init+0x2b4>
    3a78:	24 c0       	rjmp	.+72     	; 0x3ac2 <LCD_init+0x34a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a7a:	8e 01       	movw	r16, r28
    3a7c:	0d 5b       	subi	r16, 0xBD	; 189
    3a7e:	1f 4f       	sbci	r17, 0xFF	; 255
    3a80:	fe 01       	movw	r30, r28
    3a82:	eb 5b       	subi	r30, 0xBB	; 187
    3a84:	ff 4f       	sbci	r31, 0xFF	; 255
    3a86:	60 81       	ld	r22, Z
    3a88:	71 81       	ldd	r23, Z+1	; 0x01
    3a8a:	82 81       	ldd	r24, Z+2	; 0x02
    3a8c:	93 81       	ldd	r25, Z+3	; 0x03
    3a8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a92:	dc 01       	movw	r26, r24
    3a94:	cb 01       	movw	r24, r22
    3a96:	f8 01       	movw	r30, r16
    3a98:	91 83       	std	Z+1, r25	; 0x01
    3a9a:	80 83       	st	Z, r24
    3a9c:	fe 01       	movw	r30, r28
    3a9e:	ed 5b       	subi	r30, 0xBD	; 189
    3aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    3aa2:	80 81       	ld	r24, Z
    3aa4:	91 81       	ldd	r25, Z+1	; 0x01
    3aa6:	fe 01       	movw	r30, r28
    3aa8:	ff 96       	adiw	r30, 0x3f	; 63
    3aaa:	91 83       	std	Z+1, r25	; 0x01
    3aac:	80 83       	st	Z, r24
    3aae:	fe 01       	movw	r30, r28
    3ab0:	ff 96       	adiw	r30, 0x3f	; 63
    3ab2:	80 81       	ld	r24, Z
    3ab4:	91 81       	ldd	r25, Z+1	; 0x01
    3ab6:	01 97       	sbiw	r24, 0x01	; 1
    3ab8:	f1 f7       	brne	.-4      	; 0x3ab6 <LCD_init+0x33e>
    3aba:	fe 01       	movw	r30, r28
    3abc:	ff 96       	adiw	r30, 0x3f	; 63
    3abe:	91 83       	std	Z+1, r25	; 0x01
    3ac0:	80 83       	st	Z, r24
	_delay_ms(1);
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_LOW);
    3ac2:	81 e0       	ldi	r24, 0x01	; 1
    3ac4:	63 e0       	ldi	r22, 0x03	; 3
    3ac6:	40 e0       	ldi	r20, 0x00	; 0
    3ac8:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    // Function Set command 2*16 LCD , 4 Bit Mode
	LCD_sendCmnd(0b00101000);
    3acc:	88 e2       	ldi	r24, 0x28	; 40
    3ace:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <LCD_sendCmnd>
    3ad2:	80 e0       	ldi	r24, 0x00	; 0
    3ad4:	90 e0       	ldi	r25, 0x00	; 0
    3ad6:	a4 e3       	ldi	r26, 0x34	; 52
    3ad8:	b2 e4       	ldi	r27, 0x42	; 66
    3ada:	8b af       	std	Y+59, r24	; 0x3b
    3adc:	9c af       	std	Y+60, r25	; 0x3c
    3ade:	ad af       	std	Y+61, r26	; 0x3d
    3ae0:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3ae2:	6b ad       	ldd	r22, Y+59	; 0x3b
    3ae4:	7c ad       	ldd	r23, Y+60	; 0x3c
    3ae6:	8d ad       	ldd	r24, Y+61	; 0x3d
    3ae8:	9e ad       	ldd	r25, Y+62	; 0x3e
    3aea:	2b ea       	ldi	r18, 0xAB	; 171
    3aec:	3a ea       	ldi	r19, 0xAA	; 170
    3aee:	4a ea       	ldi	r20, 0xAA	; 170
    3af0:	50 e4       	ldi	r21, 0x40	; 64
    3af2:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3af6:	dc 01       	movw	r26, r24
    3af8:	cb 01       	movw	r24, r22
    3afa:	8f ab       	std	Y+55, r24	; 0x37
    3afc:	98 af       	std	Y+56, r25	; 0x38
    3afe:	a9 af       	std	Y+57, r26	; 0x39
    3b00:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    3b02:	6f a9       	ldd	r22, Y+55	; 0x37
    3b04:	78 ad       	ldd	r23, Y+56	; 0x38
    3b06:	89 ad       	ldd	r24, Y+57	; 0x39
    3b08:	9a ad       	ldd	r25, Y+58	; 0x3a
    3b0a:	20 e0       	ldi	r18, 0x00	; 0
    3b0c:	30 e0       	ldi	r19, 0x00	; 0
    3b0e:	40 e8       	ldi	r20, 0x80	; 128
    3b10:	5f e3       	ldi	r21, 0x3F	; 63
    3b12:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    3b16:	88 23       	and	r24, r24
    3b18:	1c f4       	brge	.+6      	; 0x3b20 <LCD_init+0x3a8>
		__ticks = 1;
    3b1a:	81 e0       	ldi	r24, 0x01	; 1
    3b1c:	8e ab       	std	Y+54, r24	; 0x36
    3b1e:	91 c0       	rjmp	.+290    	; 0x3c42 <LCD_init+0x4ca>
	else if (__tmp > 255)
    3b20:	6f a9       	ldd	r22, Y+55	; 0x37
    3b22:	78 ad       	ldd	r23, Y+56	; 0x38
    3b24:	89 ad       	ldd	r24, Y+57	; 0x39
    3b26:	9a ad       	ldd	r25, Y+58	; 0x3a
    3b28:	20 e0       	ldi	r18, 0x00	; 0
    3b2a:	30 e0       	ldi	r19, 0x00	; 0
    3b2c:	4f e7       	ldi	r20, 0x7F	; 127
    3b2e:	53 e4       	ldi	r21, 0x43	; 67
    3b30:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    3b34:	18 16       	cp	r1, r24
    3b36:	0c f0       	brlt	.+2      	; 0x3b3a <LCD_init+0x3c2>
    3b38:	7b c0       	rjmp	.+246    	; 0x3c30 <LCD_init+0x4b8>
	{
		_delay_ms(__us / 1000.0);
    3b3a:	6b ad       	ldd	r22, Y+59	; 0x3b
    3b3c:	7c ad       	ldd	r23, Y+60	; 0x3c
    3b3e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3b40:	9e ad       	ldd	r25, Y+62	; 0x3e
    3b42:	20 e0       	ldi	r18, 0x00	; 0
    3b44:	30 e0       	ldi	r19, 0x00	; 0
    3b46:	4a e7       	ldi	r20, 0x7A	; 122
    3b48:	54 e4       	ldi	r21, 0x44	; 68
    3b4a:	0e 94 76 13 	call	0x26ec	; 0x26ec <__divsf3>
    3b4e:	dc 01       	movw	r26, r24
    3b50:	cb 01       	movw	r24, r22
    3b52:	8a ab       	std	Y+50, r24	; 0x32
    3b54:	9b ab       	std	Y+51, r25	; 0x33
    3b56:	ac ab       	std	Y+52, r26	; 0x34
    3b58:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b5a:	6a a9       	ldd	r22, Y+50	; 0x32
    3b5c:	7b a9       	ldd	r23, Y+51	; 0x33
    3b5e:	8c a9       	ldd	r24, Y+52	; 0x34
    3b60:	9d a9       	ldd	r25, Y+53	; 0x35
    3b62:	20 e0       	ldi	r18, 0x00	; 0
    3b64:	30 e0       	ldi	r19, 0x00	; 0
    3b66:	4a e7       	ldi	r20, 0x7A	; 122
    3b68:	55 e4       	ldi	r21, 0x45	; 69
    3b6a:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3b6e:	dc 01       	movw	r26, r24
    3b70:	cb 01       	movw	r24, r22
    3b72:	8e a7       	std	Y+46, r24	; 0x2e
    3b74:	9f a7       	std	Y+47, r25	; 0x2f
    3b76:	a8 ab       	std	Y+48, r26	; 0x30
    3b78:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    3b7a:	6e a5       	ldd	r22, Y+46	; 0x2e
    3b7c:	7f a5       	ldd	r23, Y+47	; 0x2f
    3b7e:	88 a9       	ldd	r24, Y+48	; 0x30
    3b80:	99 a9       	ldd	r25, Y+49	; 0x31
    3b82:	20 e0       	ldi	r18, 0x00	; 0
    3b84:	30 e0       	ldi	r19, 0x00	; 0
    3b86:	40 e8       	ldi	r20, 0x80	; 128
    3b88:	5f e3       	ldi	r21, 0x3F	; 63
    3b8a:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    3b8e:	88 23       	and	r24, r24
    3b90:	2c f4       	brge	.+10     	; 0x3b9c <LCD_init+0x424>
		__ticks = 1;
    3b92:	81 e0       	ldi	r24, 0x01	; 1
    3b94:	90 e0       	ldi	r25, 0x00	; 0
    3b96:	9d a7       	std	Y+45, r25	; 0x2d
    3b98:	8c a7       	std	Y+44, r24	; 0x2c
    3b9a:	3f c0       	rjmp	.+126    	; 0x3c1a <LCD_init+0x4a2>
	else if (__tmp > 65535)
    3b9c:	6e a5       	ldd	r22, Y+46	; 0x2e
    3b9e:	7f a5       	ldd	r23, Y+47	; 0x2f
    3ba0:	88 a9       	ldd	r24, Y+48	; 0x30
    3ba2:	99 a9       	ldd	r25, Y+49	; 0x31
    3ba4:	20 e0       	ldi	r18, 0x00	; 0
    3ba6:	3f ef       	ldi	r19, 0xFF	; 255
    3ba8:	4f e7       	ldi	r20, 0x7F	; 127
    3baa:	57 e4       	ldi	r21, 0x47	; 71
    3bac:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    3bb0:	18 16       	cp	r1, r24
    3bb2:	4c f5       	brge	.+82     	; 0x3c06 <LCD_init+0x48e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bb4:	6a a9       	ldd	r22, Y+50	; 0x32
    3bb6:	7b a9       	ldd	r23, Y+51	; 0x33
    3bb8:	8c a9       	ldd	r24, Y+52	; 0x34
    3bba:	9d a9       	ldd	r25, Y+53	; 0x35
    3bbc:	20 e0       	ldi	r18, 0x00	; 0
    3bbe:	30 e0       	ldi	r19, 0x00	; 0
    3bc0:	40 e2       	ldi	r20, 0x20	; 32
    3bc2:	51 e4       	ldi	r21, 0x41	; 65
    3bc4:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3bc8:	dc 01       	movw	r26, r24
    3bca:	cb 01       	movw	r24, r22
    3bcc:	bc 01       	movw	r22, r24
    3bce:	cd 01       	movw	r24, r26
    3bd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bd4:	dc 01       	movw	r26, r24
    3bd6:	cb 01       	movw	r24, r22
    3bd8:	9d a7       	std	Y+45, r25	; 0x2d
    3bda:	8c a7       	std	Y+44, r24	; 0x2c
    3bdc:	0f c0       	rjmp	.+30     	; 0x3bfc <LCD_init+0x484>
    3bde:	80 e9       	ldi	r24, 0x90	; 144
    3be0:	91 e0       	ldi	r25, 0x01	; 1
    3be2:	9b a7       	std	Y+43, r25	; 0x2b
    3be4:	8a a7       	std	Y+42, r24	; 0x2a
    3be6:	8a a5       	ldd	r24, Y+42	; 0x2a
    3be8:	9b a5       	ldd	r25, Y+43	; 0x2b
    3bea:	01 97       	sbiw	r24, 0x01	; 1
    3bec:	f1 f7       	brne	.-4      	; 0x3bea <LCD_init+0x472>
    3bee:	9b a7       	std	Y+43, r25	; 0x2b
    3bf0:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bf2:	8c a5       	ldd	r24, Y+44	; 0x2c
    3bf4:	9d a5       	ldd	r25, Y+45	; 0x2d
    3bf6:	01 97       	sbiw	r24, 0x01	; 1
    3bf8:	9d a7       	std	Y+45, r25	; 0x2d
    3bfa:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bfc:	8c a5       	ldd	r24, Y+44	; 0x2c
    3bfe:	9d a5       	ldd	r25, Y+45	; 0x2d
    3c00:	00 97       	sbiw	r24, 0x00	; 0
    3c02:	69 f7       	brne	.-38     	; 0x3bde <LCD_init+0x466>
    3c04:	24 c0       	rjmp	.+72     	; 0x3c4e <LCD_init+0x4d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c06:	6e a5       	ldd	r22, Y+46	; 0x2e
    3c08:	7f a5       	ldd	r23, Y+47	; 0x2f
    3c0a:	88 a9       	ldd	r24, Y+48	; 0x30
    3c0c:	99 a9       	ldd	r25, Y+49	; 0x31
    3c0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c12:	dc 01       	movw	r26, r24
    3c14:	cb 01       	movw	r24, r22
    3c16:	9d a7       	std	Y+45, r25	; 0x2d
    3c18:	8c a7       	std	Y+44, r24	; 0x2c
    3c1a:	8c a5       	ldd	r24, Y+44	; 0x2c
    3c1c:	9d a5       	ldd	r25, Y+45	; 0x2d
    3c1e:	99 a7       	std	Y+41, r25	; 0x29
    3c20:	88 a7       	std	Y+40, r24	; 0x28
    3c22:	88 a5       	ldd	r24, Y+40	; 0x28
    3c24:	99 a5       	ldd	r25, Y+41	; 0x29
    3c26:	01 97       	sbiw	r24, 0x01	; 1
    3c28:	f1 f7       	brne	.-4      	; 0x3c26 <LCD_init+0x4ae>
    3c2a:	99 a7       	std	Y+41, r25	; 0x29
    3c2c:	88 a7       	std	Y+40, r24	; 0x28
    3c2e:	0f c0       	rjmp	.+30     	; 0x3c4e <LCD_init+0x4d6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3c30:	6f a9       	ldd	r22, Y+55	; 0x37
    3c32:	78 ad       	ldd	r23, Y+56	; 0x38
    3c34:	89 ad       	ldd	r24, Y+57	; 0x39
    3c36:	9a ad       	ldd	r25, Y+58	; 0x3a
    3c38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c3c:	dc 01       	movw	r26, r24
    3c3e:	cb 01       	movw	r24, r22
    3c40:	8e ab       	std	Y+54, r24	; 0x36
    3c42:	8e a9       	ldd	r24, Y+54	; 0x36
    3c44:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3c46:	8f a1       	ldd	r24, Y+39	; 0x27
    3c48:	8a 95       	dec	r24
    3c4a:	f1 f7       	brne	.-4      	; 0x3c48 <LCD_init+0x4d0>
    3c4c:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(45);

	// Display on off Control (DisplayOn, Cursor on, Blink on)
	LCD_sendCmnd(0b00001111);
    3c4e:	8f e0       	ldi	r24, 0x0F	; 15
    3c50:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <LCD_sendCmnd>
    3c54:	80 e0       	ldi	r24, 0x00	; 0
    3c56:	90 e0       	ldi	r25, 0x00	; 0
    3c58:	a4 e3       	ldi	r26, 0x34	; 52
    3c5a:	b2 e4       	ldi	r27, 0x42	; 66
    3c5c:	8b a3       	std	Y+35, r24	; 0x23
    3c5e:	9c a3       	std	Y+36, r25	; 0x24
    3c60:	ad a3       	std	Y+37, r26	; 0x25
    3c62:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3c64:	6b a1       	ldd	r22, Y+35	; 0x23
    3c66:	7c a1       	ldd	r23, Y+36	; 0x24
    3c68:	8d a1       	ldd	r24, Y+37	; 0x25
    3c6a:	9e a1       	ldd	r25, Y+38	; 0x26
    3c6c:	2b ea       	ldi	r18, 0xAB	; 171
    3c6e:	3a ea       	ldi	r19, 0xAA	; 170
    3c70:	4a ea       	ldi	r20, 0xAA	; 170
    3c72:	50 e4       	ldi	r21, 0x40	; 64
    3c74:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3c78:	dc 01       	movw	r26, r24
    3c7a:	cb 01       	movw	r24, r22
    3c7c:	8f 8f       	std	Y+31, r24	; 0x1f
    3c7e:	98 a3       	std	Y+32, r25	; 0x20
    3c80:	a9 a3       	std	Y+33, r26	; 0x21
    3c82:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    3c84:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3c86:	78 a1       	ldd	r23, Y+32	; 0x20
    3c88:	89 a1       	ldd	r24, Y+33	; 0x21
    3c8a:	9a a1       	ldd	r25, Y+34	; 0x22
    3c8c:	20 e0       	ldi	r18, 0x00	; 0
    3c8e:	30 e0       	ldi	r19, 0x00	; 0
    3c90:	40 e8       	ldi	r20, 0x80	; 128
    3c92:	5f e3       	ldi	r21, 0x3F	; 63
    3c94:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    3c98:	88 23       	and	r24, r24
    3c9a:	1c f4       	brge	.+6      	; 0x3ca2 <LCD_init+0x52a>
		__ticks = 1;
    3c9c:	81 e0       	ldi	r24, 0x01	; 1
    3c9e:	8e 8f       	std	Y+30, r24	; 0x1e
    3ca0:	91 c0       	rjmp	.+290    	; 0x3dc4 <LCD_init+0x64c>
	else if (__tmp > 255)
    3ca2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3ca4:	78 a1       	ldd	r23, Y+32	; 0x20
    3ca6:	89 a1       	ldd	r24, Y+33	; 0x21
    3ca8:	9a a1       	ldd	r25, Y+34	; 0x22
    3caa:	20 e0       	ldi	r18, 0x00	; 0
    3cac:	30 e0       	ldi	r19, 0x00	; 0
    3cae:	4f e7       	ldi	r20, 0x7F	; 127
    3cb0:	53 e4       	ldi	r21, 0x43	; 67
    3cb2:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    3cb6:	18 16       	cp	r1, r24
    3cb8:	0c f0       	brlt	.+2      	; 0x3cbc <LCD_init+0x544>
    3cba:	7b c0       	rjmp	.+246    	; 0x3db2 <LCD_init+0x63a>
	{
		_delay_ms(__us / 1000.0);
    3cbc:	6b a1       	ldd	r22, Y+35	; 0x23
    3cbe:	7c a1       	ldd	r23, Y+36	; 0x24
    3cc0:	8d a1       	ldd	r24, Y+37	; 0x25
    3cc2:	9e a1       	ldd	r25, Y+38	; 0x26
    3cc4:	20 e0       	ldi	r18, 0x00	; 0
    3cc6:	30 e0       	ldi	r19, 0x00	; 0
    3cc8:	4a e7       	ldi	r20, 0x7A	; 122
    3cca:	54 e4       	ldi	r21, 0x44	; 68
    3ccc:	0e 94 76 13 	call	0x26ec	; 0x26ec <__divsf3>
    3cd0:	dc 01       	movw	r26, r24
    3cd2:	cb 01       	movw	r24, r22
    3cd4:	8a 8f       	std	Y+26, r24	; 0x1a
    3cd6:	9b 8f       	std	Y+27, r25	; 0x1b
    3cd8:	ac 8f       	std	Y+28, r26	; 0x1c
    3cda:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3cdc:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3cde:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3ce0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3ce2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3ce4:	20 e0       	ldi	r18, 0x00	; 0
    3ce6:	30 e0       	ldi	r19, 0x00	; 0
    3ce8:	4a e7       	ldi	r20, 0x7A	; 122
    3cea:	55 e4       	ldi	r21, 0x45	; 69
    3cec:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3cf0:	dc 01       	movw	r26, r24
    3cf2:	cb 01       	movw	r24, r22
    3cf4:	8e 8b       	std	Y+22, r24	; 0x16
    3cf6:	9f 8b       	std	Y+23, r25	; 0x17
    3cf8:	a8 8f       	std	Y+24, r26	; 0x18
    3cfa:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    3cfc:	6e 89       	ldd	r22, Y+22	; 0x16
    3cfe:	7f 89       	ldd	r23, Y+23	; 0x17
    3d00:	88 8d       	ldd	r24, Y+24	; 0x18
    3d02:	99 8d       	ldd	r25, Y+25	; 0x19
    3d04:	20 e0       	ldi	r18, 0x00	; 0
    3d06:	30 e0       	ldi	r19, 0x00	; 0
    3d08:	40 e8       	ldi	r20, 0x80	; 128
    3d0a:	5f e3       	ldi	r21, 0x3F	; 63
    3d0c:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    3d10:	88 23       	and	r24, r24
    3d12:	2c f4       	brge	.+10     	; 0x3d1e <LCD_init+0x5a6>
		__ticks = 1;
    3d14:	81 e0       	ldi	r24, 0x01	; 1
    3d16:	90 e0       	ldi	r25, 0x00	; 0
    3d18:	9d 8b       	std	Y+21, r25	; 0x15
    3d1a:	8c 8b       	std	Y+20, r24	; 0x14
    3d1c:	3f c0       	rjmp	.+126    	; 0x3d9c <LCD_init+0x624>
	else if (__tmp > 65535)
    3d1e:	6e 89       	ldd	r22, Y+22	; 0x16
    3d20:	7f 89       	ldd	r23, Y+23	; 0x17
    3d22:	88 8d       	ldd	r24, Y+24	; 0x18
    3d24:	99 8d       	ldd	r25, Y+25	; 0x19
    3d26:	20 e0       	ldi	r18, 0x00	; 0
    3d28:	3f ef       	ldi	r19, 0xFF	; 255
    3d2a:	4f e7       	ldi	r20, 0x7F	; 127
    3d2c:	57 e4       	ldi	r21, 0x47	; 71
    3d2e:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    3d32:	18 16       	cp	r1, r24
    3d34:	4c f5       	brge	.+82     	; 0x3d88 <LCD_init+0x610>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d36:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3d38:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3d3a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3d3c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3d3e:	20 e0       	ldi	r18, 0x00	; 0
    3d40:	30 e0       	ldi	r19, 0x00	; 0
    3d42:	40 e2       	ldi	r20, 0x20	; 32
    3d44:	51 e4       	ldi	r21, 0x41	; 65
    3d46:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3d4a:	dc 01       	movw	r26, r24
    3d4c:	cb 01       	movw	r24, r22
    3d4e:	bc 01       	movw	r22, r24
    3d50:	cd 01       	movw	r24, r26
    3d52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d56:	dc 01       	movw	r26, r24
    3d58:	cb 01       	movw	r24, r22
    3d5a:	9d 8b       	std	Y+21, r25	; 0x15
    3d5c:	8c 8b       	std	Y+20, r24	; 0x14
    3d5e:	0f c0       	rjmp	.+30     	; 0x3d7e <LCD_init+0x606>
    3d60:	80 e9       	ldi	r24, 0x90	; 144
    3d62:	91 e0       	ldi	r25, 0x01	; 1
    3d64:	9b 8b       	std	Y+19, r25	; 0x13
    3d66:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3d68:	8a 89       	ldd	r24, Y+18	; 0x12
    3d6a:	9b 89       	ldd	r25, Y+19	; 0x13
    3d6c:	01 97       	sbiw	r24, 0x01	; 1
    3d6e:	f1 f7       	brne	.-4      	; 0x3d6c <LCD_init+0x5f4>
    3d70:	9b 8b       	std	Y+19, r25	; 0x13
    3d72:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d74:	8c 89       	ldd	r24, Y+20	; 0x14
    3d76:	9d 89       	ldd	r25, Y+21	; 0x15
    3d78:	01 97       	sbiw	r24, 0x01	; 1
    3d7a:	9d 8b       	std	Y+21, r25	; 0x15
    3d7c:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d7e:	8c 89       	ldd	r24, Y+20	; 0x14
    3d80:	9d 89       	ldd	r25, Y+21	; 0x15
    3d82:	00 97       	sbiw	r24, 0x00	; 0
    3d84:	69 f7       	brne	.-38     	; 0x3d60 <LCD_init+0x5e8>
    3d86:	24 c0       	rjmp	.+72     	; 0x3dd0 <LCD_init+0x658>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d88:	6e 89       	ldd	r22, Y+22	; 0x16
    3d8a:	7f 89       	ldd	r23, Y+23	; 0x17
    3d8c:	88 8d       	ldd	r24, Y+24	; 0x18
    3d8e:	99 8d       	ldd	r25, Y+25	; 0x19
    3d90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d94:	dc 01       	movw	r26, r24
    3d96:	cb 01       	movw	r24, r22
    3d98:	9d 8b       	std	Y+21, r25	; 0x15
    3d9a:	8c 8b       	std	Y+20, r24	; 0x14
    3d9c:	8c 89       	ldd	r24, Y+20	; 0x14
    3d9e:	9d 89       	ldd	r25, Y+21	; 0x15
    3da0:	99 8b       	std	Y+17, r25	; 0x11
    3da2:	88 8b       	std	Y+16, r24	; 0x10
    3da4:	88 89       	ldd	r24, Y+16	; 0x10
    3da6:	99 89       	ldd	r25, Y+17	; 0x11
    3da8:	01 97       	sbiw	r24, 0x01	; 1
    3daa:	f1 f7       	brne	.-4      	; 0x3da8 <LCD_init+0x630>
    3dac:	99 8b       	std	Y+17, r25	; 0x11
    3dae:	88 8b       	std	Y+16, r24	; 0x10
    3db0:	0f c0       	rjmp	.+30     	; 0x3dd0 <LCD_init+0x658>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3db2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3db4:	78 a1       	ldd	r23, Y+32	; 0x20
    3db6:	89 a1       	ldd	r24, Y+33	; 0x21
    3db8:	9a a1       	ldd	r25, Y+34	; 0x22
    3dba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3dbe:	dc 01       	movw	r26, r24
    3dc0:	cb 01       	movw	r24, r22
    3dc2:	8e 8f       	std	Y+30, r24	; 0x1e
    3dc4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3dc6:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3dc8:	8f 85       	ldd	r24, Y+15	; 0x0f
    3dca:	8a 95       	dec	r24
    3dcc:	f1 f7       	brne	.-4      	; 0x3dca <LCD_init+0x652>
    3dce:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(45);

	// Clear Display
	LCD_sendCmnd(0b00000001);
    3dd0:	81 e0       	ldi	r24, 0x01	; 1
    3dd2:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <LCD_sendCmnd>
    3dd6:	80 e0       	ldi	r24, 0x00	; 0
    3dd8:	90 e0       	ldi	r25, 0x00	; 0
    3dda:	a0 e0       	ldi	r26, 0x00	; 0
    3ddc:	b0 e4       	ldi	r27, 0x40	; 64
    3dde:	8b 87       	std	Y+11, r24	; 0x0b
    3de0:	9c 87       	std	Y+12, r25	; 0x0c
    3de2:	ad 87       	std	Y+13, r26	; 0x0d
    3de4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3de6:	6b 85       	ldd	r22, Y+11	; 0x0b
    3de8:	7c 85       	ldd	r23, Y+12	; 0x0c
    3dea:	8d 85       	ldd	r24, Y+13	; 0x0d
    3dec:	9e 85       	ldd	r25, Y+14	; 0x0e
    3dee:	20 e0       	ldi	r18, 0x00	; 0
    3df0:	30 e0       	ldi	r19, 0x00	; 0
    3df2:	4a e7       	ldi	r20, 0x7A	; 122
    3df4:	55 e4       	ldi	r21, 0x45	; 69
    3df6:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3dfa:	dc 01       	movw	r26, r24
    3dfc:	cb 01       	movw	r24, r22
    3dfe:	8f 83       	std	Y+7, r24	; 0x07
    3e00:	98 87       	std	Y+8, r25	; 0x08
    3e02:	a9 87       	std	Y+9, r26	; 0x09
    3e04:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3e06:	6f 81       	ldd	r22, Y+7	; 0x07
    3e08:	78 85       	ldd	r23, Y+8	; 0x08
    3e0a:	89 85       	ldd	r24, Y+9	; 0x09
    3e0c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e0e:	20 e0       	ldi	r18, 0x00	; 0
    3e10:	30 e0       	ldi	r19, 0x00	; 0
    3e12:	40 e8       	ldi	r20, 0x80	; 128
    3e14:	5f e3       	ldi	r21, 0x3F	; 63
    3e16:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    3e1a:	88 23       	and	r24, r24
    3e1c:	2c f4       	brge	.+10     	; 0x3e28 <LCD_init+0x6b0>
		__ticks = 1;
    3e1e:	81 e0       	ldi	r24, 0x01	; 1
    3e20:	90 e0       	ldi	r25, 0x00	; 0
    3e22:	9e 83       	std	Y+6, r25	; 0x06
    3e24:	8d 83       	std	Y+5, r24	; 0x05
    3e26:	3f c0       	rjmp	.+126    	; 0x3ea6 <LCD_init+0x72e>
	else if (__tmp > 65535)
    3e28:	6f 81       	ldd	r22, Y+7	; 0x07
    3e2a:	78 85       	ldd	r23, Y+8	; 0x08
    3e2c:	89 85       	ldd	r24, Y+9	; 0x09
    3e2e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e30:	20 e0       	ldi	r18, 0x00	; 0
    3e32:	3f ef       	ldi	r19, 0xFF	; 255
    3e34:	4f e7       	ldi	r20, 0x7F	; 127
    3e36:	57 e4       	ldi	r21, 0x47	; 71
    3e38:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    3e3c:	18 16       	cp	r1, r24
    3e3e:	4c f5       	brge	.+82     	; 0x3e92 <LCD_init+0x71a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e40:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e42:	7c 85       	ldd	r23, Y+12	; 0x0c
    3e44:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e46:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e48:	20 e0       	ldi	r18, 0x00	; 0
    3e4a:	30 e0       	ldi	r19, 0x00	; 0
    3e4c:	40 e2       	ldi	r20, 0x20	; 32
    3e4e:	51 e4       	ldi	r21, 0x41	; 65
    3e50:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3e54:	dc 01       	movw	r26, r24
    3e56:	cb 01       	movw	r24, r22
    3e58:	bc 01       	movw	r22, r24
    3e5a:	cd 01       	movw	r24, r26
    3e5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e60:	dc 01       	movw	r26, r24
    3e62:	cb 01       	movw	r24, r22
    3e64:	9e 83       	std	Y+6, r25	; 0x06
    3e66:	8d 83       	std	Y+5, r24	; 0x05
    3e68:	0f c0       	rjmp	.+30     	; 0x3e88 <LCD_init+0x710>
    3e6a:	80 e9       	ldi	r24, 0x90	; 144
    3e6c:	91 e0       	ldi	r25, 0x01	; 1
    3e6e:	9c 83       	std	Y+4, r25	; 0x04
    3e70:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3e72:	8b 81       	ldd	r24, Y+3	; 0x03
    3e74:	9c 81       	ldd	r25, Y+4	; 0x04
    3e76:	01 97       	sbiw	r24, 0x01	; 1
    3e78:	f1 f7       	brne	.-4      	; 0x3e76 <LCD_init+0x6fe>
    3e7a:	9c 83       	std	Y+4, r25	; 0x04
    3e7c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e7e:	8d 81       	ldd	r24, Y+5	; 0x05
    3e80:	9e 81       	ldd	r25, Y+6	; 0x06
    3e82:	01 97       	sbiw	r24, 0x01	; 1
    3e84:	9e 83       	std	Y+6, r25	; 0x06
    3e86:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e88:	8d 81       	ldd	r24, Y+5	; 0x05
    3e8a:	9e 81       	ldd	r25, Y+6	; 0x06
    3e8c:	00 97       	sbiw	r24, 0x00	; 0
    3e8e:	69 f7       	brne	.-38     	; 0x3e6a <LCD_init+0x6f2>
    3e90:	14 c0       	rjmp	.+40     	; 0x3eba <LCD_init+0x742>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e92:	6f 81       	ldd	r22, Y+7	; 0x07
    3e94:	78 85       	ldd	r23, Y+8	; 0x08
    3e96:	89 85       	ldd	r24, Y+9	; 0x09
    3e98:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e9e:	dc 01       	movw	r26, r24
    3ea0:	cb 01       	movw	r24, r22
    3ea2:	9e 83       	std	Y+6, r25	; 0x06
    3ea4:	8d 83       	std	Y+5, r24	; 0x05
    3ea6:	8d 81       	ldd	r24, Y+5	; 0x05
    3ea8:	9e 81       	ldd	r25, Y+6	; 0x06
    3eaa:	9a 83       	std	Y+2, r25	; 0x02
    3eac:	89 83       	std	Y+1, r24	; 0x01
    3eae:	89 81       	ldd	r24, Y+1	; 0x01
    3eb0:	9a 81       	ldd	r25, Y+2	; 0x02
    3eb2:	01 97       	sbiw	r24, 0x01	; 1
    3eb4:	f1 f7       	brne	.-4      	; 0x3eb2 <LCD_init+0x73a>
    3eb6:	9a 83       	std	Y+2, r25	; 0x02
    3eb8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

	LCD_sendCmnd(0b00000110);
    3eba:	86 e0       	ldi	r24, 0x06	; 6
    3ebc:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <LCD_sendCmnd>
}
    3ec0:	c6 5a       	subi	r28, 0xA6	; 166
    3ec2:	df 4f       	sbci	r29, 0xFF	; 255
    3ec4:	0f b6       	in	r0, 0x3f	; 63
    3ec6:	f8 94       	cli
    3ec8:	de bf       	out	0x3e, r29	; 62
    3eca:	0f be       	out	0x3f, r0	; 63
    3ecc:	cd bf       	out	0x3d, r28	; 61
    3ece:	cf 91       	pop	r28
    3ed0:	df 91       	pop	r29
    3ed2:	1f 91       	pop	r17
    3ed4:	0f 91       	pop	r16
    3ed6:	08 95       	ret

00003ed8 <LCD_sendCmnd>:

void LCD_sendCmnd(u8 Cmnd)
{
    3ed8:	df 93       	push	r29
    3eda:	cf 93       	push	r28
    3edc:	cd b7       	in	r28, 0x3d	; 61
    3ede:	de b7       	in	r29, 0x3e	; 62
    3ee0:	6d 97       	sbiw	r28, 0x1d	; 29
    3ee2:	0f b6       	in	r0, 0x3f	; 63
    3ee4:	f8 94       	cli
    3ee6:	de bf       	out	0x3e, r29	; 62
    3ee8:	0f be       	out	0x3f, r0	; 63
    3eea:	cd bf       	out	0x3d, r28	; 61
    3eec:	8d 8f       	std	Y+29, r24	; 0x1d
	// set Rs pin = 0 (write command)
	DIO_setPinValue(LCD_RS_PORT, LCD_RS_PIN, DIO_PIN_LOW);
    3eee:	81 e0       	ldi	r24, 0x01	; 1
    3ef0:	61 e0       	ldi	r22, 0x01	; 1
    3ef2:	40 e0       	ldi	r20, 0x00	; 0
    3ef4:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>

	// set Rw pin = 0 (write)
	DIO_setPinValue(LCD_RW_PORT, LCD_RW_PIN, DIO_PIN_LOW);
    3ef8:	81 e0       	ldi	r24, 0x01	; 1
    3efa:	62 e0       	ldi	r22, 0x02	; 2
    3efc:	40 e0       	ldi	r20, 0x00	; 0
    3efe:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>

	// Write The Most 4 bits Of command on Data Pins
	private_writeHalfPort(Cmnd>>4);
    3f02:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3f04:	82 95       	swap	r24
    3f06:	8f 70       	andi	r24, 0x0F	; 15
    3f08:	0e 94 59 22 	call	0x44b2	; 0x44b2 <private_writeHalfPort>

	/* Enable Pulse *//* H => L */
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_HIGH);
    3f0c:	81 e0       	ldi	r24, 0x01	; 1
    3f0e:	63 e0       	ldi	r22, 0x03	; 3
    3f10:	41 e0       	ldi	r20, 0x01	; 1
    3f12:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    3f16:	80 e0       	ldi	r24, 0x00	; 0
    3f18:	90 e0       	ldi	r25, 0x00	; 0
    3f1a:	a0 e8       	ldi	r26, 0x80	; 128
    3f1c:	bf e3       	ldi	r27, 0x3F	; 63
    3f1e:	89 8f       	std	Y+25, r24	; 0x19
    3f20:	9a 8f       	std	Y+26, r25	; 0x1a
    3f22:	ab 8f       	std	Y+27, r26	; 0x1b
    3f24:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f26:	69 8d       	ldd	r22, Y+25	; 0x19
    3f28:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f2a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f2c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f2e:	20 e0       	ldi	r18, 0x00	; 0
    3f30:	30 e0       	ldi	r19, 0x00	; 0
    3f32:	4a e7       	ldi	r20, 0x7A	; 122
    3f34:	55 e4       	ldi	r21, 0x45	; 69
    3f36:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3f3a:	dc 01       	movw	r26, r24
    3f3c:	cb 01       	movw	r24, r22
    3f3e:	8d 8b       	std	Y+21, r24	; 0x15
    3f40:	9e 8b       	std	Y+22, r25	; 0x16
    3f42:	af 8b       	std	Y+23, r26	; 0x17
    3f44:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3f46:	6d 89       	ldd	r22, Y+21	; 0x15
    3f48:	7e 89       	ldd	r23, Y+22	; 0x16
    3f4a:	8f 89       	ldd	r24, Y+23	; 0x17
    3f4c:	98 8d       	ldd	r25, Y+24	; 0x18
    3f4e:	20 e0       	ldi	r18, 0x00	; 0
    3f50:	30 e0       	ldi	r19, 0x00	; 0
    3f52:	40 e8       	ldi	r20, 0x80	; 128
    3f54:	5f e3       	ldi	r21, 0x3F	; 63
    3f56:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    3f5a:	88 23       	and	r24, r24
    3f5c:	2c f4       	brge	.+10     	; 0x3f68 <LCD_sendCmnd+0x90>
		__ticks = 1;
    3f5e:	81 e0       	ldi	r24, 0x01	; 1
    3f60:	90 e0       	ldi	r25, 0x00	; 0
    3f62:	9c 8b       	std	Y+20, r25	; 0x14
    3f64:	8b 8b       	std	Y+19, r24	; 0x13
    3f66:	3f c0       	rjmp	.+126    	; 0x3fe6 <LCD_sendCmnd+0x10e>
	else if (__tmp > 65535)
    3f68:	6d 89       	ldd	r22, Y+21	; 0x15
    3f6a:	7e 89       	ldd	r23, Y+22	; 0x16
    3f6c:	8f 89       	ldd	r24, Y+23	; 0x17
    3f6e:	98 8d       	ldd	r25, Y+24	; 0x18
    3f70:	20 e0       	ldi	r18, 0x00	; 0
    3f72:	3f ef       	ldi	r19, 0xFF	; 255
    3f74:	4f e7       	ldi	r20, 0x7F	; 127
    3f76:	57 e4       	ldi	r21, 0x47	; 71
    3f78:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    3f7c:	18 16       	cp	r1, r24
    3f7e:	4c f5       	brge	.+82     	; 0x3fd2 <LCD_sendCmnd+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f80:	69 8d       	ldd	r22, Y+25	; 0x19
    3f82:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f84:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f86:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f88:	20 e0       	ldi	r18, 0x00	; 0
    3f8a:	30 e0       	ldi	r19, 0x00	; 0
    3f8c:	40 e2       	ldi	r20, 0x20	; 32
    3f8e:	51 e4       	ldi	r21, 0x41	; 65
    3f90:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    3f94:	dc 01       	movw	r26, r24
    3f96:	cb 01       	movw	r24, r22
    3f98:	bc 01       	movw	r22, r24
    3f9a:	cd 01       	movw	r24, r26
    3f9c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fa0:	dc 01       	movw	r26, r24
    3fa2:	cb 01       	movw	r24, r22
    3fa4:	9c 8b       	std	Y+20, r25	; 0x14
    3fa6:	8b 8b       	std	Y+19, r24	; 0x13
    3fa8:	0f c0       	rjmp	.+30     	; 0x3fc8 <LCD_sendCmnd+0xf0>
    3faa:	80 e9       	ldi	r24, 0x90	; 144
    3fac:	91 e0       	ldi	r25, 0x01	; 1
    3fae:	9a 8b       	std	Y+18, r25	; 0x12
    3fb0:	89 8b       	std	Y+17, r24	; 0x11
    3fb2:	89 89       	ldd	r24, Y+17	; 0x11
    3fb4:	9a 89       	ldd	r25, Y+18	; 0x12
    3fb6:	01 97       	sbiw	r24, 0x01	; 1
    3fb8:	f1 f7       	brne	.-4      	; 0x3fb6 <LCD_sendCmnd+0xde>
    3fba:	9a 8b       	std	Y+18, r25	; 0x12
    3fbc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fbe:	8b 89       	ldd	r24, Y+19	; 0x13
    3fc0:	9c 89       	ldd	r25, Y+20	; 0x14
    3fc2:	01 97       	sbiw	r24, 0x01	; 1
    3fc4:	9c 8b       	std	Y+20, r25	; 0x14
    3fc6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fc8:	8b 89       	ldd	r24, Y+19	; 0x13
    3fca:	9c 89       	ldd	r25, Y+20	; 0x14
    3fcc:	00 97       	sbiw	r24, 0x00	; 0
    3fce:	69 f7       	brne	.-38     	; 0x3faa <LCD_sendCmnd+0xd2>
    3fd0:	14 c0       	rjmp	.+40     	; 0x3ffa <LCD_sendCmnd+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fd2:	6d 89       	ldd	r22, Y+21	; 0x15
    3fd4:	7e 89       	ldd	r23, Y+22	; 0x16
    3fd6:	8f 89       	ldd	r24, Y+23	; 0x17
    3fd8:	98 8d       	ldd	r25, Y+24	; 0x18
    3fda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fde:	dc 01       	movw	r26, r24
    3fe0:	cb 01       	movw	r24, r22
    3fe2:	9c 8b       	std	Y+20, r25	; 0x14
    3fe4:	8b 8b       	std	Y+19, r24	; 0x13
    3fe6:	8b 89       	ldd	r24, Y+19	; 0x13
    3fe8:	9c 89       	ldd	r25, Y+20	; 0x14
    3fea:	98 8b       	std	Y+16, r25	; 0x10
    3fec:	8f 87       	std	Y+15, r24	; 0x0f
    3fee:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ff0:	98 89       	ldd	r25, Y+16	; 0x10
    3ff2:	01 97       	sbiw	r24, 0x01	; 1
    3ff4:	f1 f7       	brne	.-4      	; 0x3ff2 <LCD_sendCmnd+0x11a>
    3ff6:	98 8b       	std	Y+16, r25	; 0x10
    3ff8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_LOW);
    3ffa:	81 e0       	ldi	r24, 0x01	; 1
    3ffc:	63 e0       	ldi	r22, 0x03	; 3
    3ffe:	40 e0       	ldi	r20, 0x00	; 0
    4000:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>

	// Write The Least 4 bits Of command on Data Pins
	private_writeHalfPort(Cmnd);
    4004:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4006:	0e 94 59 22 	call	0x44b2	; 0x44b2 <private_writeHalfPort>

	/* Enable Pulse *//* H => L */
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_HIGH);
    400a:	81 e0       	ldi	r24, 0x01	; 1
    400c:	63 e0       	ldi	r22, 0x03	; 3
    400e:	41 e0       	ldi	r20, 0x01	; 1
    4010:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    4014:	80 e0       	ldi	r24, 0x00	; 0
    4016:	90 e0       	ldi	r25, 0x00	; 0
    4018:	a0 e8       	ldi	r26, 0x80	; 128
    401a:	bf e3       	ldi	r27, 0x3F	; 63
    401c:	8b 87       	std	Y+11, r24	; 0x0b
    401e:	9c 87       	std	Y+12, r25	; 0x0c
    4020:	ad 87       	std	Y+13, r26	; 0x0d
    4022:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4024:	6b 85       	ldd	r22, Y+11	; 0x0b
    4026:	7c 85       	ldd	r23, Y+12	; 0x0c
    4028:	8d 85       	ldd	r24, Y+13	; 0x0d
    402a:	9e 85       	ldd	r25, Y+14	; 0x0e
    402c:	20 e0       	ldi	r18, 0x00	; 0
    402e:	30 e0       	ldi	r19, 0x00	; 0
    4030:	4a e7       	ldi	r20, 0x7A	; 122
    4032:	55 e4       	ldi	r21, 0x45	; 69
    4034:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    4038:	dc 01       	movw	r26, r24
    403a:	cb 01       	movw	r24, r22
    403c:	8f 83       	std	Y+7, r24	; 0x07
    403e:	98 87       	std	Y+8, r25	; 0x08
    4040:	a9 87       	std	Y+9, r26	; 0x09
    4042:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4044:	6f 81       	ldd	r22, Y+7	; 0x07
    4046:	78 85       	ldd	r23, Y+8	; 0x08
    4048:	89 85       	ldd	r24, Y+9	; 0x09
    404a:	9a 85       	ldd	r25, Y+10	; 0x0a
    404c:	20 e0       	ldi	r18, 0x00	; 0
    404e:	30 e0       	ldi	r19, 0x00	; 0
    4050:	40 e8       	ldi	r20, 0x80	; 128
    4052:	5f e3       	ldi	r21, 0x3F	; 63
    4054:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    4058:	88 23       	and	r24, r24
    405a:	2c f4       	brge	.+10     	; 0x4066 <LCD_sendCmnd+0x18e>
		__ticks = 1;
    405c:	81 e0       	ldi	r24, 0x01	; 1
    405e:	90 e0       	ldi	r25, 0x00	; 0
    4060:	9e 83       	std	Y+6, r25	; 0x06
    4062:	8d 83       	std	Y+5, r24	; 0x05
    4064:	3f c0       	rjmp	.+126    	; 0x40e4 <LCD_sendCmnd+0x20c>
	else if (__tmp > 65535)
    4066:	6f 81       	ldd	r22, Y+7	; 0x07
    4068:	78 85       	ldd	r23, Y+8	; 0x08
    406a:	89 85       	ldd	r24, Y+9	; 0x09
    406c:	9a 85       	ldd	r25, Y+10	; 0x0a
    406e:	20 e0       	ldi	r18, 0x00	; 0
    4070:	3f ef       	ldi	r19, 0xFF	; 255
    4072:	4f e7       	ldi	r20, 0x7F	; 127
    4074:	57 e4       	ldi	r21, 0x47	; 71
    4076:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    407a:	18 16       	cp	r1, r24
    407c:	4c f5       	brge	.+82     	; 0x40d0 <LCD_sendCmnd+0x1f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    407e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4080:	7c 85       	ldd	r23, Y+12	; 0x0c
    4082:	8d 85       	ldd	r24, Y+13	; 0x0d
    4084:	9e 85       	ldd	r25, Y+14	; 0x0e
    4086:	20 e0       	ldi	r18, 0x00	; 0
    4088:	30 e0       	ldi	r19, 0x00	; 0
    408a:	40 e2       	ldi	r20, 0x20	; 32
    408c:	51 e4       	ldi	r21, 0x41	; 65
    408e:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    4092:	dc 01       	movw	r26, r24
    4094:	cb 01       	movw	r24, r22
    4096:	bc 01       	movw	r22, r24
    4098:	cd 01       	movw	r24, r26
    409a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    409e:	dc 01       	movw	r26, r24
    40a0:	cb 01       	movw	r24, r22
    40a2:	9e 83       	std	Y+6, r25	; 0x06
    40a4:	8d 83       	std	Y+5, r24	; 0x05
    40a6:	0f c0       	rjmp	.+30     	; 0x40c6 <LCD_sendCmnd+0x1ee>
    40a8:	80 e9       	ldi	r24, 0x90	; 144
    40aa:	91 e0       	ldi	r25, 0x01	; 1
    40ac:	9c 83       	std	Y+4, r25	; 0x04
    40ae:	8b 83       	std	Y+3, r24	; 0x03
    40b0:	8b 81       	ldd	r24, Y+3	; 0x03
    40b2:	9c 81       	ldd	r25, Y+4	; 0x04
    40b4:	01 97       	sbiw	r24, 0x01	; 1
    40b6:	f1 f7       	brne	.-4      	; 0x40b4 <LCD_sendCmnd+0x1dc>
    40b8:	9c 83       	std	Y+4, r25	; 0x04
    40ba:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40bc:	8d 81       	ldd	r24, Y+5	; 0x05
    40be:	9e 81       	ldd	r25, Y+6	; 0x06
    40c0:	01 97       	sbiw	r24, 0x01	; 1
    40c2:	9e 83       	std	Y+6, r25	; 0x06
    40c4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40c6:	8d 81       	ldd	r24, Y+5	; 0x05
    40c8:	9e 81       	ldd	r25, Y+6	; 0x06
    40ca:	00 97       	sbiw	r24, 0x00	; 0
    40cc:	69 f7       	brne	.-38     	; 0x40a8 <LCD_sendCmnd+0x1d0>
    40ce:	14 c0       	rjmp	.+40     	; 0x40f8 <LCD_sendCmnd+0x220>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40d0:	6f 81       	ldd	r22, Y+7	; 0x07
    40d2:	78 85       	ldd	r23, Y+8	; 0x08
    40d4:	89 85       	ldd	r24, Y+9	; 0x09
    40d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    40d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40dc:	dc 01       	movw	r26, r24
    40de:	cb 01       	movw	r24, r22
    40e0:	9e 83       	std	Y+6, r25	; 0x06
    40e2:	8d 83       	std	Y+5, r24	; 0x05
    40e4:	8d 81       	ldd	r24, Y+5	; 0x05
    40e6:	9e 81       	ldd	r25, Y+6	; 0x06
    40e8:	9a 83       	std	Y+2, r25	; 0x02
    40ea:	89 83       	std	Y+1, r24	; 0x01
    40ec:	89 81       	ldd	r24, Y+1	; 0x01
    40ee:	9a 81       	ldd	r25, Y+2	; 0x02
    40f0:	01 97       	sbiw	r24, 0x01	; 1
    40f2:	f1 f7       	brne	.-4      	; 0x40f0 <LCD_sendCmnd+0x218>
    40f4:	9a 83       	std	Y+2, r25	; 0x02
    40f6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_LOW);
    40f8:	81 e0       	ldi	r24, 0x01	; 1
    40fa:	63 e0       	ldi	r22, 0x03	; 3
    40fc:	40 e0       	ldi	r20, 0x00	; 0
    40fe:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
}
    4102:	6d 96       	adiw	r28, 0x1d	; 29
    4104:	0f b6       	in	r0, 0x3f	; 63
    4106:	f8 94       	cli
    4108:	de bf       	out	0x3e, r29	; 62
    410a:	0f be       	out	0x3f, r0	; 63
    410c:	cd bf       	out	0x3d, r28	; 61
    410e:	cf 91       	pop	r28
    4110:	df 91       	pop	r29
    4112:	08 95       	ret

00004114 <LCD_sendChar>:


void LCD_sendChar(u8 data)
{
    4114:	df 93       	push	r29
    4116:	cf 93       	push	r28
    4118:	cd b7       	in	r28, 0x3d	; 61
    411a:	de b7       	in	r29, 0x3e	; 62
    411c:	6d 97       	sbiw	r28, 0x1d	; 29
    411e:	0f b6       	in	r0, 0x3f	; 63
    4120:	f8 94       	cli
    4122:	de bf       	out	0x3e, r29	; 62
    4124:	0f be       	out	0x3f, r0	; 63
    4126:	cd bf       	out	0x3d, r28	; 61
    4128:	8d 8f       	std	Y+29, r24	; 0x1d
	// set Rs pin = 1 (write data)
	DIO_setPinValue(LCD_RS_PORT, LCD_RS_PIN, DIO_PIN_HIGH);
    412a:	81 e0       	ldi	r24, 0x01	; 1
    412c:	61 e0       	ldi	r22, 0x01	; 1
    412e:	41 e0       	ldi	r20, 0x01	; 1
    4130:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>

	// set Rw pin = 0 (write)
	DIO_setPinValue(LCD_RW_PORT, LCD_RW_PIN, DIO_PIN_LOW);
    4134:	81 e0       	ldi	r24, 0x01	; 1
    4136:	62 e0       	ldi	r22, 0x02	; 2
    4138:	40 e0       	ldi	r20, 0x00	; 0
    413a:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>

	// Write The Most 4 bits Of data on Data Pins
	private_writeHalfPort(data>>4);
    413e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4140:	82 95       	swap	r24
    4142:	8f 70       	andi	r24, 0x0F	; 15
    4144:	0e 94 59 22 	call	0x44b2	; 0x44b2 <private_writeHalfPort>

	/* Enable Pulse *//* H => L */
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_HIGH);
    4148:	81 e0       	ldi	r24, 0x01	; 1
    414a:	63 e0       	ldi	r22, 0x03	; 3
    414c:	41 e0       	ldi	r20, 0x01	; 1
    414e:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    4152:	80 e0       	ldi	r24, 0x00	; 0
    4154:	90 e0       	ldi	r25, 0x00	; 0
    4156:	a0 e8       	ldi	r26, 0x80	; 128
    4158:	bf e3       	ldi	r27, 0x3F	; 63
    415a:	89 8f       	std	Y+25, r24	; 0x19
    415c:	9a 8f       	std	Y+26, r25	; 0x1a
    415e:	ab 8f       	std	Y+27, r26	; 0x1b
    4160:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4162:	69 8d       	ldd	r22, Y+25	; 0x19
    4164:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4166:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4168:	9c 8d       	ldd	r25, Y+28	; 0x1c
    416a:	20 e0       	ldi	r18, 0x00	; 0
    416c:	30 e0       	ldi	r19, 0x00	; 0
    416e:	4a e7       	ldi	r20, 0x7A	; 122
    4170:	55 e4       	ldi	r21, 0x45	; 69
    4172:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    4176:	dc 01       	movw	r26, r24
    4178:	cb 01       	movw	r24, r22
    417a:	8d 8b       	std	Y+21, r24	; 0x15
    417c:	9e 8b       	std	Y+22, r25	; 0x16
    417e:	af 8b       	std	Y+23, r26	; 0x17
    4180:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4182:	6d 89       	ldd	r22, Y+21	; 0x15
    4184:	7e 89       	ldd	r23, Y+22	; 0x16
    4186:	8f 89       	ldd	r24, Y+23	; 0x17
    4188:	98 8d       	ldd	r25, Y+24	; 0x18
    418a:	20 e0       	ldi	r18, 0x00	; 0
    418c:	30 e0       	ldi	r19, 0x00	; 0
    418e:	40 e8       	ldi	r20, 0x80	; 128
    4190:	5f e3       	ldi	r21, 0x3F	; 63
    4192:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    4196:	88 23       	and	r24, r24
    4198:	2c f4       	brge	.+10     	; 0x41a4 <LCD_sendChar+0x90>
		__ticks = 1;
    419a:	81 e0       	ldi	r24, 0x01	; 1
    419c:	90 e0       	ldi	r25, 0x00	; 0
    419e:	9c 8b       	std	Y+20, r25	; 0x14
    41a0:	8b 8b       	std	Y+19, r24	; 0x13
    41a2:	3f c0       	rjmp	.+126    	; 0x4222 <LCD_sendChar+0x10e>
	else if (__tmp > 65535)
    41a4:	6d 89       	ldd	r22, Y+21	; 0x15
    41a6:	7e 89       	ldd	r23, Y+22	; 0x16
    41a8:	8f 89       	ldd	r24, Y+23	; 0x17
    41aa:	98 8d       	ldd	r25, Y+24	; 0x18
    41ac:	20 e0       	ldi	r18, 0x00	; 0
    41ae:	3f ef       	ldi	r19, 0xFF	; 255
    41b0:	4f e7       	ldi	r20, 0x7F	; 127
    41b2:	57 e4       	ldi	r21, 0x47	; 71
    41b4:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    41b8:	18 16       	cp	r1, r24
    41ba:	4c f5       	brge	.+82     	; 0x420e <LCD_sendChar+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41bc:	69 8d       	ldd	r22, Y+25	; 0x19
    41be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    41c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    41c4:	20 e0       	ldi	r18, 0x00	; 0
    41c6:	30 e0       	ldi	r19, 0x00	; 0
    41c8:	40 e2       	ldi	r20, 0x20	; 32
    41ca:	51 e4       	ldi	r21, 0x41	; 65
    41cc:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    41d0:	dc 01       	movw	r26, r24
    41d2:	cb 01       	movw	r24, r22
    41d4:	bc 01       	movw	r22, r24
    41d6:	cd 01       	movw	r24, r26
    41d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    41dc:	dc 01       	movw	r26, r24
    41de:	cb 01       	movw	r24, r22
    41e0:	9c 8b       	std	Y+20, r25	; 0x14
    41e2:	8b 8b       	std	Y+19, r24	; 0x13
    41e4:	0f c0       	rjmp	.+30     	; 0x4204 <LCD_sendChar+0xf0>
    41e6:	80 e9       	ldi	r24, 0x90	; 144
    41e8:	91 e0       	ldi	r25, 0x01	; 1
    41ea:	9a 8b       	std	Y+18, r25	; 0x12
    41ec:	89 8b       	std	Y+17, r24	; 0x11
    41ee:	89 89       	ldd	r24, Y+17	; 0x11
    41f0:	9a 89       	ldd	r25, Y+18	; 0x12
    41f2:	01 97       	sbiw	r24, 0x01	; 1
    41f4:	f1 f7       	brne	.-4      	; 0x41f2 <LCD_sendChar+0xde>
    41f6:	9a 8b       	std	Y+18, r25	; 0x12
    41f8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41fa:	8b 89       	ldd	r24, Y+19	; 0x13
    41fc:	9c 89       	ldd	r25, Y+20	; 0x14
    41fe:	01 97       	sbiw	r24, 0x01	; 1
    4200:	9c 8b       	std	Y+20, r25	; 0x14
    4202:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4204:	8b 89       	ldd	r24, Y+19	; 0x13
    4206:	9c 89       	ldd	r25, Y+20	; 0x14
    4208:	00 97       	sbiw	r24, 0x00	; 0
    420a:	69 f7       	brne	.-38     	; 0x41e6 <LCD_sendChar+0xd2>
    420c:	14 c0       	rjmp	.+40     	; 0x4236 <LCD_sendChar+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    420e:	6d 89       	ldd	r22, Y+21	; 0x15
    4210:	7e 89       	ldd	r23, Y+22	; 0x16
    4212:	8f 89       	ldd	r24, Y+23	; 0x17
    4214:	98 8d       	ldd	r25, Y+24	; 0x18
    4216:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    421a:	dc 01       	movw	r26, r24
    421c:	cb 01       	movw	r24, r22
    421e:	9c 8b       	std	Y+20, r25	; 0x14
    4220:	8b 8b       	std	Y+19, r24	; 0x13
    4222:	8b 89       	ldd	r24, Y+19	; 0x13
    4224:	9c 89       	ldd	r25, Y+20	; 0x14
    4226:	98 8b       	std	Y+16, r25	; 0x10
    4228:	8f 87       	std	Y+15, r24	; 0x0f
    422a:	8f 85       	ldd	r24, Y+15	; 0x0f
    422c:	98 89       	ldd	r25, Y+16	; 0x10
    422e:	01 97       	sbiw	r24, 0x01	; 1
    4230:	f1 f7       	brne	.-4      	; 0x422e <LCD_sendChar+0x11a>
    4232:	98 8b       	std	Y+16, r25	; 0x10
    4234:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_LOW);
    4236:	81 e0       	ldi	r24, 0x01	; 1
    4238:	63 e0       	ldi	r22, 0x03	; 3
    423a:	40 e0       	ldi	r20, 0x00	; 0
    423c:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>

	// Write The Least 4 bits Of data on Data Pins
	private_writeHalfPort(data);
    4240:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4242:	0e 94 59 22 	call	0x44b2	; 0x44b2 <private_writeHalfPort>

	/* Enable Pulse *//* H => L */
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_HIGH);
    4246:	81 e0       	ldi	r24, 0x01	; 1
    4248:	63 e0       	ldi	r22, 0x03	; 3
    424a:	41 e0       	ldi	r20, 0x01	; 1
    424c:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    4250:	80 e0       	ldi	r24, 0x00	; 0
    4252:	90 e0       	ldi	r25, 0x00	; 0
    4254:	a0 e8       	ldi	r26, 0x80	; 128
    4256:	bf e3       	ldi	r27, 0x3F	; 63
    4258:	8b 87       	std	Y+11, r24	; 0x0b
    425a:	9c 87       	std	Y+12, r25	; 0x0c
    425c:	ad 87       	std	Y+13, r26	; 0x0d
    425e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4260:	6b 85       	ldd	r22, Y+11	; 0x0b
    4262:	7c 85       	ldd	r23, Y+12	; 0x0c
    4264:	8d 85       	ldd	r24, Y+13	; 0x0d
    4266:	9e 85       	ldd	r25, Y+14	; 0x0e
    4268:	20 e0       	ldi	r18, 0x00	; 0
    426a:	30 e0       	ldi	r19, 0x00	; 0
    426c:	4a e7       	ldi	r20, 0x7A	; 122
    426e:	55 e4       	ldi	r21, 0x45	; 69
    4270:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    4274:	dc 01       	movw	r26, r24
    4276:	cb 01       	movw	r24, r22
    4278:	8f 83       	std	Y+7, r24	; 0x07
    427a:	98 87       	std	Y+8, r25	; 0x08
    427c:	a9 87       	std	Y+9, r26	; 0x09
    427e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4280:	6f 81       	ldd	r22, Y+7	; 0x07
    4282:	78 85       	ldd	r23, Y+8	; 0x08
    4284:	89 85       	ldd	r24, Y+9	; 0x09
    4286:	9a 85       	ldd	r25, Y+10	; 0x0a
    4288:	20 e0       	ldi	r18, 0x00	; 0
    428a:	30 e0       	ldi	r19, 0x00	; 0
    428c:	40 e8       	ldi	r20, 0x80	; 128
    428e:	5f e3       	ldi	r21, 0x3F	; 63
    4290:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    4294:	88 23       	and	r24, r24
    4296:	2c f4       	brge	.+10     	; 0x42a2 <LCD_sendChar+0x18e>
		__ticks = 1;
    4298:	81 e0       	ldi	r24, 0x01	; 1
    429a:	90 e0       	ldi	r25, 0x00	; 0
    429c:	9e 83       	std	Y+6, r25	; 0x06
    429e:	8d 83       	std	Y+5, r24	; 0x05
    42a0:	3f c0       	rjmp	.+126    	; 0x4320 <LCD_sendChar+0x20c>
	else if (__tmp > 65535)
    42a2:	6f 81       	ldd	r22, Y+7	; 0x07
    42a4:	78 85       	ldd	r23, Y+8	; 0x08
    42a6:	89 85       	ldd	r24, Y+9	; 0x09
    42a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    42aa:	20 e0       	ldi	r18, 0x00	; 0
    42ac:	3f ef       	ldi	r19, 0xFF	; 255
    42ae:	4f e7       	ldi	r20, 0x7F	; 127
    42b0:	57 e4       	ldi	r21, 0x47	; 71
    42b2:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    42b6:	18 16       	cp	r1, r24
    42b8:	4c f5       	brge	.+82     	; 0x430c <LCD_sendChar+0x1f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    42bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    42be:	8d 85       	ldd	r24, Y+13	; 0x0d
    42c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    42c2:	20 e0       	ldi	r18, 0x00	; 0
    42c4:	30 e0       	ldi	r19, 0x00	; 0
    42c6:	40 e2       	ldi	r20, 0x20	; 32
    42c8:	51 e4       	ldi	r21, 0x41	; 65
    42ca:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    42ce:	dc 01       	movw	r26, r24
    42d0:	cb 01       	movw	r24, r22
    42d2:	bc 01       	movw	r22, r24
    42d4:	cd 01       	movw	r24, r26
    42d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42da:	dc 01       	movw	r26, r24
    42dc:	cb 01       	movw	r24, r22
    42de:	9e 83       	std	Y+6, r25	; 0x06
    42e0:	8d 83       	std	Y+5, r24	; 0x05
    42e2:	0f c0       	rjmp	.+30     	; 0x4302 <LCD_sendChar+0x1ee>
    42e4:	80 e9       	ldi	r24, 0x90	; 144
    42e6:	91 e0       	ldi	r25, 0x01	; 1
    42e8:	9c 83       	std	Y+4, r25	; 0x04
    42ea:	8b 83       	std	Y+3, r24	; 0x03
    42ec:	8b 81       	ldd	r24, Y+3	; 0x03
    42ee:	9c 81       	ldd	r25, Y+4	; 0x04
    42f0:	01 97       	sbiw	r24, 0x01	; 1
    42f2:	f1 f7       	brne	.-4      	; 0x42f0 <LCD_sendChar+0x1dc>
    42f4:	9c 83       	std	Y+4, r25	; 0x04
    42f6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42f8:	8d 81       	ldd	r24, Y+5	; 0x05
    42fa:	9e 81       	ldd	r25, Y+6	; 0x06
    42fc:	01 97       	sbiw	r24, 0x01	; 1
    42fe:	9e 83       	std	Y+6, r25	; 0x06
    4300:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4302:	8d 81       	ldd	r24, Y+5	; 0x05
    4304:	9e 81       	ldd	r25, Y+6	; 0x06
    4306:	00 97       	sbiw	r24, 0x00	; 0
    4308:	69 f7       	brne	.-38     	; 0x42e4 <LCD_sendChar+0x1d0>
    430a:	14 c0       	rjmp	.+40     	; 0x4334 <LCD_sendChar+0x220>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    430c:	6f 81       	ldd	r22, Y+7	; 0x07
    430e:	78 85       	ldd	r23, Y+8	; 0x08
    4310:	89 85       	ldd	r24, Y+9	; 0x09
    4312:	9a 85       	ldd	r25, Y+10	; 0x0a
    4314:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4318:	dc 01       	movw	r26, r24
    431a:	cb 01       	movw	r24, r22
    431c:	9e 83       	std	Y+6, r25	; 0x06
    431e:	8d 83       	std	Y+5, r24	; 0x05
    4320:	8d 81       	ldd	r24, Y+5	; 0x05
    4322:	9e 81       	ldd	r25, Y+6	; 0x06
    4324:	9a 83       	std	Y+2, r25	; 0x02
    4326:	89 83       	std	Y+1, r24	; 0x01
    4328:	89 81       	ldd	r24, Y+1	; 0x01
    432a:	9a 81       	ldd	r25, Y+2	; 0x02
    432c:	01 97       	sbiw	r24, 0x01	; 1
    432e:	f1 f7       	brne	.-4      	; 0x432c <LCD_sendChar+0x218>
    4330:	9a 83       	std	Y+2, r25	; 0x02
    4332:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_setPinValue(LCD_EN_PORT, LCD_EN_PIN, DIO_PIN_LOW);
    4334:	81 e0       	ldi	r24, 0x01	; 1
    4336:	63 e0       	ldi	r22, 0x03	; 3
    4338:	40 e0       	ldi	r20, 0x00	; 0
    433a:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
}
    433e:	6d 96       	adiw	r28, 0x1d	; 29
    4340:	0f b6       	in	r0, 0x3f	; 63
    4342:	f8 94       	cli
    4344:	de bf       	out	0x3e, r29	; 62
    4346:	0f be       	out	0x3f, r0	; 63
    4348:	cd bf       	out	0x3d, r28	; 61
    434a:	cf 91       	pop	r28
    434c:	df 91       	pop	r29
    434e:	08 95       	ret

00004350 <LCD_writeString>:


void LCD_writeString(u8* String)
{
    4350:	df 93       	push	r29
    4352:	cf 93       	push	r28
    4354:	00 d0       	rcall	.+0      	; 0x4356 <LCD_writeString+0x6>
    4356:	0f 92       	push	r0
    4358:	cd b7       	in	r28, 0x3d	; 61
    435a:	de b7       	in	r29, 0x3e	; 62
    435c:	9b 83       	std	Y+3, r25	; 0x03
    435e:	8a 83       	std	Y+2, r24	; 0x02
	u8 counter=0;
    4360:	19 82       	std	Y+1, r1	; 0x01
    4362:	0e c0       	rjmp	.+28     	; 0x4380 <LCD_writeString+0x30>
	while(String[counter]!='\0')
	{
		LCD_sendChar(String[counter]);
    4364:	89 81       	ldd	r24, Y+1	; 0x01
    4366:	28 2f       	mov	r18, r24
    4368:	30 e0       	ldi	r19, 0x00	; 0
    436a:	8a 81       	ldd	r24, Y+2	; 0x02
    436c:	9b 81       	ldd	r25, Y+3	; 0x03
    436e:	fc 01       	movw	r30, r24
    4370:	e2 0f       	add	r30, r18
    4372:	f3 1f       	adc	r31, r19
    4374:	80 81       	ld	r24, Z
    4376:	0e 94 8a 20 	call	0x4114	; 0x4114 <LCD_sendChar>
		++counter;
    437a:	89 81       	ldd	r24, Y+1	; 0x01
    437c:	8f 5f       	subi	r24, 0xFF	; 255
    437e:	89 83       	std	Y+1, r24	; 0x01


void LCD_writeString(u8* String)
{
	u8 counter=0;
	while(String[counter]!='\0')
    4380:	89 81       	ldd	r24, Y+1	; 0x01
    4382:	28 2f       	mov	r18, r24
    4384:	30 e0       	ldi	r19, 0x00	; 0
    4386:	8a 81       	ldd	r24, Y+2	; 0x02
    4388:	9b 81       	ldd	r25, Y+3	; 0x03
    438a:	fc 01       	movw	r30, r24
    438c:	e2 0f       	add	r30, r18
    438e:	f3 1f       	adc	r31, r19
    4390:	80 81       	ld	r24, Z
    4392:	88 23       	and	r24, r24
    4394:	39 f7       	brne	.-50     	; 0x4364 <LCD_writeString+0x14>
	{
		LCD_sendChar(String[counter]);
		++counter;
	}
}
    4396:	0f 90       	pop	r0
    4398:	0f 90       	pop	r0
    439a:	0f 90       	pop	r0
    439c:	cf 91       	pop	r28
    439e:	df 91       	pop	r29
    43a0:	08 95       	ret

000043a2 <LCD_clear>:


void LCD_clear(void)
{
    43a2:	df 93       	push	r29
    43a4:	cf 93       	push	r28
    43a6:	cd b7       	in	r28, 0x3d	; 61
    43a8:	de b7       	in	r29, 0x3e	; 62
    43aa:	2e 97       	sbiw	r28, 0x0e	; 14
    43ac:	0f b6       	in	r0, 0x3f	; 63
    43ae:	f8 94       	cli
    43b0:	de bf       	out	0x3e, r29	; 62
    43b2:	0f be       	out	0x3f, r0	; 63
    43b4:	cd bf       	out	0x3d, r28	; 61
	// Clear Display
	LCD_sendCmnd(0b00000001);
    43b6:	81 e0       	ldi	r24, 0x01	; 1
    43b8:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <LCD_sendCmnd>
    43bc:	80 e0       	ldi	r24, 0x00	; 0
    43be:	90 e0       	ldi	r25, 0x00	; 0
    43c0:	a0 e0       	ldi	r26, 0x00	; 0
    43c2:	b0 e4       	ldi	r27, 0x40	; 64
    43c4:	8b 87       	std	Y+11, r24	; 0x0b
    43c6:	9c 87       	std	Y+12, r25	; 0x0c
    43c8:	ad 87       	std	Y+13, r26	; 0x0d
    43ca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    43ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    43d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    43d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    43d4:	20 e0       	ldi	r18, 0x00	; 0
    43d6:	30 e0       	ldi	r19, 0x00	; 0
    43d8:	4a e7       	ldi	r20, 0x7A	; 122
    43da:	55 e4       	ldi	r21, 0x45	; 69
    43dc:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    43e0:	dc 01       	movw	r26, r24
    43e2:	cb 01       	movw	r24, r22
    43e4:	8f 83       	std	Y+7, r24	; 0x07
    43e6:	98 87       	std	Y+8, r25	; 0x08
    43e8:	a9 87       	std	Y+9, r26	; 0x09
    43ea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    43ec:	6f 81       	ldd	r22, Y+7	; 0x07
    43ee:	78 85       	ldd	r23, Y+8	; 0x08
    43f0:	89 85       	ldd	r24, Y+9	; 0x09
    43f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    43f4:	20 e0       	ldi	r18, 0x00	; 0
    43f6:	30 e0       	ldi	r19, 0x00	; 0
    43f8:	40 e8       	ldi	r20, 0x80	; 128
    43fa:	5f e3       	ldi	r21, 0x3F	; 63
    43fc:	0e 94 82 14 	call	0x2904	; 0x2904 <__ltsf2>
    4400:	88 23       	and	r24, r24
    4402:	2c f4       	brge	.+10     	; 0x440e <LCD_clear+0x6c>
		__ticks = 1;
    4404:	81 e0       	ldi	r24, 0x01	; 1
    4406:	90 e0       	ldi	r25, 0x00	; 0
    4408:	9e 83       	std	Y+6, r25	; 0x06
    440a:	8d 83       	std	Y+5, r24	; 0x05
    440c:	3f c0       	rjmp	.+126    	; 0x448c <LCD_clear+0xea>
	else if (__tmp > 65535)
    440e:	6f 81       	ldd	r22, Y+7	; 0x07
    4410:	78 85       	ldd	r23, Y+8	; 0x08
    4412:	89 85       	ldd	r24, Y+9	; 0x09
    4414:	9a 85       	ldd	r25, Y+10	; 0x0a
    4416:	20 e0       	ldi	r18, 0x00	; 0
    4418:	3f ef       	ldi	r19, 0xFF	; 255
    441a:	4f e7       	ldi	r20, 0x7F	; 127
    441c:	57 e4       	ldi	r21, 0x47	; 71
    441e:	0e 94 22 14 	call	0x2844	; 0x2844 <__gtsf2>
    4422:	18 16       	cp	r1, r24
    4424:	4c f5       	brge	.+82     	; 0x4478 <LCD_clear+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4426:	6b 85       	ldd	r22, Y+11	; 0x0b
    4428:	7c 85       	ldd	r23, Y+12	; 0x0c
    442a:	8d 85       	ldd	r24, Y+13	; 0x0d
    442c:	9e 85       	ldd	r25, Y+14	; 0x0e
    442e:	20 e0       	ldi	r18, 0x00	; 0
    4430:	30 e0       	ldi	r19, 0x00	; 0
    4432:	40 e2       	ldi	r20, 0x20	; 32
    4434:	51 e4       	ldi	r21, 0x41	; 65
    4436:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__mulsf3>
    443a:	dc 01       	movw	r26, r24
    443c:	cb 01       	movw	r24, r22
    443e:	bc 01       	movw	r22, r24
    4440:	cd 01       	movw	r24, r26
    4442:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4446:	dc 01       	movw	r26, r24
    4448:	cb 01       	movw	r24, r22
    444a:	9e 83       	std	Y+6, r25	; 0x06
    444c:	8d 83       	std	Y+5, r24	; 0x05
    444e:	0f c0       	rjmp	.+30     	; 0x446e <LCD_clear+0xcc>
    4450:	80 e9       	ldi	r24, 0x90	; 144
    4452:	91 e0       	ldi	r25, 0x01	; 1
    4454:	9c 83       	std	Y+4, r25	; 0x04
    4456:	8b 83       	std	Y+3, r24	; 0x03
    4458:	8b 81       	ldd	r24, Y+3	; 0x03
    445a:	9c 81       	ldd	r25, Y+4	; 0x04
    445c:	01 97       	sbiw	r24, 0x01	; 1
    445e:	f1 f7       	brne	.-4      	; 0x445c <LCD_clear+0xba>
    4460:	9c 83       	std	Y+4, r25	; 0x04
    4462:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4464:	8d 81       	ldd	r24, Y+5	; 0x05
    4466:	9e 81       	ldd	r25, Y+6	; 0x06
    4468:	01 97       	sbiw	r24, 0x01	; 1
    446a:	9e 83       	std	Y+6, r25	; 0x06
    446c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    446e:	8d 81       	ldd	r24, Y+5	; 0x05
    4470:	9e 81       	ldd	r25, Y+6	; 0x06
    4472:	00 97       	sbiw	r24, 0x00	; 0
    4474:	69 f7       	brne	.-38     	; 0x4450 <LCD_clear+0xae>
    4476:	14 c0       	rjmp	.+40     	; 0x44a0 <LCD_clear+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4478:	6f 81       	ldd	r22, Y+7	; 0x07
    447a:	78 85       	ldd	r23, Y+8	; 0x08
    447c:	89 85       	ldd	r24, Y+9	; 0x09
    447e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4480:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4484:	dc 01       	movw	r26, r24
    4486:	cb 01       	movw	r24, r22
    4488:	9e 83       	std	Y+6, r25	; 0x06
    448a:	8d 83       	std	Y+5, r24	; 0x05
    448c:	8d 81       	ldd	r24, Y+5	; 0x05
    448e:	9e 81       	ldd	r25, Y+6	; 0x06
    4490:	9a 83       	std	Y+2, r25	; 0x02
    4492:	89 83       	std	Y+1, r24	; 0x01
    4494:	89 81       	ldd	r24, Y+1	; 0x01
    4496:	9a 81       	ldd	r25, Y+2	; 0x02
    4498:	01 97       	sbiw	r24, 0x01	; 1
    449a:	f1 f7       	brne	.-4      	; 0x4498 <LCD_clear+0xf6>
    449c:	9a 83       	std	Y+2, r25	; 0x02
    449e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    44a0:	2e 96       	adiw	r28, 0x0e	; 14
    44a2:	0f b6       	in	r0, 0x3f	; 63
    44a4:	f8 94       	cli
    44a6:	de bf       	out	0x3e, r29	; 62
    44a8:	0f be       	out	0x3f, r0	; 63
    44aa:	cd bf       	out	0x3d, r28	; 61
    44ac:	cf 91       	pop	r28
    44ae:	df 91       	pop	r29
    44b0:	08 95       	ret

000044b2 <private_writeHalfPort>:


static void private_writeHalfPort(u8 value)
{
    44b2:	df 93       	push	r29
    44b4:	cf 93       	push	r28
    44b6:	0f 92       	push	r0
    44b8:	cd b7       	in	r28, 0x3d	; 61
    44ba:	de b7       	in	r29, 0x3e	; 62
    44bc:	89 83       	std	Y+1, r24	; 0x01
	if(GET_BIT(value,0) == 1)
    44be:	89 81       	ldd	r24, Y+1	; 0x01
    44c0:	88 2f       	mov	r24, r24
    44c2:	90 e0       	ldi	r25, 0x00	; 0
    44c4:	81 70       	andi	r24, 0x01	; 1
    44c6:	90 70       	andi	r25, 0x00	; 0
    44c8:	88 23       	and	r24, r24
    44ca:	31 f0       	breq	.+12     	; 0x44d8 <private_writeHalfPort+0x26>
	{
		DIO_setPinValue(LCD_D4_PORT, LCD_D4_PIN, DIO_PIN_HIGH);
    44cc:	80 e0       	ldi	r24, 0x00	; 0
    44ce:	64 e0       	ldi	r22, 0x04	; 4
    44d0:	41 e0       	ldi	r20, 0x01	; 1
    44d2:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    44d6:	05 c0       	rjmp	.+10     	; 0x44e2 <private_writeHalfPort+0x30>
	}
	else
	{
		DIO_setPinValue(LCD_D4_PORT, LCD_D4_PIN, DIO_PIN_LOW);
    44d8:	80 e0       	ldi	r24, 0x00	; 0
    44da:	64 e0       	ldi	r22, 0x04	; 4
    44dc:	40 e0       	ldi	r20, 0x00	; 0
    44de:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
	}

	if(GET_BIT(value,1) == 1)
    44e2:	89 81       	ldd	r24, Y+1	; 0x01
    44e4:	86 95       	lsr	r24
    44e6:	88 2f       	mov	r24, r24
    44e8:	90 e0       	ldi	r25, 0x00	; 0
    44ea:	81 70       	andi	r24, 0x01	; 1
    44ec:	90 70       	andi	r25, 0x00	; 0
    44ee:	88 23       	and	r24, r24
    44f0:	31 f0       	breq	.+12     	; 0x44fe <private_writeHalfPort+0x4c>
	{
		DIO_setPinValue(LCD_D5_PORT, LCD_D5_PIN, DIO_PIN_HIGH);
    44f2:	80 e0       	ldi	r24, 0x00	; 0
    44f4:	65 e0       	ldi	r22, 0x05	; 5
    44f6:	41 e0       	ldi	r20, 0x01	; 1
    44f8:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    44fc:	05 c0       	rjmp	.+10     	; 0x4508 <private_writeHalfPort+0x56>
	}
	else
	{
		DIO_setPinValue(LCD_D5_PORT, LCD_D5_PIN, DIO_PIN_LOW);
    44fe:	80 e0       	ldi	r24, 0x00	; 0
    4500:	65 e0       	ldi	r22, 0x05	; 5
    4502:	40 e0       	ldi	r20, 0x00	; 0
    4504:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
	}

	if(GET_BIT(value,2) == 1)
    4508:	89 81       	ldd	r24, Y+1	; 0x01
    450a:	86 95       	lsr	r24
    450c:	86 95       	lsr	r24
    450e:	88 2f       	mov	r24, r24
    4510:	90 e0       	ldi	r25, 0x00	; 0
    4512:	81 70       	andi	r24, 0x01	; 1
    4514:	90 70       	andi	r25, 0x00	; 0
    4516:	88 23       	and	r24, r24
    4518:	31 f0       	breq	.+12     	; 0x4526 <private_writeHalfPort+0x74>
	{
		DIO_setPinValue(LCD_D6_PORT, LCD_D6_PIN, DIO_PIN_HIGH);
    451a:	80 e0       	ldi	r24, 0x00	; 0
    451c:	66 e0       	ldi	r22, 0x06	; 6
    451e:	41 e0       	ldi	r20, 0x01	; 1
    4520:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    4524:	05 c0       	rjmp	.+10     	; 0x4530 <private_writeHalfPort+0x7e>
	}
	else
	{
		DIO_setPinValue(LCD_D6_PORT, LCD_D6_PIN, DIO_PIN_LOW);
    4526:	80 e0       	ldi	r24, 0x00	; 0
    4528:	66 e0       	ldi	r22, 0x06	; 6
    452a:	40 e0       	ldi	r20, 0x00	; 0
    452c:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
	}

	if(GET_BIT(value,3) == 1)
    4530:	89 81       	ldd	r24, Y+1	; 0x01
    4532:	86 95       	lsr	r24
    4534:	86 95       	lsr	r24
    4536:	86 95       	lsr	r24
    4538:	88 2f       	mov	r24, r24
    453a:	90 e0       	ldi	r25, 0x00	; 0
    453c:	81 70       	andi	r24, 0x01	; 1
    453e:	90 70       	andi	r25, 0x00	; 0
    4540:	88 23       	and	r24, r24
    4542:	31 f0       	breq	.+12     	; 0x4550 <private_writeHalfPort+0x9e>
	{
		DIO_setPinValue(LCD_D7_PORT, LCD_D7_PIN, DIO_PIN_HIGH);
    4544:	80 e0       	ldi	r24, 0x00	; 0
    4546:	67 e0       	ldi	r22, 0x07	; 7
    4548:	41 e0       	ldi	r20, 0x01	; 1
    454a:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
    454e:	05 c0       	rjmp	.+10     	; 0x455a <private_writeHalfPort+0xa8>
	}
	else
	{
		DIO_setPinValue(LCD_D7_PORT, LCD_D7_PIN, DIO_PIN_LOW);
    4550:	80 e0       	ldi	r24, 0x00	; 0
    4552:	67 e0       	ldi	r22, 0x07	; 7
    4554:	40 e0       	ldi	r20, 0x00	; 0
    4556:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <DIO_setPinValue>
	}
}
    455a:	0f 90       	pop	r0
    455c:	cf 91       	pop	r28
    455e:	df 91       	pop	r29
    4560:	08 95       	ret

00004562 <LCD_SendNumber4bit>:

// send a number of many digits
void LCD_SendNumber4bit(long long int num)
{
    4562:	af 92       	push	r10
    4564:	bf 92       	push	r11
    4566:	cf 92       	push	r12
    4568:	df 92       	push	r13
    456a:	ef 92       	push	r14
    456c:	ff 92       	push	r15
    456e:	0f 93       	push	r16
    4570:	1f 93       	push	r17
    4572:	df 93       	push	r29
    4574:	cf 93       	push	r28
    4576:	cd b7       	in	r28, 0x3d	; 61
    4578:	de b7       	in	r29, 0x3e	; 62
    457a:	c6 54       	subi	r28, 0x46	; 70
    457c:	d0 40       	sbci	r29, 0x00	; 0
    457e:	0f b6       	in	r0, 0x3f	; 63
    4580:	f8 94       	cli
    4582:	de bf       	out	0x3e, r29	; 62
    4584:	0f be       	out	0x3f, r0	; 63
    4586:	cd bf       	out	0x3d, r28	; 61
    4588:	2b 8b       	std	Y+19, r18	; 0x13
    458a:	3c 8b       	std	Y+20, r19	; 0x14
    458c:	4d 8b       	std	Y+21, r20	; 0x15
    458e:	5e 8b       	std	Y+22, r21	; 0x16
    4590:	6f 8b       	std	Y+23, r22	; 0x17
    4592:	78 8f       	std	Y+24, r23	; 0x18
    4594:	89 8f       	std	Y+25, r24	; 0x19
    4596:	9a 8f       	std	Y+26, r25	; 0x1a
    signed char i = 0;
    4598:	1a 82       	std	Y+2, r1	; 0x02
    unsigned char rem;
    unsigned char arr[16];

    if (num < 0)
    459a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    459c:	88 23       	and	r24, r24
    459e:	d4 f0       	brlt	.+52     	; 0x45d4 <LCD_SendNumber4bit+0x72>
    45a0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    45a2:	88 23       	and	r24, r24
    45a4:	09 f0       	breq	.+2      	; 0x45a8 <LCD_SendNumber4bit+0x46>
    45a6:	2f c1       	rjmp	.+606    	; 0x4806 <LCD_SendNumber4bit+0x2a4>
    45a8:	89 8d       	ldd	r24, Y+25	; 0x19
    45aa:	88 23       	and	r24, r24
    45ac:	09 f0       	breq	.+2      	; 0x45b0 <LCD_SendNumber4bit+0x4e>
    45ae:	2b c1       	rjmp	.+598    	; 0x4806 <LCD_SendNumber4bit+0x2a4>
    45b0:	88 8d       	ldd	r24, Y+24	; 0x18
    45b2:	88 23       	and	r24, r24
    45b4:	09 f0       	breq	.+2      	; 0x45b8 <LCD_SendNumber4bit+0x56>
    45b6:	27 c1       	rjmp	.+590    	; 0x4806 <LCD_SendNumber4bit+0x2a4>
    45b8:	8f 89       	ldd	r24, Y+23	; 0x17
    45ba:	88 23       	and	r24, r24
    45bc:	09 f0       	breq	.+2      	; 0x45c0 <LCD_SendNumber4bit+0x5e>
    45be:	23 c1       	rjmp	.+582    	; 0x4806 <LCD_SendNumber4bit+0x2a4>
    45c0:	8e 89       	ldd	r24, Y+22	; 0x16
    45c2:	88 23       	and	r24, r24
    45c4:	09 f0       	breq	.+2      	; 0x45c8 <LCD_SendNumber4bit+0x66>
    45c6:	1f c1       	rjmp	.+574    	; 0x4806 <LCD_SendNumber4bit+0x2a4>
    45c8:	8d 89       	ldd	r24, Y+21	; 0x15
    45ca:	88 23       	and	r24, r24
    45cc:	09 f0       	breq	.+2      	; 0x45d0 <LCD_SendNumber4bit+0x6e>
    45ce:	1b c1       	rjmp	.+566    	; 0x4806 <LCD_SendNumber4bit+0x2a4>
    45d0:	8c 89       	ldd	r24, Y+20	; 0x14
    45d2:	19 c1       	rjmp	.+562    	; 0x4806 <LCD_SendNumber4bit+0x2a4>
    {
        LCD_sendChar('-');
    45d4:	8d e2       	ldi	r24, 0x2D	; 45
    45d6:	0e 94 8a 20 	call	0x4114	; 0x4114 <LCD_sendChar>
        num = num * -1;
    45da:	1c 8e       	std	Y+28, r1	; 0x1c
    45dc:	1d 8e       	std	Y+29, r1	; 0x1d
    45de:	1e 8e       	std	Y+30, r1	; 0x1e
    45e0:	1f 8e       	std	Y+31, r1	; 0x1f
    45e2:	18 a2       	std	Y+32, r1	; 0x20
    45e4:	19 a2       	std	Y+33, r1	; 0x21
    45e6:	1a a2       	std	Y+34, r1	; 0x22
    45e8:	1b a2       	std	Y+35, r1	; 0x23
    45ea:	9b 89       	ldd	r25, Y+19	; 0x13
    45ec:	9c a3       	std	Y+36, r25	; 0x24
    45ee:	8c 89       	ldd	r24, Y+20	; 0x14
    45f0:	8d a3       	std	Y+37, r24	; 0x25
    45f2:	9d 89       	ldd	r25, Y+21	; 0x15
    45f4:	9e a3       	std	Y+38, r25	; 0x26
    45f6:	8e 89       	ldd	r24, Y+22	; 0x16
    45f8:	8f a3       	std	Y+39, r24	; 0x27
    45fa:	9f 89       	ldd	r25, Y+23	; 0x17
    45fc:	98 a7       	std	Y+40, r25	; 0x28
    45fe:	88 8d       	ldd	r24, Y+24	; 0x18
    4600:	89 a7       	std	Y+41, r24	; 0x29
    4602:	99 8d       	ldd	r25, Y+25	; 0x19
    4604:	9a a7       	std	Y+42, r25	; 0x2a
    4606:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4608:	8b a7       	std	Y+43, r24	; 0x2b
    460a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    460c:	8c a1       	ldd	r24, Y+36	; 0x24
    460e:	98 1b       	sub	r25, r24
    4610:	9c a7       	std	Y+44, r25	; 0x2c
    4612:	91 e0       	ldi	r25, 0x01	; 1
    4614:	9c ab       	std	Y+52, r25	; 0x34
    4616:	8c a5       	ldd	r24, Y+44	; 0x2c
    4618:	9c 8d       	ldd	r25, Y+28	; 0x1c
    461a:	98 17       	cp	r25, r24
    461c:	08 f0       	brcs	.+2      	; 0x4620 <LCD_SendNumber4bit+0xbe>
    461e:	1c aa       	std	Y+52, r1	; 0x34
    4620:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4622:	9d a1       	ldd	r25, Y+37	; 0x25
    4624:	89 1b       	sub	r24, r25
    4626:	8d a7       	std	Y+45, r24	; 0x2d
    4628:	81 e0       	ldi	r24, 0x01	; 1
    462a:	8d ab       	std	Y+53, r24	; 0x35
    462c:	9d a5       	ldd	r25, Y+45	; 0x2d
    462e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4630:	89 17       	cp	r24, r25
    4632:	08 f0       	brcs	.+2      	; 0x4636 <LCD_SendNumber4bit+0xd4>
    4634:	1d aa       	std	Y+53, r1	; 0x35
    4636:	9d a5       	ldd	r25, Y+45	; 0x2d
    4638:	8c a9       	ldd	r24, Y+52	; 0x34
    463a:	98 1b       	sub	r25, r24
    463c:	9e ab       	std	Y+54, r25	; 0x36
    463e:	91 e0       	ldi	r25, 0x01	; 1
    4640:	9f ab       	std	Y+55, r25	; 0x37
    4642:	8e a9       	ldd	r24, Y+54	; 0x36
    4644:	9d a5       	ldd	r25, Y+45	; 0x2d
    4646:	98 17       	cp	r25, r24
    4648:	08 f0       	brcs	.+2      	; 0x464c <LCD_SendNumber4bit+0xea>
    464a:	1f aa       	std	Y+55, r1	; 0x37
    464c:	8d a9       	ldd	r24, Y+53	; 0x35
    464e:	9f a9       	ldd	r25, Y+55	; 0x37
    4650:	89 2b       	or	r24, r25
    4652:	8d ab       	std	Y+53, r24	; 0x35
    4654:	8e a9       	ldd	r24, Y+54	; 0x36
    4656:	8d a7       	std	Y+45, r24	; 0x2d
    4658:	9e 8d       	ldd	r25, Y+30	; 0x1e
    465a:	8e a1       	ldd	r24, Y+38	; 0x26
    465c:	98 1b       	sub	r25, r24
    465e:	9e a7       	std	Y+46, r25	; 0x2e
    4660:	91 e0       	ldi	r25, 0x01	; 1
    4662:	98 af       	std	Y+56, r25	; 0x38
    4664:	8e a5       	ldd	r24, Y+46	; 0x2e
    4666:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4668:	98 17       	cp	r25, r24
    466a:	08 f0       	brcs	.+2      	; 0x466e <LCD_SendNumber4bit+0x10c>
    466c:	18 ae       	std	Y+56, r1	; 0x38
    466e:	8e a5       	ldd	r24, Y+46	; 0x2e
    4670:	9d a9       	ldd	r25, Y+53	; 0x35
    4672:	89 1b       	sub	r24, r25
    4674:	89 af       	std	Y+57, r24	; 0x39
    4676:	81 e0       	ldi	r24, 0x01	; 1
    4678:	8a af       	std	Y+58, r24	; 0x3a
    467a:	99 ad       	ldd	r25, Y+57	; 0x39
    467c:	8e a5       	ldd	r24, Y+46	; 0x2e
    467e:	89 17       	cp	r24, r25
    4680:	08 f0       	brcs	.+2      	; 0x4684 <LCD_SendNumber4bit+0x122>
    4682:	1a ae       	std	Y+58, r1	; 0x3a
    4684:	98 ad       	ldd	r25, Y+56	; 0x38
    4686:	8a ad       	ldd	r24, Y+58	; 0x3a
    4688:	98 2b       	or	r25, r24
    468a:	98 af       	std	Y+56, r25	; 0x38
    468c:	99 ad       	ldd	r25, Y+57	; 0x39
    468e:	9e a7       	std	Y+46, r25	; 0x2e
    4690:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4692:	9f a1       	ldd	r25, Y+39	; 0x27
    4694:	89 1b       	sub	r24, r25
    4696:	8f a7       	std	Y+47, r24	; 0x2f
    4698:	81 e0       	ldi	r24, 0x01	; 1
    469a:	8b af       	std	Y+59, r24	; 0x3b
    469c:	9f a5       	ldd	r25, Y+47	; 0x2f
    469e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    46a0:	89 17       	cp	r24, r25
    46a2:	08 f0       	brcs	.+2      	; 0x46a6 <LCD_SendNumber4bit+0x144>
    46a4:	1b ae       	std	Y+59, r1	; 0x3b
    46a6:	9f a5       	ldd	r25, Y+47	; 0x2f
    46a8:	88 ad       	ldd	r24, Y+56	; 0x38
    46aa:	98 1b       	sub	r25, r24
    46ac:	9c af       	std	Y+60, r25	; 0x3c
    46ae:	91 e0       	ldi	r25, 0x01	; 1
    46b0:	9d af       	std	Y+61, r25	; 0x3d
    46b2:	8c ad       	ldd	r24, Y+60	; 0x3c
    46b4:	9f a5       	ldd	r25, Y+47	; 0x2f
    46b6:	98 17       	cp	r25, r24
    46b8:	08 f0       	brcs	.+2      	; 0x46bc <LCD_SendNumber4bit+0x15a>
    46ba:	1d ae       	std	Y+61, r1	; 0x3d
    46bc:	8b ad       	ldd	r24, Y+59	; 0x3b
    46be:	9d ad       	ldd	r25, Y+61	; 0x3d
    46c0:	89 2b       	or	r24, r25
    46c2:	8b af       	std	Y+59, r24	; 0x3b
    46c4:	8c ad       	ldd	r24, Y+60	; 0x3c
    46c6:	8f a7       	std	Y+47, r24	; 0x2f
    46c8:	98 a1       	ldd	r25, Y+32	; 0x20
    46ca:	88 a5       	ldd	r24, Y+40	; 0x28
    46cc:	98 1b       	sub	r25, r24
    46ce:	98 ab       	std	Y+48, r25	; 0x30
    46d0:	91 e0       	ldi	r25, 0x01	; 1
    46d2:	9e af       	std	Y+62, r25	; 0x3e
    46d4:	88 a9       	ldd	r24, Y+48	; 0x30
    46d6:	98 a1       	ldd	r25, Y+32	; 0x20
    46d8:	98 17       	cp	r25, r24
    46da:	08 f0       	brcs	.+2      	; 0x46de <LCD_SendNumber4bit+0x17c>
    46dc:	1e ae       	std	Y+62, r1	; 0x3e
    46de:	88 a9       	ldd	r24, Y+48	; 0x30
    46e0:	9b ad       	ldd	r25, Y+59	; 0x3b
    46e2:	89 1b       	sub	r24, r25
    46e4:	8f af       	std	Y+63, r24	; 0x3f
    46e6:	81 e0       	ldi	r24, 0x01	; 1
    46e8:	21 96       	adiw	r28, 0x01	; 1
    46ea:	8f af       	std	Y+63, r24	; 0x3f
    46ec:	21 97       	sbiw	r28, 0x01	; 1
    46ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    46f0:	88 a9       	ldd	r24, Y+48	; 0x30
    46f2:	89 17       	cp	r24, r25
    46f4:	18 f0       	brcs	.+6      	; 0x46fc <LCD_SendNumber4bit+0x19a>
    46f6:	21 96       	adiw	r28, 0x01	; 1
    46f8:	1f ae       	std	Y+63, r1	; 0x3f
    46fa:	21 97       	sbiw	r28, 0x01	; 1
    46fc:	9e ad       	ldd	r25, Y+62	; 0x3e
    46fe:	21 96       	adiw	r28, 0x01	; 1
    4700:	8f ad       	ldd	r24, Y+63	; 0x3f
    4702:	21 97       	sbiw	r28, 0x01	; 1
    4704:	98 2b       	or	r25, r24
    4706:	9e af       	std	Y+62, r25	; 0x3e
    4708:	9f ad       	ldd	r25, Y+63	; 0x3f
    470a:	98 ab       	std	Y+48, r25	; 0x30
    470c:	89 a1       	ldd	r24, Y+33	; 0x21
    470e:	99 a5       	ldd	r25, Y+41	; 0x29
    4710:	89 1b       	sub	r24, r25
    4712:	89 ab       	std	Y+49, r24	; 0x31
    4714:	81 e0       	ldi	r24, 0x01	; 1
    4716:	22 96       	adiw	r28, 0x02	; 2
    4718:	8f af       	std	Y+63, r24	; 0x3f
    471a:	22 97       	sbiw	r28, 0x02	; 2
    471c:	99 a9       	ldd	r25, Y+49	; 0x31
    471e:	89 a1       	ldd	r24, Y+33	; 0x21
    4720:	89 17       	cp	r24, r25
    4722:	18 f0       	brcs	.+6      	; 0x472a <LCD_SendNumber4bit+0x1c8>
    4724:	22 96       	adiw	r28, 0x02	; 2
    4726:	1f ae       	std	Y+63, r1	; 0x3f
    4728:	22 97       	sbiw	r28, 0x02	; 2
    472a:	99 a9       	ldd	r25, Y+49	; 0x31
    472c:	8e ad       	ldd	r24, Y+62	; 0x3e
    472e:	98 1b       	sub	r25, r24
    4730:	23 96       	adiw	r28, 0x03	; 3
    4732:	9f af       	std	Y+63, r25	; 0x3f
    4734:	23 97       	sbiw	r28, 0x03	; 3
    4736:	91 e0       	ldi	r25, 0x01	; 1
    4738:	24 96       	adiw	r28, 0x04	; 4
    473a:	9f af       	std	Y+63, r25	; 0x3f
    473c:	24 97       	sbiw	r28, 0x04	; 4
    473e:	23 96       	adiw	r28, 0x03	; 3
    4740:	8f ad       	ldd	r24, Y+63	; 0x3f
    4742:	23 97       	sbiw	r28, 0x03	; 3
    4744:	99 a9       	ldd	r25, Y+49	; 0x31
    4746:	98 17       	cp	r25, r24
    4748:	18 f0       	brcs	.+6      	; 0x4750 <LCD_SendNumber4bit+0x1ee>
    474a:	24 96       	adiw	r28, 0x04	; 4
    474c:	1f ae       	std	Y+63, r1	; 0x3f
    474e:	24 97       	sbiw	r28, 0x04	; 4
    4750:	22 96       	adiw	r28, 0x02	; 2
    4752:	8f ad       	ldd	r24, Y+63	; 0x3f
    4754:	22 97       	sbiw	r28, 0x02	; 2
    4756:	24 96       	adiw	r28, 0x04	; 4
    4758:	9f ad       	ldd	r25, Y+63	; 0x3f
    475a:	24 97       	sbiw	r28, 0x04	; 4
    475c:	89 2b       	or	r24, r25
    475e:	22 96       	adiw	r28, 0x02	; 2
    4760:	8f af       	std	Y+63, r24	; 0x3f
    4762:	22 97       	sbiw	r28, 0x02	; 2
    4764:	23 96       	adiw	r28, 0x03	; 3
    4766:	8f ad       	ldd	r24, Y+63	; 0x3f
    4768:	23 97       	sbiw	r28, 0x03	; 3
    476a:	89 ab       	std	Y+49, r24	; 0x31
    476c:	9a a1       	ldd	r25, Y+34	; 0x22
    476e:	8a a5       	ldd	r24, Y+42	; 0x2a
    4770:	98 1b       	sub	r25, r24
    4772:	9a ab       	std	Y+50, r25	; 0x32
    4774:	91 e0       	ldi	r25, 0x01	; 1
    4776:	25 96       	adiw	r28, 0x05	; 5
    4778:	9f af       	std	Y+63, r25	; 0x3f
    477a:	25 97       	sbiw	r28, 0x05	; 5
    477c:	8a a9       	ldd	r24, Y+50	; 0x32
    477e:	9a a1       	ldd	r25, Y+34	; 0x22
    4780:	98 17       	cp	r25, r24
    4782:	18 f0       	brcs	.+6      	; 0x478a <LCD_SendNumber4bit+0x228>
    4784:	25 96       	adiw	r28, 0x05	; 5
    4786:	1f ae       	std	Y+63, r1	; 0x3f
    4788:	25 97       	sbiw	r28, 0x05	; 5
    478a:	8a a9       	ldd	r24, Y+50	; 0x32
    478c:	22 96       	adiw	r28, 0x02	; 2
    478e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4790:	22 97       	sbiw	r28, 0x02	; 2
    4792:	89 1b       	sub	r24, r25
    4794:	26 96       	adiw	r28, 0x06	; 6
    4796:	8f af       	std	Y+63, r24	; 0x3f
    4798:	26 97       	sbiw	r28, 0x06	; 6
    479a:	81 e0       	ldi	r24, 0x01	; 1
    479c:	27 96       	adiw	r28, 0x07	; 7
    479e:	8f af       	std	Y+63, r24	; 0x3f
    47a0:	27 97       	sbiw	r28, 0x07	; 7
    47a2:	26 96       	adiw	r28, 0x06	; 6
    47a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    47a6:	26 97       	sbiw	r28, 0x06	; 6
    47a8:	8a a9       	ldd	r24, Y+50	; 0x32
    47aa:	89 17       	cp	r24, r25
    47ac:	18 f0       	brcs	.+6      	; 0x47b4 <LCD_SendNumber4bit+0x252>
    47ae:	27 96       	adiw	r28, 0x07	; 7
    47b0:	1f ae       	std	Y+63, r1	; 0x3f
    47b2:	27 97       	sbiw	r28, 0x07	; 7
    47b4:	25 96       	adiw	r28, 0x05	; 5
    47b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    47b8:	25 97       	sbiw	r28, 0x05	; 5
    47ba:	27 96       	adiw	r28, 0x07	; 7
    47bc:	8f ad       	ldd	r24, Y+63	; 0x3f
    47be:	27 97       	sbiw	r28, 0x07	; 7
    47c0:	98 2b       	or	r25, r24
    47c2:	25 96       	adiw	r28, 0x05	; 5
    47c4:	9f af       	std	Y+63, r25	; 0x3f
    47c6:	25 97       	sbiw	r28, 0x05	; 5
    47c8:	26 96       	adiw	r28, 0x06	; 6
    47ca:	9f ad       	ldd	r25, Y+63	; 0x3f
    47cc:	26 97       	sbiw	r28, 0x06	; 6
    47ce:	9a ab       	std	Y+50, r25	; 0x32
    47d0:	8b a1       	ldd	r24, Y+35	; 0x23
    47d2:	9b a5       	ldd	r25, Y+43	; 0x2b
    47d4:	89 1b       	sub	r24, r25
    47d6:	8b ab       	std	Y+51, r24	; 0x33
    47d8:	8b a9       	ldd	r24, Y+51	; 0x33
    47da:	25 96       	adiw	r28, 0x05	; 5
    47dc:	9f ad       	ldd	r25, Y+63	; 0x3f
    47de:	25 97       	sbiw	r28, 0x05	; 5
    47e0:	89 1b       	sub	r24, r25
    47e2:	8b ab       	std	Y+51, r24	; 0x33
    47e4:	8c a5       	ldd	r24, Y+44	; 0x2c
    47e6:	8b 8b       	std	Y+19, r24	; 0x13
    47e8:	9d a5       	ldd	r25, Y+45	; 0x2d
    47ea:	9c 8b       	std	Y+20, r25	; 0x14
    47ec:	8e a5       	ldd	r24, Y+46	; 0x2e
    47ee:	8d 8b       	std	Y+21, r24	; 0x15
    47f0:	9f a5       	ldd	r25, Y+47	; 0x2f
    47f2:	9e 8b       	std	Y+22, r25	; 0x16
    47f4:	88 a9       	ldd	r24, Y+48	; 0x30
    47f6:	8f 8b       	std	Y+23, r24	; 0x17
    47f8:	99 a9       	ldd	r25, Y+49	; 0x31
    47fa:	98 8f       	std	Y+24, r25	; 0x18
    47fc:	8a a9       	ldd	r24, Y+50	; 0x32
    47fe:	89 8f       	std	Y+25, r24	; 0x19
    4800:	9b a9       	ldd	r25, Y+51	; 0x33
    4802:	9a 8f       	std	Y+26, r25	; 0x1a
    4804:	80 c0       	rjmp	.+256    	; 0x4906 <LCD_SendNumber4bit+0x3a4>
    }
    else if (num == 0)
    4806:	8b 89       	ldd	r24, Y+19	; 0x13
    4808:	9c 89       	ldd	r25, Y+20	; 0x14
    480a:	89 2b       	or	r24, r25
    480c:	9d 89       	ldd	r25, Y+21	; 0x15
    480e:	89 2b       	or	r24, r25
    4810:	9e 89       	ldd	r25, Y+22	; 0x16
    4812:	89 2b       	or	r24, r25
    4814:	9f 89       	ldd	r25, Y+23	; 0x17
    4816:	89 2b       	or	r24, r25
    4818:	98 8d       	ldd	r25, Y+24	; 0x18
    481a:	89 2b       	or	r24, r25
    481c:	99 8d       	ldd	r25, Y+25	; 0x19
    481e:	89 2b       	or	r24, r25
    4820:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4822:	89 2b       	or	r24, r25
    4824:	88 23       	and	r24, r24
    4826:	09 f0       	breq	.+2      	; 0x482a <LCD_SendNumber4bit+0x2c8>
    4828:	6e c0       	rjmp	.+220    	; 0x4906 <LCD_SendNumber4bit+0x3a4>
    {
        LCD_sendChar('0');
    482a:	80 e3       	ldi	r24, 0x30	; 48
    482c:	0e 94 8a 20 	call	0x4114	; 0x4114 <LCD_sendChar>
    4830:	97 c0       	rjmp	.+302    	; 0x4960 <LCD_SendNumber4bit+0x3fe>
        return; // Exit the function since there are no digits to process.
    }

    while (num != 0 && i < 16)
    {
        rem = num % 10;
    4832:	ab 88       	ldd	r10, Y+19	; 0x13
    4834:	bc 88       	ldd	r11, Y+20	; 0x14
    4836:	cd 88       	ldd	r12, Y+21	; 0x15
    4838:	de 88       	ldd	r13, Y+22	; 0x16
    483a:	ef 88       	ldd	r14, Y+23	; 0x17
    483c:	f8 8c       	ldd	r15, Y+24	; 0x18
    483e:	09 8d       	ldd	r16, Y+25	; 0x19
    4840:	1a 8d       	ldd	r17, Y+26	; 0x1a
    4842:	2a 2d       	mov	r18, r10
    4844:	3b 2d       	mov	r19, r11
    4846:	4c 2d       	mov	r20, r12
    4848:	5d 2d       	mov	r21, r13
    484a:	6e 2d       	mov	r22, r14
    484c:	7f 2d       	mov	r23, r15
    484e:	80 2f       	mov	r24, r16
    4850:	91 2f       	mov	r25, r17
    4852:	0f 2e       	mov	r0, r31
    4854:	fa e0       	ldi	r31, 0x0A	; 10
    4856:	af 2e       	mov	r10, r31
    4858:	f0 2d       	mov	r31, r0
    485a:	bb 24       	eor	r11, r11
    485c:	cc 24       	eor	r12, r12
    485e:	dd 24       	eor	r13, r13
    4860:	ee 24       	eor	r14, r14
    4862:	ff 24       	eor	r15, r15
    4864:	00 e0       	ldi	r16, 0x00	; 0
    4866:	10 e0       	ldi	r17, 0x00	; 0
    4868:	0e 94 95 08 	call	0x112a	; 0x112a <__moddi3>
    486c:	a2 2e       	mov	r10, r18
    486e:	b3 2e       	mov	r11, r19
    4870:	c4 2e       	mov	r12, r20
    4872:	d5 2e       	mov	r13, r21
    4874:	e6 2e       	mov	r14, r22
    4876:	f7 2e       	mov	r15, r23
    4878:	08 2f       	mov	r16, r24
    487a:	19 2f       	mov	r17, r25
    487c:	2a 2d       	mov	r18, r10
    487e:	3b 2d       	mov	r19, r11
    4880:	4c 2d       	mov	r20, r12
    4882:	5d 2d       	mov	r21, r13
    4884:	6e 2d       	mov	r22, r14
    4886:	7f 2d       	mov	r23, r15
    4888:	80 2f       	mov	r24, r16
    488a:	91 2f       	mov	r25, r17
    488c:	29 83       	std	Y+1, r18	; 0x01
        arr[i] = rem;
    488e:	8a 81       	ldd	r24, Y+2	; 0x02
    4890:	28 2f       	mov	r18, r24
    4892:	33 27       	eor	r19, r19
    4894:	27 fd       	sbrc	r18, 7
    4896:	30 95       	com	r19
    4898:	ce 01       	movw	r24, r28
    489a:	03 96       	adiw	r24, 0x03	; 3
    489c:	fc 01       	movw	r30, r24
    489e:	e2 0f       	add	r30, r18
    48a0:	f3 1f       	adc	r31, r19
    48a2:	89 81       	ldd	r24, Y+1	; 0x01
    48a4:	80 83       	st	Z, r24
        num = num / 10;
    48a6:	ab 88       	ldd	r10, Y+19	; 0x13
    48a8:	bc 88       	ldd	r11, Y+20	; 0x14
    48aa:	cd 88       	ldd	r12, Y+21	; 0x15
    48ac:	de 88       	ldd	r13, Y+22	; 0x16
    48ae:	ef 88       	ldd	r14, Y+23	; 0x17
    48b0:	f8 8c       	ldd	r15, Y+24	; 0x18
    48b2:	09 8d       	ldd	r16, Y+25	; 0x19
    48b4:	1a 8d       	ldd	r17, Y+26	; 0x1a
    48b6:	2a 2d       	mov	r18, r10
    48b8:	3b 2d       	mov	r19, r11
    48ba:	4c 2d       	mov	r20, r12
    48bc:	5d 2d       	mov	r21, r13
    48be:	6e 2d       	mov	r22, r14
    48c0:	7f 2d       	mov	r23, r15
    48c2:	80 2f       	mov	r24, r16
    48c4:	91 2f       	mov	r25, r17
    48c6:	0f 2e       	mov	r0, r31
    48c8:	fa e0       	ldi	r31, 0x0A	; 10
    48ca:	af 2e       	mov	r10, r31
    48cc:	f0 2d       	mov	r31, r0
    48ce:	bb 24       	eor	r11, r11
    48d0:	cc 24       	eor	r12, r12
    48d2:	dd 24       	eor	r13, r13
    48d4:	ee 24       	eor	r14, r14
    48d6:	ff 24       	eor	r15, r15
    48d8:	00 e0       	ldi	r16, 0x00	; 0
    48da:	10 e0       	ldi	r17, 0x00	; 0
    48dc:	0e 94 6d 00 	call	0xda	; 0xda <__divdi3>
    48e0:	a2 2e       	mov	r10, r18
    48e2:	b3 2e       	mov	r11, r19
    48e4:	c4 2e       	mov	r12, r20
    48e6:	d5 2e       	mov	r13, r21
    48e8:	e6 2e       	mov	r14, r22
    48ea:	f7 2e       	mov	r15, r23
    48ec:	08 2f       	mov	r16, r24
    48ee:	19 2f       	mov	r17, r25
    48f0:	ab 8a       	std	Y+19, r10	; 0x13
    48f2:	bc 8a       	std	Y+20, r11	; 0x14
    48f4:	cd 8a       	std	Y+21, r12	; 0x15
    48f6:	de 8a       	std	Y+22, r13	; 0x16
    48f8:	ef 8a       	std	Y+23, r14	; 0x17
    48fa:	f8 8e       	std	Y+24, r15	; 0x18
    48fc:	09 8f       	std	Y+25, r16	; 0x19
    48fe:	1a 8f       	std	Y+26, r17	; 0x1a
        i++;
    4900:	8a 81       	ldd	r24, Y+2	; 0x02
    4902:	8f 5f       	subi	r24, 0xFF	; 255
    4904:	8a 83       	std	Y+2, r24	; 0x02
    {
        LCD_sendChar('0');
        return; // Exit the function since there are no digits to process.
    }

    while (num != 0 && i < 16)
    4906:	8b 89       	ldd	r24, Y+19	; 0x13
    4908:	9c 89       	ldd	r25, Y+20	; 0x14
    490a:	89 2b       	or	r24, r25
    490c:	9d 89       	ldd	r25, Y+21	; 0x15
    490e:	89 2b       	or	r24, r25
    4910:	9e 89       	ldd	r25, Y+22	; 0x16
    4912:	89 2b       	or	r24, r25
    4914:	9f 89       	ldd	r25, Y+23	; 0x17
    4916:	89 2b       	or	r24, r25
    4918:	98 8d       	ldd	r25, Y+24	; 0x18
    491a:	89 2b       	or	r24, r25
    491c:	99 8d       	ldd	r25, Y+25	; 0x19
    491e:	89 2b       	or	r24, r25
    4920:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4922:	89 2b       	or	r24, r25
    4924:	88 23       	and	r24, r24
    4926:	21 f0       	breq	.+8      	; 0x4930 <LCD_SendNumber4bit+0x3ce>
    4928:	8a 81       	ldd	r24, Y+2	; 0x02
    492a:	80 31       	cpi	r24, 0x10	; 16
    492c:	0c f4       	brge	.+2      	; 0x4930 <LCD_SendNumber4bit+0x3ce>
    492e:	81 cf       	rjmp	.-254    	; 0x4832 <LCD_SendNumber4bit+0x2d0>
        arr[i] = rem;
        num = num / 10;
        i++;
    }

    for (i = i - 1; i >= 0; i--)
    4930:	8a 81       	ldd	r24, Y+2	; 0x02
    4932:	81 50       	subi	r24, 0x01	; 1
    4934:	8a 83       	std	Y+2, r24	; 0x02
    4936:	11 c0       	rjmp	.+34     	; 0x495a <LCD_SendNumber4bit+0x3f8>
    {
        LCD_sendChar(arr[i] + '0');
    4938:	8a 81       	ldd	r24, Y+2	; 0x02
    493a:	28 2f       	mov	r18, r24
    493c:	33 27       	eor	r19, r19
    493e:	27 fd       	sbrc	r18, 7
    4940:	30 95       	com	r19
    4942:	ce 01       	movw	r24, r28
    4944:	03 96       	adiw	r24, 0x03	; 3
    4946:	fc 01       	movw	r30, r24
    4948:	e2 0f       	add	r30, r18
    494a:	f3 1f       	adc	r31, r19
    494c:	80 81       	ld	r24, Z
    494e:	80 5d       	subi	r24, 0xD0	; 208
    4950:	0e 94 8a 20 	call	0x4114	; 0x4114 <LCD_sendChar>
        arr[i] = rem;
        num = num / 10;
        i++;
    }

    for (i = i - 1; i >= 0; i--)
    4954:	8a 81       	ldd	r24, Y+2	; 0x02
    4956:	81 50       	subi	r24, 0x01	; 1
    4958:	8a 83       	std	Y+2, r24	; 0x02
    495a:	8a 81       	ldd	r24, Y+2	; 0x02
    495c:	88 23       	and	r24, r24
    495e:	64 f7       	brge	.-40     	; 0x4938 <LCD_SendNumber4bit+0x3d6>
    {
        LCD_sendChar(arr[i] + '0');
    }
}
    4960:	ca 5b       	subi	r28, 0xBA	; 186
    4962:	df 4f       	sbci	r29, 0xFF	; 255
    4964:	0f b6       	in	r0, 0x3f	; 63
    4966:	f8 94       	cli
    4968:	de bf       	out	0x3e, r29	; 62
    496a:	0f be       	out	0x3f, r0	; 63
    496c:	cd bf       	out	0x3d, r28	; 61
    496e:	cf 91       	pop	r28
    4970:	df 91       	pop	r29
    4972:	1f 91       	pop	r17
    4974:	0f 91       	pop	r16
    4976:	ff 90       	pop	r15
    4978:	ef 90       	pop	r14
    497a:	df 90       	pop	r13
    497c:	cf 90       	pop	r12
    497e:	bf 90       	pop	r11
    4980:	af 90       	pop	r10
    4982:	08 95       	ret

00004984 <UART_init>:
#include "UART_interface.h"
#include "UART_private.h"


void UART_init(void)
{
    4984:	df 93       	push	r29
    4986:	cf 93       	push	r28
    4988:	0f 92       	push	r0
    498a:	cd b7       	in	r28, 0x3d	; 61
    498c:	de b7       	in	r29, 0x3e	; 62
	// Set Buad Rate = 9600
	CLR_BIT(UCSRA,U2X);//disable double speed
    498e:	ab e2       	ldi	r26, 0x2B	; 43
    4990:	b0 e0       	ldi	r27, 0x00	; 0
    4992:	eb e2       	ldi	r30, 0x2B	; 43
    4994:	f0 e0       	ldi	r31, 0x00	; 0
    4996:	80 81       	ld	r24, Z
    4998:	8d 7f       	andi	r24, 0xFD	; 253
    499a:	8c 93       	st	X, r24
	UBRRL = 103;//choose baud rate from table to most common baud rate 9600 bts
    499c:	e9 e2       	ldi	r30, 0x29	; 41
    499e:	f0 e0       	ldi	r31, 0x00	; 0
    49a0:	87 e6       	ldi	r24, 0x67	; 103
    49a2:	80 83       	st	Z, r24
	
	u8 initVar = 0x00;                                                       // this var is to overcome the problem of the two registers that have same address
    49a4:	19 82       	std	Y+1, r1	; 0x01
                                                                             // so we are going to write directly to the register using this variable
	SET_BIT(initVar,URSEL);// select the UCSRC(one of the two regs)          // now we are in the bits dimension each bit in the 8bit var shuld do a specific task in the register
    49a6:	89 81       	ldd	r24, Y+1	; 0x01
    49a8:	80 68       	ori	r24, 0x80	; 128
    49aa:	89 83       	std	Y+1, r24	; 0x01
	// select UART MODE = Asynchronous                                       //the main problem was that when i read the register one time it get me the value in the required regs and second time it read the other register
	CLR_BIT(initVar,UMSEL);
    49ac:	89 81       	ldd	r24, Y+1	; 0x01
    49ae:	8f 7b       	andi	r24, 0xBF	; 191
    49b0:	89 83       	std	Y+1, r24	; 0x01
	// configure no parity that chec transmission error
	CLR_BIT(initVar,UPM0); 
    49b2:	89 81       	ldd	r24, Y+1	; 0x01
    49b4:	8f 7e       	andi	r24, 0xEF	; 239
    49b6:	89 83       	std	Y+1, r24	; 0x01
	CLR_BIT(initVar,UPM1); 
    49b8:	89 81       	ldd	r24, Y+1	; 0x01
    49ba:	8f 7d       	andi	r24, 0xDF	; 223
    49bc:	89 83       	std	Y+1, r24	; 0x01
	// configure stop bits = 1 that indicate end of signal
	CLR_BIT(initVar,USBS);
    49be:	89 81       	ldd	r24, Y+1	; 0x01
    49c0:	87 7f       	andi	r24, 0xF7	; 247
    49c2:	89 83       	std	Y+1, r24	; 0x01
	// configure data bits = 8
	SET_BIT(initVar,UCSZ0);
    49c4:	89 81       	ldd	r24, Y+1	; 0x01
    49c6:	82 60       	ori	r24, 0x02	; 2
    49c8:	89 83       	std	Y+1, r24	; 0x01
	SET_BIT(initVar,UCSZ1);
    49ca:	89 81       	ldd	r24, Y+1	; 0x01
    49cc:	84 60       	ori	r24, 0x04	; 4
    49ce:	89 83       	std	Y+1, r24	; 0x01
	CLR_BIT(UCSRB,UCSZ2);
    49d0:	aa e2       	ldi	r26, 0x2A	; 42
    49d2:	b0 e0       	ldi	r27, 0x00	; 0
    49d4:	ea e2       	ldi	r30, 0x2A	; 42
    49d6:	f0 e0       	ldi	r31, 0x00	; 0
    49d8:	80 81       	ld	r24, Z
    49da:	8b 7f       	andi	r24, 0xFB	; 251
    49dc:	8c 93       	st	X, r24
	// configure no polarity since we are asynchronous
	CLR_BIT(initVar,UCPOL);
    49de:	89 81       	ldd	r24, Y+1	; 0x01
    49e0:	8e 7f       	andi	r24, 0xFE	; 254
    49e2:	89 83       	std	Y+1, r24	; 0x01
	
	UCSRC = initVar; //here i put the var in the req regs // UCSRC = 0b100000110; i could have write this instead of creating the var methos
    49e4:	e0 e4       	ldi	r30, 0x40	; 64
    49e6:	f0 e0       	ldi	r31, 0x00	; 0
    49e8:	89 81       	ldd	r24, Y+1	; 0x01
    49ea:	80 83       	st	Z, r24

	//Enable Tx
	SET_BIT(UCSRB,TXEN);
    49ec:	aa e2       	ldi	r26, 0x2A	; 42
    49ee:	b0 e0       	ldi	r27, 0x00	; 0
    49f0:	ea e2       	ldi	r30, 0x2A	; 42
    49f2:	f0 e0       	ldi	r31, 0x00	; 0
    49f4:	80 81       	ld	r24, Z
    49f6:	88 60       	ori	r24, 0x08	; 8
    49f8:	8c 93       	st	X, r24
	
	//Enable Rx
	SET_BIT(UCSRB,RXEN);
    49fa:	aa e2       	ldi	r26, 0x2A	; 42
    49fc:	b0 e0       	ldi	r27, 0x00	; 0
    49fe:	ea e2       	ldi	r30, 0x2A	; 42
    4a00:	f0 e0       	ldi	r31, 0x00	; 0
    4a02:	80 81       	ld	r24, Z
    4a04:	80 61       	ori	r24, 0x10	; 16
    4a06:	8c 93       	st	X, r24
}
    4a08:	0f 90       	pop	r0
    4a0a:	cf 91       	pop	r28
    4a0c:	df 91       	pop	r29
    4a0e:	08 95       	ret

00004a10 <UART_TxChar>:


void UART_TxChar(u8 TxData)
{
    4a10:	df 93       	push	r29
    4a12:	cf 93       	push	r28
    4a14:	0f 92       	push	r0
    4a16:	cd b7       	in	r28, 0x3d	; 61
    4a18:	de b7       	in	r29, 0x3e	; 62
    4a1a:	89 83       	std	Y+1, r24	; 0x01
	UDR = TxData;
    4a1c:	ec e2       	ldi	r30, 0x2C	; 44
    4a1e:	f0 e0       	ldi	r31, 0x00	; 0
    4a20:	89 81       	ldd	r24, Y+1	; 0x01
    4a22:	80 83       	st	Z, r24
	
	// Busy Wait on Data Register empty flag
	while(0 == GET_BIT(UCSRA,UDRE));
    4a24:	eb e2       	ldi	r30, 0x2B	; 43
    4a26:	f0 e0       	ldi	r31, 0x00	; 0
    4a28:	80 81       	ld	r24, Z
    4a2a:	82 95       	swap	r24
    4a2c:	86 95       	lsr	r24
    4a2e:	87 70       	andi	r24, 0x07	; 7
    4a30:	88 2f       	mov	r24, r24
    4a32:	90 e0       	ldi	r25, 0x00	; 0
    4a34:	81 70       	andi	r24, 0x01	; 1
    4a36:	90 70       	andi	r25, 0x00	; 0
    4a38:	00 97       	sbiw	r24, 0x00	; 0
    4a3a:	a1 f3       	breq	.-24     	; 0x4a24 <UART_TxChar+0x14>
}
    4a3c:	0f 90       	pop	r0
    4a3e:	cf 91       	pop	r28
    4a40:	df 91       	pop	r29
    4a42:	08 95       	ret

00004a44 <UART_RxChar>:


void UART_RxChar(u8* RxData)
{
    4a44:	df 93       	push	r29
    4a46:	cf 93       	push	r28
    4a48:	00 d0       	rcall	.+0      	; 0x4a4a <UART_RxChar+0x6>
    4a4a:	cd b7       	in	r28, 0x3d	; 61
    4a4c:	de b7       	in	r29, 0x3e	; 62
    4a4e:	9a 83       	std	Y+2, r25	; 0x02
    4a50:	89 83       	std	Y+1, r24	; 0x01
	if(RxData != NULL)
    4a52:	89 81       	ldd	r24, Y+1	; 0x01
    4a54:	9a 81       	ldd	r25, Y+2	; 0x02
    4a56:	00 97       	sbiw	r24, 0x00	; 0
    4a58:	59 f0       	breq	.+22     	; 0x4a70 <UART_RxChar+0x2c>
	{
		// Busy Wait on Receive Compelete flag
		while(0 == GET_BIT(UCSRA,RXC));
    4a5a:	eb e2       	ldi	r30, 0x2B	; 43
    4a5c:	f0 e0       	ldi	r31, 0x00	; 0
    4a5e:	80 81       	ld	r24, Z
    4a60:	88 23       	and	r24, r24
    4a62:	dc f7       	brge	.-10     	; 0x4a5a <UART_RxChar+0x16>
		
		*RxData = UDR;
    4a64:	ec e2       	ldi	r30, 0x2C	; 44
    4a66:	f0 e0       	ldi	r31, 0x00	; 0
    4a68:	80 81       	ld	r24, Z
    4a6a:	e9 81       	ldd	r30, Y+1	; 0x01
    4a6c:	fa 81       	ldd	r31, Y+2	; 0x02
    4a6e:	80 83       	st	Z, r24
	}
}
    4a70:	0f 90       	pop	r0
    4a72:	0f 90       	pop	r0
    4a74:	cf 91       	pop	r28
    4a76:	df 91       	pop	r29
    4a78:	08 95       	ret

00004a7a <UART_sendString>:


void UART_sendString(u8* TxString)
{
    4a7a:	df 93       	push	r29
    4a7c:	cf 93       	push	r28
    4a7e:	00 d0       	rcall	.+0      	; 0x4a80 <UART_sendString+0x6>
    4a80:	0f 92       	push	r0
    4a82:	cd b7       	in	r28, 0x3d	; 61
    4a84:	de b7       	in	r29, 0x3e	; 62
    4a86:	9b 83       	std	Y+3, r25	; 0x03
    4a88:	8a 83       	std	Y+2, r24	; 0x02
	if(TxString != NULL)
    4a8a:	8a 81       	ldd	r24, Y+2	; 0x02
    4a8c:	9b 81       	ldd	r25, Y+3	; 0x03
    4a8e:	00 97       	sbiw	r24, 0x00	; 0
    4a90:	d9 f0       	breq	.+54     	; 0x4ac8 <UART_sendString+0x4e>
	{
		u8 charCounter=0;
    4a92:	19 82       	std	Y+1, r1	; 0x01
    4a94:	0e c0       	rjmp	.+28     	; 0x4ab2 <UART_sendString+0x38>
		while(TxString[charCounter] != '\0')
		{
			UART_TxChar(TxString[charCounter]);
    4a96:	89 81       	ldd	r24, Y+1	; 0x01
    4a98:	28 2f       	mov	r18, r24
    4a9a:	30 e0       	ldi	r19, 0x00	; 0
    4a9c:	8a 81       	ldd	r24, Y+2	; 0x02
    4a9e:	9b 81       	ldd	r25, Y+3	; 0x03
    4aa0:	fc 01       	movw	r30, r24
    4aa2:	e2 0f       	add	r30, r18
    4aa4:	f3 1f       	adc	r31, r19
    4aa6:	80 81       	ld	r24, Z
    4aa8:	0e 94 08 25 	call	0x4a10	; 0x4a10 <UART_TxChar>
			charCounter++;
    4aac:	89 81       	ldd	r24, Y+1	; 0x01
    4aae:	8f 5f       	subi	r24, 0xFF	; 255
    4ab0:	89 83       	std	Y+1, r24	; 0x01
void UART_sendString(u8* TxString)
{
	if(TxString != NULL)
	{
		u8 charCounter=0;
		while(TxString[charCounter] != '\0')
    4ab2:	89 81       	ldd	r24, Y+1	; 0x01
    4ab4:	28 2f       	mov	r18, r24
    4ab6:	30 e0       	ldi	r19, 0x00	; 0
    4ab8:	8a 81       	ldd	r24, Y+2	; 0x02
    4aba:	9b 81       	ldd	r25, Y+3	; 0x03
    4abc:	fc 01       	movw	r30, r24
    4abe:	e2 0f       	add	r30, r18
    4ac0:	f3 1f       	adc	r31, r19
    4ac2:	80 81       	ld	r24, Z
    4ac4:	88 23       	and	r24, r24
    4ac6:	39 f7       	brne	.-50     	; 0x4a96 <UART_sendString+0x1c>
		{
			UART_TxChar(TxString[charCounter]);
			charCounter++;
		}
	}
}
    4ac8:	0f 90       	pop	r0
    4aca:	0f 90       	pop	r0
    4acc:	0f 90       	pop	r0
    4ace:	cf 91       	pop	r28
    4ad0:	df 91       	pop	r29
    4ad2:	08 95       	ret

00004ad4 <main>:
#include "BIT_MATH.h"
#include "STD_TYPES.h"
#include "DIO_interface.h"
#include "UART_interface.h"
#include "LCD_interface.h"
int main() {
    4ad4:	df 93       	push	r29
    4ad6:	cf 93       	push	r28
    4ad8:	0f 92       	push	r0
    4ada:	cd b7       	in	r28, 0x3d	; 61
    4adc:	de b7       	in	r29, 0x3e	; 62

	 DIO_setPinDirection(DIO_PORTD, DIO_PIN1, DIO_PIN_OUTPUT); //SET TX PIN AS OUTPUT
    4ade:	83 e0       	ldi	r24, 0x03	; 3
    4ae0:	61 e0       	ldi	r22, 0x01	; 1
    4ae2:	41 e0       	ldi	r20, 0x01	; 1
    4ae4:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
	 DIO_setPinDirection(DIO_PORTD, DIO_PIN0, DIO_PIN_INPUT); // SET RX PIN AS INPUT
    4ae8:	83 e0       	ldi	r24, 0x03	; 3
    4aea:	60 e0       	ldi	r22, 0x00	; 0
    4aec:	40 e0       	ldi	r20, 0x00	; 0
    4aee:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <DIO_setPinDirection>
     UART_init();
    4af2:	0e 94 c2 24 	call	0x4984	; 0x4984 <UART_init>
     LCD_init();
    4af6:	0e 94 bc 1b 	call	0x3778	; 0x3778 <LCD_init>
     u8 DATA = 0xff ;
    4afa:	8f ef       	ldi	r24, 0xFF	; 255
    4afc:	89 83       	std	Y+1, r24	; 0x01
    	UART_TxChar('D');
        _delay_ms(500);
      */

        do {
        UART_RxChar(&DATA);
    4afe:	ce 01       	movw	r24, r28
    4b00:	01 96       	adiw	r24, 0x01	; 1
    4b02:	0e 94 22 25 	call	0x4a44	; 0x4a44 <UART_RxChar>
        }
        while(DATA == 0xff);
    4b06:	89 81       	ldd	r24, Y+1	; 0x01
    4b08:	8f 3f       	cpi	r24, 0xFF	; 255
    4b0a:	c9 f3       	breq	.-14     	; 0x4afe <main+0x2a>


        LCD_sendChar(DATA);
    4b0c:	89 81       	ldd	r24, Y+1	; 0x01
    4b0e:	0e 94 8a 20 	call	0x4114	; 0x4114 <LCD_sendChar>
    4b12:	f5 cf       	rjmp	.-22     	; 0x4afe <main+0x2a>

00004b14 <__mulsi3>:
    4b14:	62 9f       	mul	r22, r18
    4b16:	d0 01       	movw	r26, r0
    4b18:	73 9f       	mul	r23, r19
    4b1a:	f0 01       	movw	r30, r0
    4b1c:	82 9f       	mul	r24, r18
    4b1e:	e0 0d       	add	r30, r0
    4b20:	f1 1d       	adc	r31, r1
    4b22:	64 9f       	mul	r22, r20
    4b24:	e0 0d       	add	r30, r0
    4b26:	f1 1d       	adc	r31, r1
    4b28:	92 9f       	mul	r25, r18
    4b2a:	f0 0d       	add	r31, r0
    4b2c:	83 9f       	mul	r24, r19
    4b2e:	f0 0d       	add	r31, r0
    4b30:	74 9f       	mul	r23, r20
    4b32:	f0 0d       	add	r31, r0
    4b34:	65 9f       	mul	r22, r21
    4b36:	f0 0d       	add	r31, r0
    4b38:	99 27       	eor	r25, r25
    4b3a:	72 9f       	mul	r23, r18
    4b3c:	b0 0d       	add	r27, r0
    4b3e:	e1 1d       	adc	r30, r1
    4b40:	f9 1f       	adc	r31, r25
    4b42:	63 9f       	mul	r22, r19
    4b44:	b0 0d       	add	r27, r0
    4b46:	e1 1d       	adc	r30, r1
    4b48:	f9 1f       	adc	r31, r25
    4b4a:	bd 01       	movw	r22, r26
    4b4c:	cf 01       	movw	r24, r30
    4b4e:	11 24       	eor	r1, r1
    4b50:	08 95       	ret

00004b52 <__udivmodsi4>:
    4b52:	a1 e2       	ldi	r26, 0x21	; 33
    4b54:	1a 2e       	mov	r1, r26
    4b56:	aa 1b       	sub	r26, r26
    4b58:	bb 1b       	sub	r27, r27
    4b5a:	fd 01       	movw	r30, r26
    4b5c:	0d c0       	rjmp	.+26     	; 0x4b78 <__udivmodsi4_ep>

00004b5e <__udivmodsi4_loop>:
    4b5e:	aa 1f       	adc	r26, r26
    4b60:	bb 1f       	adc	r27, r27
    4b62:	ee 1f       	adc	r30, r30
    4b64:	ff 1f       	adc	r31, r31
    4b66:	a2 17       	cp	r26, r18
    4b68:	b3 07       	cpc	r27, r19
    4b6a:	e4 07       	cpc	r30, r20
    4b6c:	f5 07       	cpc	r31, r21
    4b6e:	20 f0       	brcs	.+8      	; 0x4b78 <__udivmodsi4_ep>
    4b70:	a2 1b       	sub	r26, r18
    4b72:	b3 0b       	sbc	r27, r19
    4b74:	e4 0b       	sbc	r30, r20
    4b76:	f5 0b       	sbc	r31, r21

00004b78 <__udivmodsi4_ep>:
    4b78:	66 1f       	adc	r22, r22
    4b7a:	77 1f       	adc	r23, r23
    4b7c:	88 1f       	adc	r24, r24
    4b7e:	99 1f       	adc	r25, r25
    4b80:	1a 94       	dec	r1
    4b82:	69 f7       	brne	.-38     	; 0x4b5e <__udivmodsi4_loop>
    4b84:	60 95       	com	r22
    4b86:	70 95       	com	r23
    4b88:	80 95       	com	r24
    4b8a:	90 95       	com	r25
    4b8c:	9b 01       	movw	r18, r22
    4b8e:	ac 01       	movw	r20, r24
    4b90:	bd 01       	movw	r22, r26
    4b92:	cf 01       	movw	r24, r30
    4b94:	08 95       	ret

00004b96 <__prologue_saves__>:
    4b96:	2f 92       	push	r2
    4b98:	3f 92       	push	r3
    4b9a:	4f 92       	push	r4
    4b9c:	5f 92       	push	r5
    4b9e:	6f 92       	push	r6
    4ba0:	7f 92       	push	r7
    4ba2:	8f 92       	push	r8
    4ba4:	9f 92       	push	r9
    4ba6:	af 92       	push	r10
    4ba8:	bf 92       	push	r11
    4baa:	cf 92       	push	r12
    4bac:	df 92       	push	r13
    4bae:	ef 92       	push	r14
    4bb0:	ff 92       	push	r15
    4bb2:	0f 93       	push	r16
    4bb4:	1f 93       	push	r17
    4bb6:	cf 93       	push	r28
    4bb8:	df 93       	push	r29
    4bba:	cd b7       	in	r28, 0x3d	; 61
    4bbc:	de b7       	in	r29, 0x3e	; 62
    4bbe:	ca 1b       	sub	r28, r26
    4bc0:	db 0b       	sbc	r29, r27
    4bc2:	0f b6       	in	r0, 0x3f	; 63
    4bc4:	f8 94       	cli
    4bc6:	de bf       	out	0x3e, r29	; 62
    4bc8:	0f be       	out	0x3f, r0	; 63
    4bca:	cd bf       	out	0x3d, r28	; 61
    4bcc:	09 94       	ijmp

00004bce <__epilogue_restores__>:
    4bce:	2a 88       	ldd	r2, Y+18	; 0x12
    4bd0:	39 88       	ldd	r3, Y+17	; 0x11
    4bd2:	48 88       	ldd	r4, Y+16	; 0x10
    4bd4:	5f 84       	ldd	r5, Y+15	; 0x0f
    4bd6:	6e 84       	ldd	r6, Y+14	; 0x0e
    4bd8:	7d 84       	ldd	r7, Y+13	; 0x0d
    4bda:	8c 84       	ldd	r8, Y+12	; 0x0c
    4bdc:	9b 84       	ldd	r9, Y+11	; 0x0b
    4bde:	aa 84       	ldd	r10, Y+10	; 0x0a
    4be0:	b9 84       	ldd	r11, Y+9	; 0x09
    4be2:	c8 84       	ldd	r12, Y+8	; 0x08
    4be4:	df 80       	ldd	r13, Y+7	; 0x07
    4be6:	ee 80       	ldd	r14, Y+6	; 0x06
    4be8:	fd 80       	ldd	r15, Y+5	; 0x05
    4bea:	0c 81       	ldd	r16, Y+4	; 0x04
    4bec:	1b 81       	ldd	r17, Y+3	; 0x03
    4bee:	aa 81       	ldd	r26, Y+2	; 0x02
    4bf0:	b9 81       	ldd	r27, Y+1	; 0x01
    4bf2:	ce 0f       	add	r28, r30
    4bf4:	d1 1d       	adc	r29, r1
    4bf6:	0f b6       	in	r0, 0x3f	; 63
    4bf8:	f8 94       	cli
    4bfa:	de bf       	out	0x3e, r29	; 62
    4bfc:	0f be       	out	0x3f, r0	; 63
    4bfe:	cd bf       	out	0x3d, r28	; 61
    4c00:	ed 01       	movw	r28, r26
    4c02:	08 95       	ret

00004c04 <_exit>:
    4c04:	f8 94       	cli

00004c06 <__stop_program>:
    4c06:	ff cf       	rjmp	.-2      	; 0x4c06 <__stop_program>
