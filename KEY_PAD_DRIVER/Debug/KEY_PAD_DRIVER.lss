
KEY_PAD_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ad8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000ad8  00000b4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000a50  00000000  00000000  00000b5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000004d0  00000000  00000000  000015ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <main>
  7a:	0c 94 6a 05 	jmp	0xad4	; 0xad4 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_setPinDirection>:
/* MCAL */
#include "DIO_interface.h"
#include "DIO_private.h"

void DIO_setPinDirection(u8 PortId, u8 PinId, u8 PinDirection)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <DIO_setPinDirection+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <DIO_setPinDirection+0x8>
  8a:	0f 92       	push	r0
  8c:	cd b7       	in	r28, 0x3d	; 61
  8e:	de b7       	in	r29, 0x3e	; 62
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && ((PinDirection==DIO_PIN_OUTPUT)||(PinDirection==DIO_PIN_INPUT)))
  96:	89 81       	ldd	r24, Y+1	; 0x01
  98:	84 30       	cpi	r24, 0x04	; 4
  9a:	08 f0       	brcs	.+2      	; 0x9e <DIO_setPinDirection+0x1c>
  9c:	dc c0       	rjmp	.+440    	; 0x256 <DIO_setPinDirection+0x1d4>
  9e:	8a 81       	ldd	r24, Y+2	; 0x02
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	08 f0       	brcs	.+2      	; 0xa6 <DIO_setPinDirection+0x24>
  a4:	d8 c0       	rjmp	.+432    	; 0x256 <DIO_setPinDirection+0x1d4>
  a6:	8b 81       	ldd	r24, Y+3	; 0x03
  a8:	81 30       	cpi	r24, 0x01	; 1
  aa:	21 f0       	breq	.+8      	; 0xb4 <DIO_setPinDirection+0x32>
  ac:	8b 81       	ldd	r24, Y+3	; 0x03
  ae:	88 23       	and	r24, r24
  b0:	09 f0       	breq	.+2      	; 0xb4 <DIO_setPinDirection+0x32>
  b2:	d1 c0       	rjmp	.+418    	; 0x256 <DIO_setPinDirection+0x1d4>
	{
		switch(PortId)
  b4:	89 81       	ldd	r24, Y+1	; 0x01
  b6:	28 2f       	mov	r18, r24
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	3d 83       	std	Y+5, r19	; 0x05
  bc:	2c 83       	std	Y+4, r18	; 0x04
  be:	8c 81       	ldd	r24, Y+4	; 0x04
  c0:	9d 81       	ldd	r25, Y+5	; 0x05
  c2:	81 30       	cpi	r24, 0x01	; 1
  c4:	91 05       	cpc	r25, r1
  c6:	09 f4       	brne	.+2      	; 0xca <DIO_setPinDirection+0x48>
  c8:	43 c0       	rjmp	.+134    	; 0x150 <DIO_setPinDirection+0xce>
  ca:	2c 81       	ldd	r18, Y+4	; 0x04
  cc:	3d 81       	ldd	r19, Y+5	; 0x05
  ce:	22 30       	cpi	r18, 0x02	; 2
  d0:	31 05       	cpc	r19, r1
  d2:	2c f4       	brge	.+10     	; 0xde <DIO_setPinDirection+0x5c>
  d4:	8c 81       	ldd	r24, Y+4	; 0x04
  d6:	9d 81       	ldd	r25, Y+5	; 0x05
  d8:	00 97       	sbiw	r24, 0x00	; 0
  da:	71 f0       	breq	.+28     	; 0xf8 <DIO_setPinDirection+0x76>
  dc:	bc c0       	rjmp	.+376    	; 0x256 <DIO_setPinDirection+0x1d4>
  de:	2c 81       	ldd	r18, Y+4	; 0x04
  e0:	3d 81       	ldd	r19, Y+5	; 0x05
  e2:	22 30       	cpi	r18, 0x02	; 2
  e4:	31 05       	cpc	r19, r1
  e6:	09 f4       	brne	.+2      	; 0xea <DIO_setPinDirection+0x68>
  e8:	5f c0       	rjmp	.+190    	; 0x1a8 <DIO_setPinDirection+0x126>
  ea:	8c 81       	ldd	r24, Y+4	; 0x04
  ec:	9d 81       	ldd	r25, Y+5	; 0x05
  ee:	83 30       	cpi	r24, 0x03	; 3
  f0:	91 05       	cpc	r25, r1
  f2:	09 f4       	brne	.+2      	; 0xf6 <DIO_setPinDirection+0x74>
  f4:	85 c0       	rjmp	.+266    	; 0x200 <DIO_setPinDirection+0x17e>
  f6:	af c0       	rjmp	.+350    	; 0x256 <DIO_setPinDirection+0x1d4>
	    {
	    	case DIO_PORTA: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
  f8:	8b 81       	ldd	r24, Y+3	; 0x03
  fa:	81 30       	cpi	r24, 0x01	; 1
  fc:	a1 f4       	brne	.+40     	; 0x126 <DIO_setPinDirection+0xa4>
	    	{
	    		SET_BIT(DDRA,PinId);
  fe:	aa e3       	ldi	r26, 0x3A	; 58
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	ea e3       	ldi	r30, 0x3A	; 58
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	48 2f       	mov	r20, r24
 10a:	8a 81       	ldd	r24, Y+2	; 0x02
 10c:	28 2f       	mov	r18, r24
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 2e       	mov	r0, r18
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_setPinDirection+0x9a>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	0a 94       	dec	r0
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_setPinDirection+0x96>
 120:	84 2b       	or	r24, r20
 122:	8c 93       	st	X, r24
 124:	98 c0       	rjmp	.+304    	; 0x256 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRA,PinId);
 126:	aa e3       	ldi	r26, 0x3A	; 58
 128:	b0 e0       	ldi	r27, 0x00	; 0
 12a:	ea e3       	ldi	r30, 0x3A	; 58
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	48 2f       	mov	r20, r24
 132:	8a 81       	ldd	r24, Y+2	; 0x02
 134:	28 2f       	mov	r18, r24
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 2e       	mov	r0, r18
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_setPinDirection+0xc2>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	0a 94       	dec	r0
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_setPinDirection+0xbe>
 148:	80 95       	com	r24
 14a:	84 23       	and	r24, r20
 14c:	8c 93       	st	X, r24
 14e:	83 c0       	rjmp	.+262    	; 0x256 <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTB: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
 150:	8b 81       	ldd	r24, Y+3	; 0x03
 152:	81 30       	cpi	r24, 0x01	; 1
 154:	a1 f4       	brne	.+40     	; 0x17e <DIO_setPinDirection+0xfc>
	    	{
	    		SET_BIT(DDRB,PinId);
 156:	a7 e3       	ldi	r26, 0x37	; 55
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	e7 e3       	ldi	r30, 0x37	; 55
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	48 2f       	mov	r20, r24
 162:	8a 81       	ldd	r24, Y+2	; 0x02
 164:	28 2f       	mov	r18, r24
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 2e       	mov	r0, r18
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_setPinDirection+0xf2>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_setPinDirection+0xee>
 178:	84 2b       	or	r24, r20
 17a:	8c 93       	st	X, r24
 17c:	6c c0       	rjmp	.+216    	; 0x256 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRB,PinId);
 17e:	a7 e3       	ldi	r26, 0x37	; 55
 180:	b0 e0       	ldi	r27, 0x00	; 0
 182:	e7 e3       	ldi	r30, 0x37	; 55
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	48 2f       	mov	r20, r24
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	28 2f       	mov	r18, r24
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 2e       	mov	r0, r18
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_setPinDirection+0x11a>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	0a 94       	dec	r0
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_setPinDirection+0x116>
 1a0:	80 95       	com	r24
 1a2:	84 23       	and	r24, r20
 1a4:	8c 93       	st	X, r24
 1a6:	57 c0       	rjmp	.+174    	; 0x256 <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTC: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
 1a8:	8b 81       	ldd	r24, Y+3	; 0x03
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	a1 f4       	brne	.+40     	; 0x1d6 <DIO_setPinDirection+0x154>
	    	{
	    		SET_BIT(DDRC,PinId);
 1ae:	a4 e3       	ldi	r26, 0x34	; 52
 1b0:	b0 e0       	ldi	r27, 0x00	; 0
 1b2:	e4 e3       	ldi	r30, 0x34	; 52
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	48 2f       	mov	r20, r24
 1ba:	8a 81       	ldd	r24, Y+2	; 0x02
 1bc:	28 2f       	mov	r18, r24
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	02 2e       	mov	r0, r18
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_setPinDirection+0x14a>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	0a 94       	dec	r0
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_setPinDirection+0x146>
 1d0:	84 2b       	or	r24, r20
 1d2:	8c 93       	st	X, r24
 1d4:	40 c0       	rjmp	.+128    	; 0x256 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRC,PinId);
 1d6:	a4 e3       	ldi	r26, 0x34	; 52
 1d8:	b0 e0       	ldi	r27, 0x00	; 0
 1da:	e4 e3       	ldi	r30, 0x34	; 52
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	48 2f       	mov	r20, r24
 1e2:	8a 81       	ldd	r24, Y+2	; 0x02
 1e4:	28 2f       	mov	r18, r24
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 2e       	mov	r0, r18
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_setPinDirection+0x172>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	0a 94       	dec	r0
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_setPinDirection+0x16e>
 1f8:	80 95       	com	r24
 1fa:	84 23       	and	r24, r20
 1fc:	8c 93       	st	X, r24
 1fe:	2b c0       	rjmp	.+86     	; 0x256 <DIO_setPinDirection+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTD: 
	    	if(PinDirection == DIO_PIN_OUTPUT)
 200:	8b 81       	ldd	r24, Y+3	; 0x03
 202:	81 30       	cpi	r24, 0x01	; 1
 204:	a1 f4       	brne	.+40     	; 0x22e <DIO_setPinDirection+0x1ac>
	    	{
	    		SET_BIT(DDRD,PinId);
 206:	a1 e3       	ldi	r26, 0x31	; 49
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	e1 e3       	ldi	r30, 0x31	; 49
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	48 2f       	mov	r20, r24
 212:	8a 81       	ldd	r24, Y+2	; 0x02
 214:	28 2f       	mov	r18, r24
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 2e       	mov	r0, r18
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_setPinDirection+0x1a2>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	0a 94       	dec	r0
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_setPinDirection+0x19e>
 228:	84 2b       	or	r24, r20
 22a:	8c 93       	st	X, r24
 22c:	14 c0       	rjmp	.+40     	; 0x256 <DIO_setPinDirection+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(DDRD,PinId);
 22e:	a1 e3       	ldi	r26, 0x31	; 49
 230:	b0 e0       	ldi	r27, 0x00	; 0
 232:	e1 e3       	ldi	r30, 0x31	; 49
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	80 81       	ld	r24, Z
 238:	48 2f       	mov	r20, r24
 23a:	8a 81       	ldd	r24, Y+2	; 0x02
 23c:	28 2f       	mov	r18, r24
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	02 2e       	mov	r0, r18
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_setPinDirection+0x1ca>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	0a 94       	dec	r0
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_setPinDirection+0x1c6>
 250:	80 95       	com	r24
 252:	84 23       	and	r24, r20
 254:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
 25a:	0f 90       	pop	r0
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	cf 91       	pop	r28
 262:	df 91       	pop	r29
 264:	08 95       	ret

00000266 <DIO_setPinValue>:


void DIO_setPinValue(u8 PortId, u8 PinId, u8 PinValue)
{
 266:	df 93       	push	r29
 268:	cf 93       	push	r28
 26a:	00 d0       	rcall	.+0      	; 0x26c <DIO_setPinValue+0x6>
 26c:	00 d0       	rcall	.+0      	; 0x26e <DIO_setPinValue+0x8>
 26e:	0f 92       	push	r0
 270:	cd b7       	in	r28, 0x3d	; 61
 272:	de b7       	in	r29, 0x3e	; 62
 274:	89 83       	std	Y+1, r24	; 0x01
 276:	6a 83       	std	Y+2, r22	; 0x02
 278:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && ((PinValue==DIO_PIN_HIGH)||(PinValue==DIO_PIN_LOW)))
 27a:	89 81       	ldd	r24, Y+1	; 0x01
 27c:	84 30       	cpi	r24, 0x04	; 4
 27e:	08 f0       	brcs	.+2      	; 0x282 <DIO_setPinValue+0x1c>
 280:	dc c0       	rjmp	.+440    	; 0x43a <DIO_setPinValue+0x1d4>
 282:	8a 81       	ldd	r24, Y+2	; 0x02
 284:	88 30       	cpi	r24, 0x08	; 8
 286:	08 f0       	brcs	.+2      	; 0x28a <DIO_setPinValue+0x24>
 288:	d8 c0       	rjmp	.+432    	; 0x43a <DIO_setPinValue+0x1d4>
 28a:	8b 81       	ldd	r24, Y+3	; 0x03
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	21 f0       	breq	.+8      	; 0x298 <DIO_setPinValue+0x32>
 290:	8b 81       	ldd	r24, Y+3	; 0x03
 292:	88 23       	and	r24, r24
 294:	09 f0       	breq	.+2      	; 0x298 <DIO_setPinValue+0x32>
 296:	d1 c0       	rjmp	.+418    	; 0x43a <DIO_setPinValue+0x1d4>
	{
		switch(PortId)
 298:	89 81       	ldd	r24, Y+1	; 0x01
 29a:	28 2f       	mov	r18, r24
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	3d 83       	std	Y+5, r19	; 0x05
 2a0:	2c 83       	std	Y+4, r18	; 0x04
 2a2:	8c 81       	ldd	r24, Y+4	; 0x04
 2a4:	9d 81       	ldd	r25, Y+5	; 0x05
 2a6:	81 30       	cpi	r24, 0x01	; 1
 2a8:	91 05       	cpc	r25, r1
 2aa:	09 f4       	brne	.+2      	; 0x2ae <DIO_setPinValue+0x48>
 2ac:	43 c0       	rjmp	.+134    	; 0x334 <DIO_setPinValue+0xce>
 2ae:	2c 81       	ldd	r18, Y+4	; 0x04
 2b0:	3d 81       	ldd	r19, Y+5	; 0x05
 2b2:	22 30       	cpi	r18, 0x02	; 2
 2b4:	31 05       	cpc	r19, r1
 2b6:	2c f4       	brge	.+10     	; 0x2c2 <DIO_setPinValue+0x5c>
 2b8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ba:	9d 81       	ldd	r25, Y+5	; 0x05
 2bc:	00 97       	sbiw	r24, 0x00	; 0
 2be:	71 f0       	breq	.+28     	; 0x2dc <DIO_setPinValue+0x76>
 2c0:	bc c0       	rjmp	.+376    	; 0x43a <DIO_setPinValue+0x1d4>
 2c2:	2c 81       	ldd	r18, Y+4	; 0x04
 2c4:	3d 81       	ldd	r19, Y+5	; 0x05
 2c6:	22 30       	cpi	r18, 0x02	; 2
 2c8:	31 05       	cpc	r19, r1
 2ca:	09 f4       	brne	.+2      	; 0x2ce <DIO_setPinValue+0x68>
 2cc:	5f c0       	rjmp	.+190    	; 0x38c <DIO_setPinValue+0x126>
 2ce:	8c 81       	ldd	r24, Y+4	; 0x04
 2d0:	9d 81       	ldd	r25, Y+5	; 0x05
 2d2:	83 30       	cpi	r24, 0x03	; 3
 2d4:	91 05       	cpc	r25, r1
 2d6:	09 f4       	brne	.+2      	; 0x2da <DIO_setPinValue+0x74>
 2d8:	85 c0       	rjmp	.+266    	; 0x3e4 <DIO_setPinValue+0x17e>
 2da:	af c0       	rjmp	.+350    	; 0x43a <DIO_setPinValue+0x1d4>
	    {
	    	case DIO_PORTA:
	    	if(DIO_PIN_HIGH == PinValue)
 2dc:	8b 81       	ldd	r24, Y+3	; 0x03
 2de:	81 30       	cpi	r24, 0x01	; 1
 2e0:	a1 f4       	brne	.+40     	; 0x30a <DIO_setPinValue+0xa4>
	    	{
	    		SET_BIT(PORTA,PinId);
 2e2:	ab e3       	ldi	r26, 0x3B	; 59
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	eb e3       	ldi	r30, 0x3B	; 59
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	48 2f       	mov	r20, r24
 2ee:	8a 81       	ldd	r24, Y+2	; 0x02
 2f0:	28 2f       	mov	r18, r24
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 2e       	mov	r0, r18
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <DIO_setPinValue+0x9a>
 2fc:	88 0f       	add	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	0a 94       	dec	r0
 302:	e2 f7       	brpl	.-8      	; 0x2fc <DIO_setPinValue+0x96>
 304:	84 2b       	or	r24, r20
 306:	8c 93       	st	X, r24
 308:	98 c0       	rjmp	.+304    	; 0x43a <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTA,PinId);
 30a:	ab e3       	ldi	r26, 0x3B	; 59
 30c:	b0 e0       	ldi	r27, 0x00	; 0
 30e:	eb e3       	ldi	r30, 0x3B	; 59
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	80 81       	ld	r24, Z
 314:	48 2f       	mov	r20, r24
 316:	8a 81       	ldd	r24, Y+2	; 0x02
 318:	28 2f       	mov	r18, r24
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	02 2e       	mov	r0, r18
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_setPinValue+0xc2>
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	0a 94       	dec	r0
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_setPinValue+0xbe>
 32c:	80 95       	com	r24
 32e:	84 23       	and	r24, r20
 330:	8c 93       	st	X, r24
 332:	83 c0       	rjmp	.+262    	; 0x43a <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTB:
	    	if(DIO_PIN_HIGH == PinValue)
 334:	8b 81       	ldd	r24, Y+3	; 0x03
 336:	81 30       	cpi	r24, 0x01	; 1
 338:	a1 f4       	brne	.+40     	; 0x362 <DIO_setPinValue+0xfc>
	    	{
	    		SET_BIT(PORTB,PinId);
 33a:	a8 e3       	ldi	r26, 0x38	; 56
 33c:	b0 e0       	ldi	r27, 0x00	; 0
 33e:	e8 e3       	ldi	r30, 0x38	; 56
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	80 81       	ld	r24, Z
 344:	48 2f       	mov	r20, r24
 346:	8a 81       	ldd	r24, Y+2	; 0x02
 348:	28 2f       	mov	r18, r24
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	02 2e       	mov	r0, r18
 352:	02 c0       	rjmp	.+4      	; 0x358 <DIO_setPinValue+0xf2>
 354:	88 0f       	add	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	0a 94       	dec	r0
 35a:	e2 f7       	brpl	.-8      	; 0x354 <DIO_setPinValue+0xee>
 35c:	84 2b       	or	r24, r20
 35e:	8c 93       	st	X, r24
 360:	6c c0       	rjmp	.+216    	; 0x43a <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTB,PinId);
 362:	a8 e3       	ldi	r26, 0x38	; 56
 364:	b0 e0       	ldi	r27, 0x00	; 0
 366:	e8 e3       	ldi	r30, 0x38	; 56
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	80 81       	ld	r24, Z
 36c:	48 2f       	mov	r20, r24
 36e:	8a 81       	ldd	r24, Y+2	; 0x02
 370:	28 2f       	mov	r18, r24
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	02 2e       	mov	r0, r18
 37a:	02 c0       	rjmp	.+4      	; 0x380 <DIO_setPinValue+0x11a>
 37c:	88 0f       	add	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	0a 94       	dec	r0
 382:	e2 f7       	brpl	.-8      	; 0x37c <DIO_setPinValue+0x116>
 384:	80 95       	com	r24
 386:	84 23       	and	r24, r20
 388:	8c 93       	st	X, r24
 38a:	57 c0       	rjmp	.+174    	; 0x43a <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTC:
	    	if(DIO_PIN_HIGH == PinValue)
 38c:	8b 81       	ldd	r24, Y+3	; 0x03
 38e:	81 30       	cpi	r24, 0x01	; 1
 390:	a1 f4       	brne	.+40     	; 0x3ba <DIO_setPinValue+0x154>
	    	{
	    		SET_BIT(PORTC,PinId);
 392:	a5 e3       	ldi	r26, 0x35	; 53
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	e5 e3       	ldi	r30, 0x35	; 53
 398:	f0 e0       	ldi	r31, 0x00	; 0
 39a:	80 81       	ld	r24, Z
 39c:	48 2f       	mov	r20, r24
 39e:	8a 81       	ldd	r24, Y+2	; 0x02
 3a0:	28 2f       	mov	r18, r24
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	02 2e       	mov	r0, r18
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <DIO_setPinValue+0x14a>
 3ac:	88 0f       	add	r24, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	0a 94       	dec	r0
 3b2:	e2 f7       	brpl	.-8      	; 0x3ac <DIO_setPinValue+0x146>
 3b4:	84 2b       	or	r24, r20
 3b6:	8c 93       	st	X, r24
 3b8:	40 c0       	rjmp	.+128    	; 0x43a <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTC,PinId);
 3ba:	a5 e3       	ldi	r26, 0x35	; 53
 3bc:	b0 e0       	ldi	r27, 0x00	; 0
 3be:	e5 e3       	ldi	r30, 0x35	; 53
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	80 81       	ld	r24, Z
 3c4:	48 2f       	mov	r20, r24
 3c6:	8a 81       	ldd	r24, Y+2	; 0x02
 3c8:	28 2f       	mov	r18, r24
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	02 2e       	mov	r0, r18
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_setPinValue+0x172>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	0a 94       	dec	r0
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_setPinValue+0x16e>
 3dc:	80 95       	com	r24
 3de:	84 23       	and	r24, r20
 3e0:	8c 93       	st	X, r24
 3e2:	2b c0       	rjmp	.+86     	; 0x43a <DIO_setPinValue+0x1d4>
	    	}
	    	break;
	    	
	    	case DIO_PORTD:
	    	if(DIO_PIN_HIGH == PinValue)
 3e4:	8b 81       	ldd	r24, Y+3	; 0x03
 3e6:	81 30       	cpi	r24, 0x01	; 1
 3e8:	a1 f4       	brne	.+40     	; 0x412 <DIO_setPinValue+0x1ac>
	    	{
	    		SET_BIT(PORTD,PinId);
 3ea:	a2 e3       	ldi	r26, 0x32	; 50
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	e2 e3       	ldi	r30, 0x32	; 50
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	48 2f       	mov	r20, r24
 3f6:	8a 81       	ldd	r24, Y+2	; 0x02
 3f8:	28 2f       	mov	r18, r24
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	02 2e       	mov	r0, r18
 402:	02 c0       	rjmp	.+4      	; 0x408 <DIO_setPinValue+0x1a2>
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	0a 94       	dec	r0
 40a:	e2 f7       	brpl	.-8      	; 0x404 <DIO_setPinValue+0x19e>
 40c:	84 2b       	or	r24, r20
 40e:	8c 93       	st	X, r24
 410:	14 c0       	rjmp	.+40     	; 0x43a <DIO_setPinValue+0x1d4>
	    	}
	    	else
	    	{
	    		CLR_BIT(PORTD,PinId);
 412:	a2 e3       	ldi	r26, 0x32	; 50
 414:	b0 e0       	ldi	r27, 0x00	; 0
 416:	e2 e3       	ldi	r30, 0x32	; 50
 418:	f0 e0       	ldi	r31, 0x00	; 0
 41a:	80 81       	ld	r24, Z
 41c:	48 2f       	mov	r20, r24
 41e:	8a 81       	ldd	r24, Y+2	; 0x02
 420:	28 2f       	mov	r18, r24
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	02 2e       	mov	r0, r18
 42a:	02 c0       	rjmp	.+4      	; 0x430 <DIO_setPinValue+0x1ca>
 42c:	88 0f       	add	r24, r24
 42e:	99 1f       	adc	r25, r25
 430:	0a 94       	dec	r0
 432:	e2 f7       	brpl	.-8      	; 0x42c <DIO_setPinValue+0x1c6>
 434:	80 95       	com	r24
 436:	84 23       	and	r24, r20
 438:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 43a:	0f 90       	pop	r0
 43c:	0f 90       	pop	r0
 43e:	0f 90       	pop	r0
 440:	0f 90       	pop	r0
 442:	0f 90       	pop	r0
 444:	cf 91       	pop	r28
 446:	df 91       	pop	r29
 448:	08 95       	ret

0000044a <DIO_togglePinValue>:


void DIO_togglePinValue(u8 PortId, u8 PinId)
{
 44a:	df 93       	push	r29
 44c:	cf 93       	push	r28
 44e:	00 d0       	rcall	.+0      	; 0x450 <DIO_togglePinValue+0x6>
 450:	00 d0       	rcall	.+0      	; 0x452 <DIO_togglePinValue+0x8>
 452:	cd b7       	in	r28, 0x3d	; 61
 454:	de b7       	in	r29, 0x3e	; 62
 456:	89 83       	std	Y+1, r24	; 0x01
 458:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && (PinId<=7))
 45a:	89 81       	ldd	r24, Y+1	; 0x01
 45c:	84 30       	cpi	r24, 0x04	; 4
 45e:	08 f0       	brcs	.+2      	; 0x462 <DIO_togglePinValue+0x18>
 460:	72 c0       	rjmp	.+228    	; 0x546 <DIO_togglePinValue+0xfc>
 462:	8a 81       	ldd	r24, Y+2	; 0x02
 464:	88 30       	cpi	r24, 0x08	; 8
 466:	08 f0       	brcs	.+2      	; 0x46a <DIO_togglePinValue+0x20>
 468:	6e c0       	rjmp	.+220    	; 0x546 <DIO_togglePinValue+0xfc>
	{
		switch(PortId)
 46a:	89 81       	ldd	r24, Y+1	; 0x01
 46c:	28 2f       	mov	r18, r24
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	3c 83       	std	Y+4, r19	; 0x04
 472:	2b 83       	std	Y+3, r18	; 0x03
 474:	8b 81       	ldd	r24, Y+3	; 0x03
 476:	9c 81       	ldd	r25, Y+4	; 0x04
 478:	81 30       	cpi	r24, 0x01	; 1
 47a:	91 05       	cpc	r25, r1
 47c:	49 f1       	breq	.+82     	; 0x4d0 <DIO_togglePinValue+0x86>
 47e:	2b 81       	ldd	r18, Y+3	; 0x03
 480:	3c 81       	ldd	r19, Y+4	; 0x04
 482:	22 30       	cpi	r18, 0x02	; 2
 484:	31 05       	cpc	r19, r1
 486:	2c f4       	brge	.+10     	; 0x492 <DIO_togglePinValue+0x48>
 488:	8b 81       	ldd	r24, Y+3	; 0x03
 48a:	9c 81       	ldd	r25, Y+4	; 0x04
 48c:	00 97       	sbiw	r24, 0x00	; 0
 48e:	61 f0       	breq	.+24     	; 0x4a8 <DIO_togglePinValue+0x5e>
 490:	5a c0       	rjmp	.+180    	; 0x546 <DIO_togglePinValue+0xfc>
 492:	2b 81       	ldd	r18, Y+3	; 0x03
 494:	3c 81       	ldd	r19, Y+4	; 0x04
 496:	22 30       	cpi	r18, 0x02	; 2
 498:	31 05       	cpc	r19, r1
 49a:	71 f1       	breq	.+92     	; 0x4f8 <DIO_togglePinValue+0xae>
 49c:	8b 81       	ldd	r24, Y+3	; 0x03
 49e:	9c 81       	ldd	r25, Y+4	; 0x04
 4a0:	83 30       	cpi	r24, 0x03	; 3
 4a2:	91 05       	cpc	r25, r1
 4a4:	e9 f1       	breq	.+122    	; 0x520 <DIO_togglePinValue+0xd6>
 4a6:	4f c0       	rjmp	.+158    	; 0x546 <DIO_togglePinValue+0xfc>
		{
			case DIO_PORTA:
			TOG_BIT(PORTA,PinId);
 4a8:	ab e3       	ldi	r26, 0x3B	; 59
 4aa:	b0 e0       	ldi	r27, 0x00	; 0
 4ac:	eb e3       	ldi	r30, 0x3B	; 59
 4ae:	f0 e0       	ldi	r31, 0x00	; 0
 4b0:	80 81       	ld	r24, Z
 4b2:	48 2f       	mov	r20, r24
 4b4:	8a 81       	ldd	r24, Y+2	; 0x02
 4b6:	28 2f       	mov	r18, r24
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	02 2e       	mov	r0, r18
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <DIO_togglePinValue+0x7c>
 4c2:	88 0f       	add	r24, r24
 4c4:	99 1f       	adc	r25, r25
 4c6:	0a 94       	dec	r0
 4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <DIO_togglePinValue+0x78>
 4ca:	84 27       	eor	r24, r20
 4cc:	8c 93       	st	X, r24
 4ce:	3b c0       	rjmp	.+118    	; 0x546 <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTB:
			TOG_BIT(PORTB,PinId);
 4d0:	a8 e3       	ldi	r26, 0x38	; 56
 4d2:	b0 e0       	ldi	r27, 0x00	; 0
 4d4:	e8 e3       	ldi	r30, 0x38	; 56
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	48 2f       	mov	r20, r24
 4dc:	8a 81       	ldd	r24, Y+2	; 0x02
 4de:	28 2f       	mov	r18, r24
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	02 2e       	mov	r0, r18
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <DIO_togglePinValue+0xa4>
 4ea:	88 0f       	add	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	0a 94       	dec	r0
 4f0:	e2 f7       	brpl	.-8      	; 0x4ea <DIO_togglePinValue+0xa0>
 4f2:	84 27       	eor	r24, r20
 4f4:	8c 93       	st	X, r24
 4f6:	27 c0       	rjmp	.+78     	; 0x546 <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTC:
			TOG_BIT(PORTC,PinId);
 4f8:	a5 e3       	ldi	r26, 0x35	; 53
 4fa:	b0 e0       	ldi	r27, 0x00	; 0
 4fc:	e5 e3       	ldi	r30, 0x35	; 53
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	80 81       	ld	r24, Z
 502:	48 2f       	mov	r20, r24
 504:	8a 81       	ldd	r24, Y+2	; 0x02
 506:	28 2f       	mov	r18, r24
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	02 2e       	mov	r0, r18
 510:	02 c0       	rjmp	.+4      	; 0x516 <DIO_togglePinValue+0xcc>
 512:	88 0f       	add	r24, r24
 514:	99 1f       	adc	r25, r25
 516:	0a 94       	dec	r0
 518:	e2 f7       	brpl	.-8      	; 0x512 <DIO_togglePinValue+0xc8>
 51a:	84 27       	eor	r24, r20
 51c:	8c 93       	st	X, r24
 51e:	13 c0       	rjmp	.+38     	; 0x546 <DIO_togglePinValue+0xfc>
			break;
			
			case DIO_PORTD:
			TOG_BIT(PORTD,PinId);
 520:	a2 e3       	ldi	r26, 0x32	; 50
 522:	b0 e0       	ldi	r27, 0x00	; 0
 524:	e2 e3       	ldi	r30, 0x32	; 50
 526:	f0 e0       	ldi	r31, 0x00	; 0
 528:	80 81       	ld	r24, Z
 52a:	48 2f       	mov	r20, r24
 52c:	8a 81       	ldd	r24, Y+2	; 0x02
 52e:	28 2f       	mov	r18, r24
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	02 2e       	mov	r0, r18
 538:	02 c0       	rjmp	.+4      	; 0x53e <DIO_togglePinValue+0xf4>
 53a:	88 0f       	add	r24, r24
 53c:	99 1f       	adc	r25, r25
 53e:	0a 94       	dec	r0
 540:	e2 f7       	brpl	.-8      	; 0x53a <DIO_togglePinValue+0xf0>
 542:	84 27       	eor	r24, r20
 544:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 546:	0f 90       	pop	r0
 548:	0f 90       	pop	r0
 54a:	0f 90       	pop	r0
 54c:	0f 90       	pop	r0
 54e:	cf 91       	pop	r28
 550:	df 91       	pop	r29
 552:	08 95       	ret

00000554 <DIO_getPinValue>:


void DIO_getPinValue(u8 PortId, u8 PinId, u8* PinValue)
{
 554:	df 93       	push	r29
 556:	cf 93       	push	r28
 558:	00 d0       	rcall	.+0      	; 0x55a <DIO_getPinValue+0x6>
 55a:	00 d0       	rcall	.+0      	; 0x55c <DIO_getPinValue+0x8>
 55c:	00 d0       	rcall	.+0      	; 0x55e <DIO_getPinValue+0xa>
 55e:	cd b7       	in	r28, 0x3d	; 61
 560:	de b7       	in	r29, 0x3e	; 62
 562:	89 83       	std	Y+1, r24	; 0x01
 564:	6a 83       	std	Y+2, r22	; 0x02
 566:	5c 83       	std	Y+4, r21	; 0x04
 568:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=3) && (PinId<=7) && (PinValue!= NULL))
 56a:	89 81       	ldd	r24, Y+1	; 0x01
 56c:	84 30       	cpi	r24, 0x04	; 4
 56e:	08 f0       	brcs	.+2      	; 0x572 <DIO_getPinValue+0x1e>
 570:	79 c0       	rjmp	.+242    	; 0x664 <DIO_getPinValue+0x110>
 572:	8a 81       	ldd	r24, Y+2	; 0x02
 574:	88 30       	cpi	r24, 0x08	; 8
 576:	08 f0       	brcs	.+2      	; 0x57a <DIO_getPinValue+0x26>
 578:	75 c0       	rjmp	.+234    	; 0x664 <DIO_getPinValue+0x110>
 57a:	8b 81       	ldd	r24, Y+3	; 0x03
 57c:	9c 81       	ldd	r25, Y+4	; 0x04
 57e:	00 97       	sbiw	r24, 0x00	; 0
 580:	09 f4       	brne	.+2      	; 0x584 <DIO_getPinValue+0x30>
 582:	70 c0       	rjmp	.+224    	; 0x664 <DIO_getPinValue+0x110>
	{
		switch(PortId)
 584:	89 81       	ldd	r24, Y+1	; 0x01
 586:	28 2f       	mov	r18, r24
 588:	30 e0       	ldi	r19, 0x00	; 0
 58a:	3e 83       	std	Y+6, r19	; 0x06
 58c:	2d 83       	std	Y+5, r18	; 0x05
 58e:	4d 81       	ldd	r20, Y+5	; 0x05
 590:	5e 81       	ldd	r21, Y+6	; 0x06
 592:	41 30       	cpi	r20, 0x01	; 1
 594:	51 05       	cpc	r21, r1
 596:	59 f1       	breq	.+86     	; 0x5ee <DIO_getPinValue+0x9a>
 598:	8d 81       	ldd	r24, Y+5	; 0x05
 59a:	9e 81       	ldd	r25, Y+6	; 0x06
 59c:	82 30       	cpi	r24, 0x02	; 2
 59e:	91 05       	cpc	r25, r1
 5a0:	34 f4       	brge	.+12     	; 0x5ae <DIO_getPinValue+0x5a>
 5a2:	2d 81       	ldd	r18, Y+5	; 0x05
 5a4:	3e 81       	ldd	r19, Y+6	; 0x06
 5a6:	21 15       	cp	r18, r1
 5a8:	31 05       	cpc	r19, r1
 5aa:	69 f0       	breq	.+26     	; 0x5c6 <DIO_getPinValue+0x72>
 5ac:	5b c0       	rjmp	.+182    	; 0x664 <DIO_getPinValue+0x110>
 5ae:	4d 81       	ldd	r20, Y+5	; 0x05
 5b0:	5e 81       	ldd	r21, Y+6	; 0x06
 5b2:	42 30       	cpi	r20, 0x02	; 2
 5b4:	51 05       	cpc	r21, r1
 5b6:	79 f1       	breq	.+94     	; 0x616 <DIO_getPinValue+0xc2>
 5b8:	8d 81       	ldd	r24, Y+5	; 0x05
 5ba:	9e 81       	ldd	r25, Y+6	; 0x06
 5bc:	83 30       	cpi	r24, 0x03	; 3
 5be:	91 05       	cpc	r25, r1
 5c0:	09 f4       	brne	.+2      	; 0x5c4 <DIO_getPinValue+0x70>
 5c2:	3d c0       	rjmp	.+122    	; 0x63e <DIO_getPinValue+0xea>
 5c4:	4f c0       	rjmp	.+158    	; 0x664 <DIO_getPinValue+0x110>
		{
			case DIO_PORTA:
			*PinValue = GET_BIT(PINA,PinId);
 5c6:	e9 e3       	ldi	r30, 0x39	; 57
 5c8:	f0 e0       	ldi	r31, 0x00	; 0
 5ca:	80 81       	ld	r24, Z
 5cc:	28 2f       	mov	r18, r24
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	8a 81       	ldd	r24, Y+2	; 0x02
 5d2:	88 2f       	mov	r24, r24
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	a9 01       	movw	r20, r18
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <DIO_getPinValue+0x8a>
 5da:	55 95       	asr	r21
 5dc:	47 95       	ror	r20
 5de:	8a 95       	dec	r24
 5e0:	e2 f7       	brpl	.-8      	; 0x5da <DIO_getPinValue+0x86>
 5e2:	ca 01       	movw	r24, r20
 5e4:	81 70       	andi	r24, 0x01	; 1
 5e6:	eb 81       	ldd	r30, Y+3	; 0x03
 5e8:	fc 81       	ldd	r31, Y+4	; 0x04
 5ea:	80 83       	st	Z, r24
 5ec:	3b c0       	rjmp	.+118    	; 0x664 <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTB:
			*PinValue = GET_BIT(PINB,PinId);
 5ee:	e6 e3       	ldi	r30, 0x36	; 54
 5f0:	f0 e0       	ldi	r31, 0x00	; 0
 5f2:	80 81       	ld	r24, Z
 5f4:	28 2f       	mov	r18, r24
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	8a 81       	ldd	r24, Y+2	; 0x02
 5fa:	88 2f       	mov	r24, r24
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	a9 01       	movw	r20, r18
 600:	02 c0       	rjmp	.+4      	; 0x606 <DIO_getPinValue+0xb2>
 602:	55 95       	asr	r21
 604:	47 95       	ror	r20
 606:	8a 95       	dec	r24
 608:	e2 f7       	brpl	.-8      	; 0x602 <DIO_getPinValue+0xae>
 60a:	ca 01       	movw	r24, r20
 60c:	81 70       	andi	r24, 0x01	; 1
 60e:	eb 81       	ldd	r30, Y+3	; 0x03
 610:	fc 81       	ldd	r31, Y+4	; 0x04
 612:	80 83       	st	Z, r24
 614:	27 c0       	rjmp	.+78     	; 0x664 <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTC:
			*PinValue = GET_BIT(PINC,PinId);
 616:	e3 e3       	ldi	r30, 0x33	; 51
 618:	f0 e0       	ldi	r31, 0x00	; 0
 61a:	80 81       	ld	r24, Z
 61c:	28 2f       	mov	r18, r24
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	8a 81       	ldd	r24, Y+2	; 0x02
 622:	88 2f       	mov	r24, r24
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	a9 01       	movw	r20, r18
 628:	02 c0       	rjmp	.+4      	; 0x62e <DIO_getPinValue+0xda>
 62a:	55 95       	asr	r21
 62c:	47 95       	ror	r20
 62e:	8a 95       	dec	r24
 630:	e2 f7       	brpl	.-8      	; 0x62a <DIO_getPinValue+0xd6>
 632:	ca 01       	movw	r24, r20
 634:	81 70       	andi	r24, 0x01	; 1
 636:	eb 81       	ldd	r30, Y+3	; 0x03
 638:	fc 81       	ldd	r31, Y+4	; 0x04
 63a:	80 83       	st	Z, r24
 63c:	13 c0       	rjmp	.+38     	; 0x664 <DIO_getPinValue+0x110>
			break;
			
			case DIO_PORTD:
			*PinValue = GET_BIT(PIND,PinId);
 63e:	e0 e3       	ldi	r30, 0x30	; 48
 640:	f0 e0       	ldi	r31, 0x00	; 0
 642:	80 81       	ld	r24, Z
 644:	28 2f       	mov	r18, r24
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	8a 81       	ldd	r24, Y+2	; 0x02
 64a:	88 2f       	mov	r24, r24
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	a9 01       	movw	r20, r18
 650:	02 c0       	rjmp	.+4      	; 0x656 <DIO_getPinValue+0x102>
 652:	55 95       	asr	r21
 654:	47 95       	ror	r20
 656:	8a 95       	dec	r24
 658:	e2 f7       	brpl	.-8      	; 0x652 <DIO_getPinValue+0xfe>
 65a:	ca 01       	movw	r24, r20
 65c:	81 70       	andi	r24, 0x01	; 1
 65e:	eb 81       	ldd	r30, Y+3	; 0x03
 660:	fc 81       	ldd	r31, Y+4	; 0x04
 662:	80 83       	st	Z, r24
	}
	else
	{
		// DO Nothing
	}
}
 664:	26 96       	adiw	r28, 0x06	; 6
 666:	0f b6       	in	r0, 0x3f	; 63
 668:	f8 94       	cli
 66a:	de bf       	out	0x3e, r29	; 62
 66c:	0f be       	out	0x3f, r0	; 63
 66e:	cd bf       	out	0x3d, r28	; 61
 670:	cf 91       	pop	r28
 672:	df 91       	pop	r29
 674:	08 95       	ret

00000676 <DIO_activePinInPullUpResistance>:


void DIO_activePinInPullUpResistance(u8 PortId, u8 PinId)
{
 676:	df 93       	push	r29
 678:	cf 93       	push	r28
 67a:	00 d0       	rcall	.+0      	; 0x67c <DIO_activePinInPullUpResistance+0x6>
 67c:	00 d0       	rcall	.+0      	; 0x67e <DIO_activePinInPullUpResistance+0x8>
 67e:	cd b7       	in	r28, 0x3d	; 61
 680:	de b7       	in	r29, 0x3e	; 62
 682:	89 83       	std	Y+1, r24	; 0x01
 684:	6a 83       	std	Y+2, r22	; 0x02
	if((PortId<=3) && (PinId<=7))
 686:	89 81       	ldd	r24, Y+1	; 0x01
 688:	84 30       	cpi	r24, 0x04	; 4
 68a:	08 f0       	brcs	.+2      	; 0x68e <DIO_activePinInPullUpResistance+0x18>
 68c:	72 c0       	rjmp	.+228    	; 0x772 <DIO_activePinInPullUpResistance+0xfc>
 68e:	8a 81       	ldd	r24, Y+2	; 0x02
 690:	88 30       	cpi	r24, 0x08	; 8
 692:	08 f0       	brcs	.+2      	; 0x696 <DIO_activePinInPullUpResistance+0x20>
 694:	6e c0       	rjmp	.+220    	; 0x772 <DIO_activePinInPullUpResistance+0xfc>
	{
		switch(PortId)
 696:	89 81       	ldd	r24, Y+1	; 0x01
 698:	28 2f       	mov	r18, r24
 69a:	30 e0       	ldi	r19, 0x00	; 0
 69c:	3c 83       	std	Y+4, r19	; 0x04
 69e:	2b 83       	std	Y+3, r18	; 0x03
 6a0:	8b 81       	ldd	r24, Y+3	; 0x03
 6a2:	9c 81       	ldd	r25, Y+4	; 0x04
 6a4:	81 30       	cpi	r24, 0x01	; 1
 6a6:	91 05       	cpc	r25, r1
 6a8:	49 f1       	breq	.+82     	; 0x6fc <DIO_activePinInPullUpResistance+0x86>
 6aa:	2b 81       	ldd	r18, Y+3	; 0x03
 6ac:	3c 81       	ldd	r19, Y+4	; 0x04
 6ae:	22 30       	cpi	r18, 0x02	; 2
 6b0:	31 05       	cpc	r19, r1
 6b2:	2c f4       	brge	.+10     	; 0x6be <DIO_activePinInPullUpResistance+0x48>
 6b4:	8b 81       	ldd	r24, Y+3	; 0x03
 6b6:	9c 81       	ldd	r25, Y+4	; 0x04
 6b8:	00 97       	sbiw	r24, 0x00	; 0
 6ba:	61 f0       	breq	.+24     	; 0x6d4 <DIO_activePinInPullUpResistance+0x5e>
 6bc:	5a c0       	rjmp	.+180    	; 0x772 <DIO_activePinInPullUpResistance+0xfc>
 6be:	2b 81       	ldd	r18, Y+3	; 0x03
 6c0:	3c 81       	ldd	r19, Y+4	; 0x04
 6c2:	22 30       	cpi	r18, 0x02	; 2
 6c4:	31 05       	cpc	r19, r1
 6c6:	71 f1       	breq	.+92     	; 0x724 <DIO_activePinInPullUpResistance+0xae>
 6c8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ca:	9c 81       	ldd	r25, Y+4	; 0x04
 6cc:	83 30       	cpi	r24, 0x03	; 3
 6ce:	91 05       	cpc	r25, r1
 6d0:	e9 f1       	breq	.+122    	; 0x74c <DIO_activePinInPullUpResistance+0xd6>
 6d2:	4f c0       	rjmp	.+158    	; 0x772 <DIO_activePinInPullUpResistance+0xfc>
		{
			case DIO_PORTA:
			SET_BIT(PORTA,PinId);
 6d4:	ab e3       	ldi	r26, 0x3B	; 59
 6d6:	b0 e0       	ldi	r27, 0x00	; 0
 6d8:	eb e3       	ldi	r30, 0x3B	; 59
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	48 2f       	mov	r20, r24
 6e0:	8a 81       	ldd	r24, Y+2	; 0x02
 6e2:	28 2f       	mov	r18, r24
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	02 2e       	mov	r0, r18
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <DIO_activePinInPullUpResistance+0x7c>
 6ee:	88 0f       	add	r24, r24
 6f0:	99 1f       	adc	r25, r25
 6f2:	0a 94       	dec	r0
 6f4:	e2 f7       	brpl	.-8      	; 0x6ee <DIO_activePinInPullUpResistance+0x78>
 6f6:	84 2b       	or	r24, r20
 6f8:	8c 93       	st	X, r24
 6fa:	3b c0       	rjmp	.+118    	; 0x772 <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTB:
			SET_BIT(PORTB,PinId);
 6fc:	a8 e3       	ldi	r26, 0x38	; 56
 6fe:	b0 e0       	ldi	r27, 0x00	; 0
 700:	e8 e3       	ldi	r30, 0x38	; 56
 702:	f0 e0       	ldi	r31, 0x00	; 0
 704:	80 81       	ld	r24, Z
 706:	48 2f       	mov	r20, r24
 708:	8a 81       	ldd	r24, Y+2	; 0x02
 70a:	28 2f       	mov	r18, r24
 70c:	30 e0       	ldi	r19, 0x00	; 0
 70e:	81 e0       	ldi	r24, 0x01	; 1
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	02 2e       	mov	r0, r18
 714:	02 c0       	rjmp	.+4      	; 0x71a <DIO_activePinInPullUpResistance+0xa4>
 716:	88 0f       	add	r24, r24
 718:	99 1f       	adc	r25, r25
 71a:	0a 94       	dec	r0
 71c:	e2 f7       	brpl	.-8      	; 0x716 <DIO_activePinInPullUpResistance+0xa0>
 71e:	84 2b       	or	r24, r20
 720:	8c 93       	st	X, r24
 722:	27 c0       	rjmp	.+78     	; 0x772 <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTC:
			SET_BIT(PORTC,PinId);
 724:	a5 e3       	ldi	r26, 0x35	; 53
 726:	b0 e0       	ldi	r27, 0x00	; 0
 728:	e5 e3       	ldi	r30, 0x35	; 53
 72a:	f0 e0       	ldi	r31, 0x00	; 0
 72c:	80 81       	ld	r24, Z
 72e:	48 2f       	mov	r20, r24
 730:	8a 81       	ldd	r24, Y+2	; 0x02
 732:	28 2f       	mov	r18, r24
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	02 2e       	mov	r0, r18
 73c:	02 c0       	rjmp	.+4      	; 0x742 <DIO_activePinInPullUpResistance+0xcc>
 73e:	88 0f       	add	r24, r24
 740:	99 1f       	adc	r25, r25
 742:	0a 94       	dec	r0
 744:	e2 f7       	brpl	.-8      	; 0x73e <DIO_activePinInPullUpResistance+0xc8>
 746:	84 2b       	or	r24, r20
 748:	8c 93       	st	X, r24
 74a:	13 c0       	rjmp	.+38     	; 0x772 <DIO_activePinInPullUpResistance+0xfc>
			break;
			
			case DIO_PORTD:
			SET_BIT(PORTD,PinId);
 74c:	a2 e3       	ldi	r26, 0x32	; 50
 74e:	b0 e0       	ldi	r27, 0x00	; 0
 750:	e2 e3       	ldi	r30, 0x32	; 50
 752:	f0 e0       	ldi	r31, 0x00	; 0
 754:	80 81       	ld	r24, Z
 756:	48 2f       	mov	r20, r24
 758:	8a 81       	ldd	r24, Y+2	; 0x02
 75a:	28 2f       	mov	r18, r24
 75c:	30 e0       	ldi	r19, 0x00	; 0
 75e:	81 e0       	ldi	r24, 0x01	; 1
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	02 2e       	mov	r0, r18
 764:	02 c0       	rjmp	.+4      	; 0x76a <DIO_activePinInPullUpResistance+0xf4>
 766:	88 0f       	add	r24, r24
 768:	99 1f       	adc	r25, r25
 76a:	0a 94       	dec	r0
 76c:	e2 f7       	brpl	.-8      	; 0x766 <DIO_activePinInPullUpResistance+0xf0>
 76e:	84 2b       	or	r24, r20
 770:	8c 93       	st	X, r24
	}
	else
	{
		// DO Nothing
	}
}
 772:	0f 90       	pop	r0
 774:	0f 90       	pop	r0
 776:	0f 90       	pop	r0
 778:	0f 90       	pop	r0
 77a:	cf 91       	pop	r28
 77c:	df 91       	pop	r29
 77e:	08 95       	ret

00000780 <KPD_init>:
#include "KPD_interface.h"
#include "KPD_config.h"


void KPD_init(void)
{
 780:	df 93       	push	r29
 782:	cf 93       	push	r28
 784:	cd b7       	in	r28, 0x3d	; 61
 786:	de b7       	in	r29, 0x3e	; 62
	//ROWS >> input
	DIO_setPinDirection(KPD_ROW0_PORT,KPD_ROW0_PIN,DIO_PIN_INPUT);
 788:	82 e0       	ldi	r24, 0x02	; 2
 78a:	63 e0       	ldi	r22, 0x03	; 3
 78c:	40 e0       	ldi	r20, 0x00	; 0
 78e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(KPD_ROW1_PORT,KPD_ROW1_PIN,DIO_PIN_INPUT);
 792:	82 e0       	ldi	r24, 0x02	; 2
 794:	64 e0       	ldi	r22, 0x04	; 4
 796:	40 e0       	ldi	r20, 0x00	; 0
 798:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(KPD_ROW2_PORT,KPD_ROW2_PIN,DIO_PIN_INPUT);
 79c:	82 e0       	ldi	r24, 0x02	; 2
 79e:	65 e0       	ldi	r22, 0x05	; 5
 7a0:	40 e0       	ldi	r20, 0x00	; 0
 7a2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(KPD_ROW3_PORT,KPD_ROW3_PIN,DIO_PIN_INPUT);
 7a6:	82 e0       	ldi	r24, 0x02	; 2
 7a8:	66 e0       	ldi	r22, 0x06	; 6
 7aa:	40 e0       	ldi	r20, 0x00	; 0
 7ac:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	
	//COLS >> output
	DIO_setPinDirection(KPD_COL0_PORT,KPD_COL0_PIN,DIO_PIN_OUTPUT);
 7b0:	80 e0       	ldi	r24, 0x00	; 0
 7b2:	64 e0       	ldi	r22, 0x04	; 4
 7b4:	41 e0       	ldi	r20, 0x01	; 1
 7b6:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(KPD_COL1_PORT,KPD_COL1_PIN,DIO_PIN_OUTPUT);
 7ba:	80 e0       	ldi	r24, 0x00	; 0
 7bc:	65 e0       	ldi	r22, 0x05	; 5
 7be:	41 e0       	ldi	r20, 0x01	; 1
 7c0:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(KPD_COL2_PORT,KPD_COL2_PIN,DIO_PIN_OUTPUT);
 7c4:	80 e0       	ldi	r24, 0x00	; 0
 7c6:	66 e0       	ldi	r22, 0x06	; 6
 7c8:	41 e0       	ldi	r20, 0x01	; 1
 7ca:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(KPD_COL3_PORT,KPD_COL3_PIN,DIO_PIN_OUTPUT);
 7ce:	80 e0       	ldi	r24, 0x00	; 0
 7d0:	67 e0       	ldi	r22, 0x07	; 7
 7d2:	41 e0       	ldi	r20, 0x01	; 1
 7d4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	
	//active internal pull up (ROWS initial value are ones)
	DIO_activePinInPullUpResistance(KPD_ROW0_PORT,KPD_ROW0_PIN);
 7d8:	82 e0       	ldi	r24, 0x02	; 2
 7da:	63 e0       	ldi	r22, 0x03	; 3
 7dc:	0e 94 3b 03 	call	0x676	; 0x676 <DIO_activePinInPullUpResistance>
	DIO_activePinInPullUpResistance(KPD_ROW1_PORT,KPD_ROW1_PIN);
 7e0:	82 e0       	ldi	r24, 0x02	; 2
 7e2:	64 e0       	ldi	r22, 0x04	; 4
 7e4:	0e 94 3b 03 	call	0x676	; 0x676 <DIO_activePinInPullUpResistance>
	DIO_activePinInPullUpResistance(KPD_ROW2_PORT,KPD_ROW2_PIN);
 7e8:	82 e0       	ldi	r24, 0x02	; 2
 7ea:	65 e0       	ldi	r22, 0x05	; 5
 7ec:	0e 94 3b 03 	call	0x676	; 0x676 <DIO_activePinInPullUpResistance>
	DIO_activePinInPullUpResistance(KPD_ROW3_PORT,KPD_ROW3_PIN);
 7f0:	82 e0       	ldi	r24, 0x02	; 2
 7f2:	66 e0       	ldi	r22, 0x06	; 6
 7f4:	0e 94 3b 03 	call	0x676	; 0x676 <DIO_activePinInPullUpResistance>
}
 7f8:	cf 91       	pop	r28
 7fa:	df 91       	pop	r29
 7fc:	08 95       	ret

000007fe <KPD_getValue>:


void KPD_getValue(u8* returnedValue)
{
 7fe:	df 93       	push	r29
 800:	cf 93       	push	r28
 802:	cd b7       	in	r28, 0x3d	; 61
 804:	de b7       	in	r29, 0x3e	; 62
 806:	ab 97       	sbiw	r28, 0x2b	; 43
 808:	0f b6       	in	r0, 0x3f	; 63
 80a:	f8 94       	cli
 80c:	de bf       	out	0x3e, r29	; 62
 80e:	0f be       	out	0x3f, r0	; 63
 810:	cd bf       	out	0x3d, r28	; 61
 812:	9e a3       	std	Y+38, r25	; 0x26
 814:	8d a3       	std	Y+37, r24	; 0x25
	if(returnedValue != NULL)
 816:	8d a1       	ldd	r24, Y+37	; 0x25
 818:	9e a1       	ldd	r25, Y+38	; 0x26
 81a:	00 97       	sbiw	r24, 0x00	; 0
 81c:	09 f4       	brne	.+2      	; 0x820 <KPD_getValue+0x22>
 81e:	d8 c0       	rjmp	.+432    	; 0x9d0 <__stack+0x171>
	{
		*returnedValue = KPD_NOT_PRESSED;
 820:	ed a1       	ldd	r30, Y+37	; 0x25
 822:	fe a1       	ldd	r31, Y+38	; 0x26
 824:	8f ef       	ldi	r24, 0xFF	; 255
 826:	80 83       	st	Z, r24
		
		u8 COLOS_PINS [4]={KPD_COL0_PIN ,KPD_COL1_PIN ,KPD_COL2_PIN ,KPD_COL3_PIN};
 828:	84 e0       	ldi	r24, 0x04	; 4
 82a:	8c 83       	std	Y+4, r24	; 0x04
 82c:	85 e0       	ldi	r24, 0x05	; 5
 82e:	8d 83       	std	Y+5, r24	; 0x05
 830:	86 e0       	ldi	r24, 0x06	; 6
 832:	8e 83       	std	Y+6, r24	; 0x06
 834:	87 e0       	ldi	r24, 0x07	; 7
 836:	8f 83       	std	Y+7, r24	; 0x07
		u8 COLOS_PORTS[4]={KPD_COL0_PORT,KPD_COL1_PORT,KPD_COL2_PORT,KPD_COL3_PORT};
 838:	18 86       	std	Y+8, r1	; 0x08
 83a:	19 86       	std	Y+9, r1	; 0x09
 83c:	1a 86       	std	Y+10, r1	; 0x0a
 83e:	1b 86       	std	Y+11, r1	; 0x0b
		u8 ROWS_PINS  [4]={KPD_ROW0_PIN ,KPD_ROW1_PIN ,KPD_ROW2_PIN ,KPD_ROW3_PIN};
 840:	83 e0       	ldi	r24, 0x03	; 3
 842:	8c 87       	std	Y+12, r24	; 0x0c
 844:	84 e0       	ldi	r24, 0x04	; 4
 846:	8d 87       	std	Y+13, r24	; 0x0d
 848:	85 e0       	ldi	r24, 0x05	; 5
 84a:	8e 87       	std	Y+14, r24	; 0x0e
 84c:	86 e0       	ldi	r24, 0x06	; 6
 84e:	8f 87       	std	Y+15, r24	; 0x0f
		u8 ROWS_PORTS [4]={KPD_ROW0_PORT,KPD_ROW1_PORT,KPD_ROW2_PORT,KPD_ROW3_PORT};
 850:	82 e0       	ldi	r24, 0x02	; 2
 852:	88 8b       	std	Y+16, r24	; 0x10
 854:	82 e0       	ldi	r24, 0x02	; 2
 856:	89 8b       	std	Y+17, r24	; 0x11
 858:	82 e0       	ldi	r24, 0x02	; 2
 85a:	8a 8b       	std	Y+18, r24	; 0x12
 85c:	82 e0       	ldi	r24, 0x02	; 2
 85e:	8b 8b       	std	Y+19, r24	; 0x13
		u8 KPD_keys[4][4]= KPD_KEYS;
 860:	ce 01       	movw	r24, r28
 862:	44 96       	adiw	r24, 0x14	; 20
 864:	98 a7       	std	Y+40, r25	; 0x28
 866:	8f a3       	std	Y+39, r24	; 0x27
 868:	e0 e6       	ldi	r30, 0x60	; 96
 86a:	f0 e0       	ldi	r31, 0x00	; 0
 86c:	fa a7       	std	Y+42, r31	; 0x2a
 86e:	e9 a7       	std	Y+41, r30	; 0x29
 870:	f0 e1       	ldi	r31, 0x10	; 16
 872:	fb a7       	std	Y+43, r31	; 0x2b
 874:	e9 a5       	ldd	r30, Y+41	; 0x29
 876:	fa a5       	ldd	r31, Y+42	; 0x2a
 878:	00 80       	ld	r0, Z
 87a:	89 a5       	ldd	r24, Y+41	; 0x29
 87c:	9a a5       	ldd	r25, Y+42	; 0x2a
 87e:	01 96       	adiw	r24, 0x01	; 1
 880:	9a a7       	std	Y+42, r25	; 0x2a
 882:	89 a7       	std	Y+41, r24	; 0x29
 884:	ef a1       	ldd	r30, Y+39	; 0x27
 886:	f8 a5       	ldd	r31, Y+40	; 0x28
 888:	00 82       	st	Z, r0
 88a:	8f a1       	ldd	r24, Y+39	; 0x27
 88c:	98 a5       	ldd	r25, Y+40	; 0x28
 88e:	01 96       	adiw	r24, 0x01	; 1
 890:	98 a7       	std	Y+40, r25	; 0x28
 892:	8f a3       	std	Y+39, r24	; 0x27
 894:	9b a5       	ldd	r25, Y+43	; 0x2b
 896:	91 50       	subi	r25, 0x01	; 1
 898:	9b a7       	std	Y+43, r25	; 0x2b
 89a:	eb a5       	ldd	r30, Y+43	; 0x2b
 89c:	ee 23       	and	r30, r30
 89e:	51 f7       	brne	.-44     	; 0x874 <__stack+0x15>
		                  
		u8 colsCounter,rowsCounter;
		u8 pinValue,pinFlag=0;
 8a0:	19 82       	std	Y+1, r1	; 0x01
		for(colsCounter=0;colsCounter<4;colsCounter++)
 8a2:	1b 82       	std	Y+3, r1	; 0x03
 8a4:	91 c0       	rjmp	.+290    	; 0x9c8 <__stack+0x169>
		{
			// Activate Each cols
		    DIO_setPinValue(COLOS_PORTS[colsCounter],COLOS_PINS[colsCounter],DIO_PIN_LOW);
 8a6:	8b 81       	ldd	r24, Y+3	; 0x03
 8a8:	28 2f       	mov	r18, r24
 8aa:	30 e0       	ldi	r19, 0x00	; 0
 8ac:	ce 01       	movw	r24, r28
 8ae:	08 96       	adiw	r24, 0x08	; 8
 8b0:	fc 01       	movw	r30, r24
 8b2:	e2 0f       	add	r30, r18
 8b4:	f3 1f       	adc	r31, r19
 8b6:	40 81       	ld	r20, Z
 8b8:	8b 81       	ldd	r24, Y+3	; 0x03
 8ba:	28 2f       	mov	r18, r24
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	ce 01       	movw	r24, r28
 8c0:	04 96       	adiw	r24, 0x04	; 4
 8c2:	fc 01       	movw	r30, r24
 8c4:	e2 0f       	add	r30, r18
 8c6:	f3 1f       	adc	r31, r19
 8c8:	90 81       	ld	r25, Z
 8ca:	84 2f       	mov	r24, r20
 8cc:	69 2f       	mov	r22, r25
 8ce:	40 e0       	ldi	r20, 0x00	; 0
 8d0:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
			
			for(rowsCounter=0;rowsCounter<4;rowsCounter++)
 8d4:	1a 82       	std	Y+2, r1	; 0x02
 8d6:	57 c0       	rjmp	.+174    	; 0x986 <__stack+0x127>
			{
				DIO_getPinValue(ROWS_PORTS[rowsCounter],ROWS_PINS[rowsCounter],&pinValue);
 8d8:	8a 81       	ldd	r24, Y+2	; 0x02
 8da:	28 2f       	mov	r18, r24
 8dc:	30 e0       	ldi	r19, 0x00	; 0
 8de:	ce 01       	movw	r24, r28
 8e0:	40 96       	adiw	r24, 0x10	; 16
 8e2:	fc 01       	movw	r30, r24
 8e4:	e2 0f       	add	r30, r18
 8e6:	f3 1f       	adc	r31, r19
 8e8:	40 81       	ld	r20, Z
 8ea:	8a 81       	ldd	r24, Y+2	; 0x02
 8ec:	28 2f       	mov	r18, r24
 8ee:	30 e0       	ldi	r19, 0x00	; 0
 8f0:	ce 01       	movw	r24, r28
 8f2:	0c 96       	adiw	r24, 0x0c	; 12
 8f4:	fc 01       	movw	r30, r24
 8f6:	e2 0f       	add	r30, r18
 8f8:	f3 1f       	adc	r31, r19
 8fa:	90 81       	ld	r25, Z
 8fc:	9e 01       	movw	r18, r28
 8fe:	2c 5d       	subi	r18, 0xDC	; 220
 900:	3f 4f       	sbci	r19, 0xFF	; 255
 902:	84 2f       	mov	r24, r20
 904:	69 2f       	mov	r22, r25
 906:	a9 01       	movw	r20, r18
 908:	0e 94 aa 02 	call	0x554	; 0x554 <DIO_getPinValue>
				if(0 == pinValue)
 90c:	8c a1       	ldd	r24, Y+36	; 0x24
 90e:	88 23       	and	r24, r24
 910:	b9 f5       	brne	.+110    	; 0x980 <__stack+0x121>
 912:	1a c0       	rjmp	.+52     	; 0x948 <__stack+0xe9>
				{
					while(0 == pinValue)
					{
						DIO_getPinValue(ROWS_PORTS[rowsCounter],ROWS_PINS[rowsCounter],&pinValue);
 914:	8a 81       	ldd	r24, Y+2	; 0x02
 916:	28 2f       	mov	r18, r24
 918:	30 e0       	ldi	r19, 0x00	; 0
 91a:	ce 01       	movw	r24, r28
 91c:	40 96       	adiw	r24, 0x10	; 16
 91e:	fc 01       	movw	r30, r24
 920:	e2 0f       	add	r30, r18
 922:	f3 1f       	adc	r31, r19
 924:	40 81       	ld	r20, Z
 926:	8a 81       	ldd	r24, Y+2	; 0x02
 928:	28 2f       	mov	r18, r24
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	ce 01       	movw	r24, r28
 92e:	0c 96       	adiw	r24, 0x0c	; 12
 930:	fc 01       	movw	r30, r24
 932:	e2 0f       	add	r30, r18
 934:	f3 1f       	adc	r31, r19
 936:	90 81       	ld	r25, Z
 938:	9e 01       	movw	r18, r28
 93a:	2c 5d       	subi	r18, 0xDC	; 220
 93c:	3f 4f       	sbci	r19, 0xFF	; 255
 93e:	84 2f       	mov	r24, r20
 940:	69 2f       	mov	r22, r25
 942:	a9 01       	movw	r20, r18
 944:	0e 94 aa 02 	call	0x554	; 0x554 <DIO_getPinValue>
			for(rowsCounter=0;rowsCounter<4;rowsCounter++)
			{
				DIO_getPinValue(ROWS_PORTS[rowsCounter],ROWS_PINS[rowsCounter],&pinValue);
				if(0 == pinValue)
				{
					while(0 == pinValue)
 948:	8c a1       	ldd	r24, Y+36	; 0x24
 94a:	88 23       	and	r24, r24
 94c:	19 f3       	breq	.-58     	; 0x914 <__stack+0xb5>
					{
						DIO_getPinValue(ROWS_PORTS[rowsCounter],ROWS_PINS[rowsCounter],&pinValue);
					}
					//pressed
					*returnedValue = KPD_keys[rowsCounter][colsCounter];
 94e:	8a 81       	ldd	r24, Y+2	; 0x02
 950:	28 2f       	mov	r18, r24
 952:	30 e0       	ldi	r19, 0x00	; 0
 954:	8b 81       	ldd	r24, Y+3	; 0x03
 956:	48 2f       	mov	r20, r24
 958:	50 e0       	ldi	r21, 0x00	; 0
 95a:	22 0f       	add	r18, r18
 95c:	33 1f       	adc	r19, r19
 95e:	22 0f       	add	r18, r18
 960:	33 1f       	adc	r19, r19
 962:	ce 01       	movw	r24, r28
 964:	01 96       	adiw	r24, 0x01	; 1
 966:	82 0f       	add	r24, r18
 968:	93 1f       	adc	r25, r19
 96a:	84 0f       	add	r24, r20
 96c:	95 1f       	adc	r25, r21
 96e:	fc 01       	movw	r30, r24
 970:	73 96       	adiw	r30, 0x13	; 19
 972:	80 81       	ld	r24, Z
 974:	ed a1       	ldd	r30, Y+37	; 0x25
 976:	fe a1       	ldd	r31, Y+38	; 0x26
 978:	80 83       	st	Z, r24
					pinFlag=1;
 97a:	81 e0       	ldi	r24, 0x01	; 1
 97c:	89 83       	std	Y+1, r24	; 0x01
 97e:	07 c0       	rjmp	.+14     	; 0x98e <__stack+0x12f>
		for(colsCounter=0;colsCounter<4;colsCounter++)
		{
			// Activate Each cols
		    DIO_setPinValue(COLOS_PORTS[colsCounter],COLOS_PINS[colsCounter],DIO_PIN_LOW);
			
			for(rowsCounter=0;rowsCounter<4;rowsCounter++)
 980:	8a 81       	ldd	r24, Y+2	; 0x02
 982:	8f 5f       	subi	r24, 0xFF	; 255
 984:	8a 83       	std	Y+2, r24	; 0x02
 986:	8a 81       	ldd	r24, Y+2	; 0x02
 988:	84 30       	cpi	r24, 0x04	; 4
 98a:	08 f4       	brcc	.+2      	; 0x98e <__stack+0x12f>
 98c:	a5 cf       	rjmp	.-182    	; 0x8d8 <__stack+0x79>
					pinFlag=1;
					break;
				}
			}
			
			if(1 == pinFlag)
 98e:	89 81       	ldd	r24, Y+1	; 0x01
 990:	81 30       	cpi	r24, 0x01	; 1
 992:	f1 f0       	breq	.+60     	; 0x9d0 <__stack+0x171>
			{
				break;
			}
			// Deactivate current cols
		    DIO_setPinValue(COLOS_PORTS[colsCounter],COLOS_PINS[colsCounter],DIO_PIN_HIGH);
 994:	8b 81       	ldd	r24, Y+3	; 0x03
 996:	28 2f       	mov	r18, r24
 998:	30 e0       	ldi	r19, 0x00	; 0
 99a:	ce 01       	movw	r24, r28
 99c:	08 96       	adiw	r24, 0x08	; 8
 99e:	fc 01       	movw	r30, r24
 9a0:	e2 0f       	add	r30, r18
 9a2:	f3 1f       	adc	r31, r19
 9a4:	40 81       	ld	r20, Z
 9a6:	8b 81       	ldd	r24, Y+3	; 0x03
 9a8:	28 2f       	mov	r18, r24
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	ce 01       	movw	r24, r28
 9ae:	04 96       	adiw	r24, 0x04	; 4
 9b0:	fc 01       	movw	r30, r24
 9b2:	e2 0f       	add	r30, r18
 9b4:	f3 1f       	adc	r31, r19
 9b6:	90 81       	ld	r25, Z
 9b8:	84 2f       	mov	r24, r20
 9ba:	69 2f       	mov	r22, r25
 9bc:	41 e0       	ldi	r20, 0x01	; 1
 9be:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
		u8 ROWS_PORTS [4]={KPD_ROW0_PORT,KPD_ROW1_PORT,KPD_ROW2_PORT,KPD_ROW3_PORT};
		u8 KPD_keys[4][4]= KPD_KEYS;
		                  
		u8 colsCounter,rowsCounter;
		u8 pinValue,pinFlag=0;
		for(colsCounter=0;colsCounter<4;colsCounter++)
 9c2:	8b 81       	ldd	r24, Y+3	; 0x03
 9c4:	8f 5f       	subi	r24, 0xFF	; 255
 9c6:	8b 83       	std	Y+3, r24	; 0x03
 9c8:	8b 81       	ldd	r24, Y+3	; 0x03
 9ca:	84 30       	cpi	r24, 0x04	; 4
 9cc:	08 f4       	brcc	.+2      	; 0x9d0 <__stack+0x171>
 9ce:	6b cf       	rjmp	.-298    	; 0x8a6 <__stack+0x47>
	}
	else
	{
		//DO Nothing
	}
}
 9d0:	ab 96       	adiw	r28, 0x2b	; 43
 9d2:	0f b6       	in	r0, 0x3f	; 63
 9d4:	f8 94       	cli
 9d6:	de bf       	out	0x3e, r29	; 62
 9d8:	0f be       	out	0x3f, r0	; 63
 9da:	cd bf       	out	0x3d, r28	; 61
 9dc:	cf 91       	pop	r28
 9de:	df 91       	pop	r29
 9e0:	08 95       	ret

000009e2 <main>:
#include "BIT_MATH.h"
#include "STD_TYPES.h"
#include "DIO_interface.h"
#include "KPD_interface.h"

int main (){
 9e2:	df 93       	push	r29
 9e4:	cf 93       	push	r28
 9e6:	0f 92       	push	r0
 9e8:	cd b7       	in	r28, 0x3d	; 61
 9ea:	de b7       	in	r29, 0x3e	; 62
	DIO_setPinDirection(DIO_PORTC,DIO_PIN2,DIO_PIN_OUTPUT);
 9ec:	82 e0       	ldi	r24, 0x02	; 2
 9ee:	62 e0       	ldi	r22, 0x02	; 2
 9f0:	41 e0       	ldi	r20, 0x01	; 1
 9f2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTC,DIO_PIN7,DIO_PIN_OUTPUT);
 9f6:	82 e0       	ldi	r24, 0x02	; 2
 9f8:	67 e0       	ldi	r22, 0x07	; 7
 9fa:	41 e0       	ldi	r20, 0x01	; 1
 9fc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTD,DIO_PIN3,DIO_PIN_OUTPUT);
 a00:	83 e0       	ldi	r24, 0x03	; 3
 a02:	63 e0       	ldi	r22, 0x03	; 3
 a04:	41 e0       	ldi	r20, 0x01	; 1
 a06:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>


	KPD_init();
 a0a:	0e 94 c0 03 	call	0x780	; 0x780 <KPD_init>

	while(1)
	{


KPD_getValue(&key);
 a0e:	ce 01       	movw	r24, r28
 a10:	01 96       	adiw	r24, 0x01	; 1
 a12:	0e 94 ff 03 	call	0x7fe	; 0x7fe <KPD_getValue>


if(key != KPD_NOT_PRESSED)
 a16:	89 81       	ldd	r24, Y+1	; 0x01
 a18:	8f 3f       	cpi	r24, 0xFF	; 255
 a1a:	c9 f3       	breq	.-14     	; 0xa0e <main+0x2c>
{
// display keypad value
	if (key == '0'){
 a1c:	89 81       	ldd	r24, Y+1	; 0x01
 a1e:	80 33       	cpi	r24, 0x30	; 48
 a20:	81 f4       	brne	.+32     	; 0xa42 <main+0x60>
		DIO_setPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_HIGH);
 a22:	82 e0       	ldi	r24, 0x02	; 2
 a24:	62 e0       	ldi	r22, 0x02	; 2
 a26:	41 e0       	ldi	r20, 0x01	; 1
 a28:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
			DIO_setPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_LOW);
 a2c:	82 e0       	ldi	r24, 0x02	; 2
 a2e:	67 e0       	ldi	r22, 0x07	; 7
 a30:	40 e0       	ldi	r20, 0x00	; 0
 a32:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
			DIO_setPinValue(DIO_PORTD,DIO_PIN3,DIO_PIN_LOW);
 a36:	83 e0       	ldi	r24, 0x03	; 3
 a38:	63 e0       	ldi	r22, 0x03	; 3
 a3a:	40 e0       	ldi	r20, 0x00	; 0
 a3c:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
 a40:	e6 cf       	rjmp	.-52     	; 0xa0e <main+0x2c>

	}

	else if(key == '1')
 a42:	89 81       	ldd	r24, Y+1	; 0x01
 a44:	81 33       	cpi	r24, 0x31	; 49
 a46:	81 f4       	brne	.+32     	; 0xa68 <main+0x86>
	{
		DIO_setPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_LOW);
 a48:	82 e0       	ldi	r24, 0x02	; 2
 a4a:	62 e0       	ldi	r22, 0x02	; 2
 a4c:	40 e0       	ldi	r20, 0x00	; 0
 a4e:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
					DIO_setPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_HIGH);
 a52:	82 e0       	ldi	r24, 0x02	; 2
 a54:	67 e0       	ldi	r22, 0x07	; 7
 a56:	41 e0       	ldi	r20, 0x01	; 1
 a58:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
					DIO_setPinValue(DIO_PORTD,DIO_PIN3,DIO_PIN_LOW);
 a5c:	83 e0       	ldi	r24, 0x03	; 3
 a5e:	63 e0       	ldi	r22, 0x03	; 3
 a60:	40 e0       	ldi	r20, 0x00	; 0
 a62:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
 a66:	d3 cf       	rjmp	.-90     	; 0xa0e <main+0x2c>

	}
	else if(key == '2')
 a68:	89 81       	ldd	r24, Y+1	; 0x01
 a6a:	82 33       	cpi	r24, 0x32	; 50
 a6c:	81 f4       	brne	.+32     	; 0xa8e <main+0xac>
		{
		DIO_setPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_LOW);
 a6e:	82 e0       	ldi	r24, 0x02	; 2
 a70:	62 e0       	ldi	r22, 0x02	; 2
 a72:	40 e0       	ldi	r20, 0x00	; 0
 a74:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
					DIO_setPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_LOW);
 a78:	82 e0       	ldi	r24, 0x02	; 2
 a7a:	67 e0       	ldi	r22, 0x07	; 7
 a7c:	40 e0       	ldi	r20, 0x00	; 0
 a7e:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
					DIO_setPinValue(DIO_PORTD,DIO_PIN3,DIO_PIN_HIGH);
 a82:	83 e0       	ldi	r24, 0x03	; 3
 a84:	63 e0       	ldi	r22, 0x03	; 3
 a86:	41 e0       	ldi	r20, 0x01	; 1
 a88:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
 a8c:	c0 cf       	rjmp	.-128    	; 0xa0e <main+0x2c>

		}
	else if(key == '3')
 a8e:	89 81       	ldd	r24, Y+1	; 0x01
 a90:	83 33       	cpi	r24, 0x33	; 51
 a92:	81 f4       	brne	.+32     	; 0xab4 <main+0xd2>
		{
		DIO_setPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_HIGH);
 a94:	82 e0       	ldi	r24, 0x02	; 2
 a96:	62 e0       	ldi	r22, 0x02	; 2
 a98:	41 e0       	ldi	r20, 0x01	; 1
 a9a:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
					DIO_setPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_HIGH);
 a9e:	82 e0       	ldi	r24, 0x02	; 2
 aa0:	67 e0       	ldi	r22, 0x07	; 7
 aa2:	41 e0       	ldi	r20, 0x01	; 1
 aa4:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
					DIO_setPinValue(DIO_PORTD,DIO_PIN3,DIO_PIN_HIGH);
 aa8:	83 e0       	ldi	r24, 0x03	; 3
 aaa:	63 e0       	ldi	r22, 0x03	; 3
 aac:	41 e0       	ldi	r20, 0x01	; 1
 aae:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
 ab2:	ad cf       	rjmp	.-166    	; 0xa0e <main+0x2c>

		}
	else{

		DIO_setPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_LOW);
 ab4:	82 e0       	ldi	r24, 0x02	; 2
 ab6:	62 e0       	ldi	r22, 0x02	; 2
 ab8:	40 e0       	ldi	r20, 0x00	; 0
 aba:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
							DIO_setPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_LOW);
 abe:	82 e0       	ldi	r24, 0x02	; 2
 ac0:	67 e0       	ldi	r22, 0x07	; 7
 ac2:	40 e0       	ldi	r20, 0x00	; 0
 ac4:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
							DIO_setPinValue(DIO_PORTD,DIO_PIN3,DIO_PIN_LOW);
 ac8:	83 e0       	ldi	r24, 0x03	; 3
 aca:	63 e0       	ldi	r22, 0x03	; 3
 acc:	40 e0       	ldi	r20, 0x00	; 0
 ace:	0e 94 33 01 	call	0x266	; 0x266 <DIO_setPinValue>
 ad2:	9d cf       	rjmp	.-198    	; 0xa0e <main+0x2c>

00000ad4 <_exit>:
 ad4:	f8 94       	cli

00000ad6 <__stop_program>:
 ad6:	ff cf       	rjmp	.-2      	; 0xad6 <__stop_program>
